

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Aug 25 11:12:46 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	dabs	1,0x103,1,_STKPTR_T1
    50                           	dabs	1,0x203,1,_STKPTR_T2
    51                           	dabs	1,0x303,1,_STKPTR_T3
    52                           	dabs	1,0x403,1,_STKPTR_T4
    53                           	dabs	1,0x503,1,_STKPTR_T5
    54                           	dabs	1,0x603,1,_STKPTR_T6
    55                           	dabs	1,0x60,1,_W_TEMPORAIRE
    56                           	dabs	1,0x100,66,_contexte1
    57                           	dabs	1,0x69,6,_queue
    58                           	dabs	1,0x71,2,_Tick_Count
    59                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    60                           	dabs	1,0x65,1,_DEMARRAGE
    61                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    62                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    63                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    64                           	dabs	1,0x66,1,_TP_appui
    65                           	dabs	1,0x67,1,_TP_x
    66                           	dabs	1,0x68,1,_TP_y
    67                           	dabs	1,0x74,1,_batterie
    68                           	dabs	1,0x7F,1,_n_octet_badge
    69                           	dabs	1,0x70,1,_pointeur_de_tache
    70                           	dabs	1,0x6F,1,_tache_active
    71                           	dabs	1,0x73,1,_vitesse
    72                           	dabs	1,0x75,10,_badge
    73                           	dabs	1,0x200,66,_contexte2
    74                           	dabs	1,0x300,66,_contexte3
    75                           	dabs	1,0x400,66,_contexte4
    76                           	dabs	1,0x500,66,_contexte5
    77                           	dabs	1,0x600,66,_contexte6
    78  0000                     
    79                           ; 1 bytes @ 0x20
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    82 ;;
    83 ;; *************** function _main *****************
    84 ;; Defined at:
    85 ;;		line 3 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;                  1    wreg      void 
    92 ;; Registers used:
    93 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    99 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   103 ;;Total ram usage:        0 bytes
   104 ;; Hardware stack levels required when called:    7
   105 ;; This function calls:
   106 ;;		_Init
   107 ;;		_initialisation_des_ports
   108 ;;		_initialisation_du_systeme
   109 ;; This function is called by:
   110 ;;		Startup code after reset
   111 ;; This function uses a non-reentrant model
   112 ;;
   113                           
   114                           	psect	text0
   115  001EE2                     __ptext0:
   116                           	opt stack 0
   117  0000                     _TOSH	set	4094
   118  0000                     _TOSL	set	4093
   119  0000                     _TOSU	set	4095
   120  001EE2                     _main:
   121                           	opt stack 24
   122                           
   123                           ;main.c: 5: initialisation_des_ports();
   124                           
   125                           ;incstack = 0
   126  001EE2  ECC1  F00D         	call	_initialisation_des_ports	;wreg free
   127                           
   128                           ;main.c: 6: initialisation_du_systeme();
   129  001EE6  ECB8  F009         	call	_initialisation_du_systeme	;wreg free
   130                           
   131                           ;main.c: 7: Init(1);
   132  001EEA  0E01               	movlw	1
   133  001EEC  EC95  F00F         	call	_Init
   134                           
   135                           ;main.c: 10: T0CONbits.TMR0ON=1;
   136  001EF0  8ED5               	bsf	4053,7,c	;volatile
   137                           
   138                           ;main.c: 11: T0IF=1;
   139  001EF2  84F2               	bsf	intcon,2,c	;volatile
   140                           
   141                           ;main.c: 12: (INTCONbits.GIE = 1);
   142  001EF4  8EF2               	bsf	intcon,7,c	;volatile
   143  001EF6                     l3972:
   144                           
   145                           ;main.c: 16: __nop();
   146  001EF6  F000               	nop	
   147  001EF8  D7FE               	goto	l3972
   148  001EFA                     __end_of_main:
   149                           	opt stack 0
   150                           intcon	equ	0xFF2
   151                           
   152                           	psect	nvCOMRAM
   153  000021                     __pnvCOMRAM:
   154                           	opt stack 0
   155  000021                     _fptr:
   156                           	opt stack 0
   157  000021                     	ds	3
   158  000024                     _puc:
   159                           	opt stack 0
   160  000024                     	ds	2
   161  000026                     _val_tos:
   162                           	opt stack 0
   163  000026                     	ds	3
   164  0000                     _ANCON0	set	3877
   165  0000                     _ANCON0bits	set	3877
   166  0000                     _ANCON1	set	3876
   167  0000                     _ANCON1bits	set	3876
   168  0000                     _ANCON2	set	3875
   169  0000                     _MEMCON	set	3878
   170  0000                     _PADCFG1bits	set	3923
   171  0000                     _TMR0	set	4054
   172  0000                     _ADCON0	set	4034
   173  0000                     _ADCON0bits	set	4034
   174  0000                     _ADCON1	set	4033
   175  0000                     _ADCON2	set	4032
   176  0000                     _ADRESH	set	4036
   177  0000                     _ADRESL	set	4035
   178  0000                     _BSR	set	4064
   179  0000                     _FSR0H	set	4074
   180  0000                     _FSR0L	set	4073
   181  0000                     _FSR1H	set	4066
   182  0000                     _FSR1L	set	4065
   183  0000                     _FSR2H	set	4058
   184  0000                     _FSR2L	set	4057
   185  0000                     _INTCON2bits	set	4081
   186  0000                     _INTCONbits	set	4082
   187  0000                     _LATCbits	set	3979
   188  0000                     _LATDbits	set	3980
   189  0000                     _LATGbits	set	3983
   190  0000                     _LATH	set	3984
   191  0000                     _LATJ	set	3985
   192  0000                     _LATJbits	set	3985
   193  0000                     _PCLATH	set	4090
   194  0000                     _PCLATU	set	4091
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTDbits	set	3971
   197  0000                     _PORTEbits	set	3972
   198  0000                     _PORTH	set	3975
   199  0000                     _POSTINC0	set	4078
   200  0000                     _POSTINC1	set	4070
   201  0000                     _PRODH	set	4084
   202  0000                     _PRODL	set	4083
   203  0000                     _STATUS	set	4056
   204  0000                     _STKPTR	set	4092
   205  0000                     _T0CON	set	4053
   206  0000                     _T0CONbits	set	4053
   207  0000                     _TABLAT	set	4085
   208  0000                     _TBLPTRH	set	4087
   209  0000                     _TBLPTRL	set	4086
   210  0000                     _TBLPTRU	set	4088
   211  0000                     _TRISCbits	set	3988
   212  0000                     _TRISDbits	set	3989
   213  0000                     _TRISGbits	set	3992
   214  0000                     _TRISH	set	3993
   215  0000                     _TRISJ	set	3994
   216  0000                     _WREG	set	4072
   217  0000                     _T0IE	set	32661
   218  0000                     _T0IF	set	32658
   219                           intcon	equ	0xFF2
   220                           
   221                           	psect	smallconst
   222  001000                     __psmallconst:
   223                           	opt stack 0
   224  001000  00                 	db	0
   225  001001                     STR_14:
   226  001001  20                 	db	32
   227  001002  41                 	db	65	;'A'
   228  001003  55                 	db	85	;'U'
   229  001004  43                 	db	67	;'C'
   230  001005  55                 	db	85	;'U'
   231  001006  4E                 	db	78	;'N'
   232  001007  20                 	db	32
   233  001008  20                 	db	32
   234  001009  20                 	db	32
   235  00100A  20                 	db	32
   236  00100B  20                 	db	32
   237  00100C  20                 	db	32
   238  00100D  20                 	db	32
   239  00100E  20                 	db	32
   240  00100F  20                 	db	32
   241  001010  20                 	db	32
   242  001011  20                 	db	32
   243  001012  20                 	db	32
   244  001013  20                 	db	32
   245  001014  20                 	db	32
   246  001015  00                 	db	0
   247  001016                     STR_7:
   248  001016  54                 	db	84	;'T'
   249  001017  65                 	db	101	;'e'
   250  001018  6D                 	db	109	;'m'
   251  001019  70                 	db	112	;'p'
   252  00101A  2E                 	db	46
   253  00101B  20                 	db	32
   254  00101C  48                 	db	72	;'H'
   255  00101D  75                 	db	117	;'u'
   256  00101E  69                 	db	105	;'i'
   257  00101F  6C                 	db	108	;'l'
   258  001020  65                 	db	101	;'e'
   259  001021  3A                 	db	58	;':'
   260  001022  00                 	db	0
   261  001023                     STR_15:
   262  001023  58                 	db	88	;'X'
   263  001024  2D                 	db	45
   264  001025  4A                 	db	74	;'J'
   265  001026  6F                 	db	111	;'o'
   266  001027  79                 	db	121	;'y'
   267  001028  73                 	db	115	;'s'
   268  001029  74                 	db	116	;'t'
   269  00102A  69                 	db	105	;'i'
   270  00102B  63                 	db	99	;'c'
   271  00102C  6B                 	db	107	;'k'
   272  00102D  3A                 	db	58	;':'
   273  00102E  00                 	db	0
   274  00102F                     STR_16:
   275  00102F  59                 	db	89	;'Y'
   276  001030  2D                 	db	45
   277  001031  4A                 	db	74	;'J'
   278  001032  6F                 	db	111	;'o'
   279  001033  79                 	db	121	;'y'
   280  001034  73                 	db	115	;'s'
   281  001035  74                 	db	116	;'t'
   282  001036  69                 	db	105	;'i'
   283  001037  63                 	db	99	;'c'
   284  001038  6B                 	db	107	;'k'
   285  001039  3A                 	db	58	;':'
   286  00103A  00                 	db	0
   287  00103B                     STR_6:
   288  00103B  54                 	db	84	;'T'
   289  00103C  65                 	db	101	;'e'
   290  00103D  6D                 	db	109	;'m'
   291  00103E  70                 	db	112	;'p'
   292  00103F  2E                 	db	46
   293  001040  20                 	db	32
   294  001041  45                 	db	69	;'E'
   295  001042  61                 	db	97	;'a'
   296  001043  75                 	db	117	;'u'
   297  001044  3A                 	db	58	;':'
   298  001045  00                 	db	0
   299  001046                     STR_10:
   300  001046  42                 	db	66	;'B'
   301  001047  61                 	db	97	;'a'
   302  001048  74                 	db	116	;'t'
   303  001049  74                 	db	116	;'t'
   304  00104A  65                 	db	101	;'e'
   305  00104B  72                 	db	114	;'r'
   306  00104C  69                 	db	105	;'i'
   307  00104D  65                 	db	101	;'e'
   308  00104E  3A                 	db	58	;':'
   309  00104F  00                 	db	0
   310  001050                     STR_9:
   311  001050  56                 	db	86	;'V'
   312  001051  69                 	db	105	;'i'
   313  001052  74                 	db	116	;'t'
   314  001053  65                 	db	101	;'e'
   315  001054  73                 	db	115	;'s'
   316  001055  73                 	db	115	;'s'
   317  001056  65                 	db	101	;'e'
   318  001057  3A                 	db	58	;':'
   319  001058  00                 	db	0
   320  001059                     STR_1:
   321  001059  4D                 	db	77	;'M'
   322  00105A  61                 	db	97	;'a'
   323  00105B  72                 	db	114	;'r'
   324  00105C  63                 	db	99	;'c'
   325  00105D  68                 	db	104	;'h'
   326  00105E  65                 	db	101	;'e'
   327  00105F  3A                 	db	58	;':'
   328  001060  00                 	db	0
   329  001061                     STR_13:
   330  001061  42                 	db	66	;'B'
   331  001062  61                 	db	97	;'a'
   332  001063  64                 	db	100	;'d'
   333  001064  67                 	db	103	;'g'
   334  001065  65                 	db	101	;'e'
   335  001066  3A                 	db	58	;':'
   336  001067  00                 	db	0
   337  001068                     STR_5:
   338  001068  53                 	db	83	;'S'
   339  001069  69                 	db	105	;'i'
   340  00106A  65                 	db	101	;'e'
   341  00106B  67                 	db	103	;'g'
   342  00106C  65                 	db	101	;'e'
   343  00106D  3A                 	db	58	;':'
   344  00106E  00                 	db	0
   345  00106F                     STR_11:
   346  00106F  28                 	db	40
   347  001070  28                 	db	40
   348  001071  21                 	db	33
   349  001072  29                 	db	41
   350  001073  29                 	db	41
   351  001074  00                 	db	0
   352  001075                     STR_8:
   353  001075  43                 	db	67	;'C'
   354  001076  68                 	db	104	;'h'
   355  001077  6F                 	db	111	;'o'
   356  001078  63                 	db	99	;'c'
   357  001079  3A                 	db	58	;':'
   358  00107A  00                 	db	0
   359  00107B                     STR_18:
   360  00107B  20                 	db	32
   361  00107C  79                 	db	121	;'y'
   362  00107D  3D                 	db	61	;'='
   363  00107E  00                 	db	0
   364  00107F                     STR_4:
   365  00107F  4E                 	db	78	;'N'
   366  001080  20                 	db	32
   367  001081  00                 	db	0
   368  001082                     STR_17:
   369  001082  78                 	db	120	;'x'
   370  001083  3D                 	db	61	;'='
   371  001084  00                 	db	0
   372  001085                     STR_3:
   373  001085  41                 	db	65	;'A'
   374  001086  52                 	db	82	;'R'
   375  001087  00                 	db	0
   376  001088                     STR_2:
   377  001088  41                 	db	65	;'A'
   378  001089  56                 	db	86	;'V'
   379  00108A  00                 	db	0
   380  0000                     
   381                           ; #config settings
   382  00108B  00                 	db	0	; dummy byte at the end
   383  0000                     intcon	equ	0xFF2
   384                           
   385                           	psect	cinit
   386  001F3E                     __pcinit:
   387                           	opt stack 0
   388  001F3E                     start_initialization:
   389                           	opt stack 0
   390  001F3E                     __initialization:
   391                           	opt stack 0
   392                           
   393                           ; Clear objects allocated to COMRAM (4 bytes)
   394  001F3E  6A2C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   395  001F40  6A2B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   396  001F42  6A2A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   397  001F44  6A29               	clrf	__pbssCOMRAM& (0+255),c
   398  001F46                     end_of_initialization:
   399                           	opt stack 0
   400  001F46                     __end_of__initialization:
   401                           	opt stack 0
   402  001F46  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   403  001F48  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   404  001F4A  0100               	movlb	0
   405  001F4C  EF71  F00F         	goto	_main	;jump to C main() function
   406                           intcon	equ	0xFF2
   407                           
   408                           	psect	bssCOMRAM
   409  000029                     __pbssCOMRAM:
   410                           	opt stack 0
   411  000029                     _tc:
   412                           	opt stack 0
   413  000029                     	ds	3
   414  00002C                     _Val_sem_cna:
   415                           	opt stack 0
   416  00002C                     	ds	1
   417                           intcon	equ	0xFF2
   418                           
   419                           	psect	cstackCOMRAM
   420  000001                     __pcstackCOMRAM:
   421                           	opt stack 0
   422  000001                     ?___awdiv:
   423                           	opt stack 0
   424  000001                     ?___awmod:
   425                           	opt stack 0
   426  000001                     ?___lwdiv:
   427                           	opt stack 0
   428  000001                     lecture_8bit_analogique@ret:
   429                           	opt stack 0
   430  000001                     write_d_aff@data:
   431                           	opt stack 0
   432  000001                     write_c_aff@command:
   433                           	opt stack 0
   434  000001                     check_status_ok@res:
   435                           	opt stack 0
   436  000001                     delai_us_char@ucdelai:
   437                           	opt stack 0
   438  000001                     tp_delai@itpd:
   439                           	opt stack 0
   440  000001                     stid_delai_us@isdu:
   441                           	opt stack 0
   442  000001                     ___awdiv@dividend:
   443                           	opt stack 0
   444  000001                     ___awmod@dividend:
   445                           	opt stack 0
   446  000001                     ___lwdiv@dividend:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x0
   450  000001                     	ds	1
   451  000002                     lecture_8bit_analogique@channel:
   452                           	opt stack 0
   453  000002                     wait_status_ok@err:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x1
   457  000002                     	ds	1
   458  000003                     wait_status_ok@status:
   459                           	opt stack 0
   460  000003                     lecture_normale@stid_id:
   461                           	opt stack 0
   462  000003                     ___awdiv@divisor:
   463                           	opt stack 0
   464  000003                     ___awmod@divisor:
   465                           	opt stack 0
   466  000003                     ___lwdiv@divisor:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x2
   470  000003                     	ds	1
   471  000004                     wait_status_ok@res:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x3
   475  000004                     	ds	1
   476  000005                     command@res:
   477                           	opt stack 0
   478  000005                     d1command@cmd:
   479                           	opt stack 0
   480  000005                     d2command@d2:
   481                           	opt stack 0
   482  000005                     lecture_normale@temps_attente:
   483                           	opt stack 0
   484  000005                     ___awdiv@counter:
   485                           	opt stack 0
   486  000005                     ___awmod@counter:
   487                           	opt stack 0
   488  000005                     ___lwdiv@quotient:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x4
   492  000005                     	ds	1
   493  000006                     command@cmd:
   494                           	opt stack 0
   495  000006                     d1command@d1:
   496                           	opt stack 0
   497  000006                     d2command@cmd:
   498                           	opt stack 0
   499  000006                     lecture_normale@n_octet:
   500                           	opt stack 0
   501  000006                     ___awdiv@sign:
   502                           	opt stack 0
   503  000006                     ___awmod@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x5
   507  000006                     	ds	1
   508  000007                     d1command@res:
   509                           	opt stack 0
   510  000007                     d2command@d1:
   511                           	opt stack 0
   512  000007                     lecture_normale@n_bit:
   513                           	opt stack 0
   514  000007                     ___lwdiv@counter:
   515                           	opt stack 0
   516  000007                     ___awdiv@quotient:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  000007                     	ds	1
   521  000008                     ??_tache2:
   522  000008                     d2command@res:
   523                           	opt stack 0
   524  000008                     draw_char@dccar:
   525                           	opt stack 0
   526  000008                     draw_hex8@octet:
   527                           	opt stack 0
   528  000008                     lecture_normale@octet:
   529                           	opt stack 0
   530  000008                     draw_string@tableau:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x7
   534  000008                     	ds	1
   535  000009                     tache6@n:
   536                           	opt stack 0
   537  000009                     initialisation_afficheur@error_count:
   538                           	opt stack 0
   539  000009                     draw_hex8@c:
   540                           	opt stack 0
   541  000009                     goto_lico@colonne:
   542                           	opt stack 0
   543  000009                     plot1@y:
   544                           	opt stack 0
   545  000009                     clear_text@add:
   546                           	opt stack 0
   547  000009                     clear_graphics@add:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x8
   551  000009                     	ds	1
   552  00000A                     goto_lico@ligne:
   553                           	opt stack 0
   554  00000A                     tache2@ix:
   555                           	opt stack 0
   556  00000A                     plot1@add:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x9
   560  00000A                     	ds	1
   561  00000B                     goto_lico@adr:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0xA
   565  00000B                     	ds	1
   566  00000C                     plot1@x:
   567                           	opt stack 0
   568  00000C                     tache2@iy:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0xB
   572  00000C                     	ds	1
   573  00000D                     tache1@i:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0xC
   577  00000D                     	ds	1
   578  00000E                     tache2@hx:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     tache2@lx:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0xE
   587  00000F                     	ds	1
   588  000010                     tache2@hy:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0xF
   592  000010                     	ds	1
   593  000011                     tache2@ly:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x10
   597  000011                     	ds	1
   598  000012                     ??_fonction_d_interruption:
   599                           
   600                           ; 1 bytes @ 0x11
   601  000012                     	ds	14
   602  000020                     initialisation_du_systeme@temp:
   603                           	opt stack 0
   604  000020                     Init@sem:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x1F
   608  000020                     	ds	1
   609  000021                     intcon	equ	0xFF2
   610                           
   611 ;; *************** function _initialisation_du_systeme *****************
   612 ;; Defined at:
   613 ;;		line 131 in file "systeme.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  temp            1   31[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    6
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text1
   642  001370                     __ptext1:
   643                           	opt stack 0
   644  001370                     _initialisation_du_systeme:
   645                           	opt stack 24
   646                           
   647                           ;systeme.c: 133: unsigned char temp;
   648                           ;systeme.c: 135: DEMARRAGE=1;
   649                           
   650                           ;incstack = 0
   651  001370  0E01               	movlw	1
   652  001372  0100               	movlb	0	; () banked
   653  001374  6F65               	movwf	101,b
   654                           
   655                           ;systeme.c: 138: queue[0]=1;
   656  001376  0E01               	movlw	1
   657  001378  0100               	movlb	0	; () banked
   658  00137A  6F69               	movwf	105,b
   659                           
   660                           ;systeme.c: 139: queue[1]=2;
   661  00137C  0E02               	movlw	2
   662  00137E  0100               	movlb	0	; () banked
   663  001380  6F6A               	movwf	106,b
   664                           
   665                           ;systeme.c: 140: queue[2]=3;
   666  001382  0E03               	movlw	3
   667  001384  0100               	movlb	0	; () banked
   668  001386  6F6B               	movwf	107,b
   669                           
   670                           ;systeme.c: 141: queue[3]=4;
   671  001388  0E04               	movlw	4
   672  00138A  0100               	movlb	0	; () banked
   673  00138C  6F6C               	movwf	108,b
   674                           
   675                           ;systeme.c: 142: queue[4]=5;
   676  00138E  0E05               	movlw	5
   677  001390  0100               	movlb	0	; () banked
   678  001392  6F6D               	movwf	109,b
   679                           
   680                           ;systeme.c: 143: queue[5]=6;
   681  001394  0E06               	movlw	6
   682  001396  0100               	movlb	0	; () banked
   683  001398  6F6E               	movwf	110,b
   684                           
   685                           ;systeme.c: 145: pointeur_de_tache=6-1;
   686  00139A  0E05               	movlw	5
   687  00139C  0100               	movlb	0	; () banked
   688  00139E  6F70               	movwf	112,b
   689                           
   690                           ; BSR set to: 0
   691                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   692  0013A0  0100               	movlb	0	; () banked
   693  0013A2  5170               	movf	112,w,b
   694  0013A4  0D01               	mullw	1
   695  0013A6  0E69               	movlw	105
   696  0013A8  24F3               	addwf	prodl,w,c
   697  0013AA  6ED9               	movwf	fsr2l,c
   698  0013AC  0E00               	movlw	0
   699  0013AE  20F4               	addwfc	prodh,w,c
   700  0013B0  6EDA               	movwf	fsr2h,c
   701  0013B2  50DF               	movf	indf2,w,c
   702  0013B4  0100               	movlb	0	; () banked
   703  0013B6  6F6F               	movwf	111,b
   704                           
   705                           ; BSR set to: 0
   706                           ;systeme.c: 151: temp=STKPTR;
   707  0013B8  CFFC F020          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   708                           
   709                           ; BSR set to: 0
   710                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short long) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   711  0013BC  0E02               	movlw	2
   712  0013BE  6EFC               	movwf	stkptr,c	;volatile
   713                           
   714                           ; BSR set to: 0
   715  0013C0  0E8C               	movlw	low _tache1
   716  0013C2  6E21               	movwf	_fptr,c
   717  0013C4  0E10               	movlw	high _tache1
   718  0013C6  6E22               	movwf	_fptr+1,c
   719  0013C8  0E00               	movlw	low (_tache1 shr (0+16))
   720  0013CA  6E23               	movwf	_fptr+2,c
   721                           
   722                           ; BSR set to: 0
   723  0013CC  C021  F026         	movff	_fptr,_val_tos
   724  0013D0  C022  F027         	movff	_fptr+1,_val_tos+1
   725  0013D4  C023  F028         	movff	_fptr+2,_val_tos+2
   726                           
   727                           ; BSR set to: 0
   728  0013D8  0E26               	movlw	low _val_tos
   729  0013DA  6E24               	movwf	_puc,c
   730  0013DC  0E00               	movlw	high _val_tos
   731  0013DE  6E25               	movwf	_puc+1,c
   732                           
   733                           ; BSR set to: 0
   734  0013E0  C024  FFD9         	movff	_puc,fsr2l
   735  0013E4  C025  FFDA         	movff	_puc+1,fsr2h
   736  0013E8  50DF               	movf	indf2,w,c
   737  0013EA  6EFD               	movwf	tosl,c	;volatile
   738                           
   739                           ; BSR set to: 0
   740  0013EC  4A24               	infsnz	_puc,f,c
   741  0013EE  2A25               	incf	_puc+1,f,c
   742                           
   743                           ; BSR set to: 0
   744  0013F0  C024  FFD9         	movff	_puc,fsr2l
   745  0013F4  C025  FFDA         	movff	_puc+1,fsr2h
   746  0013F8  50DF               	movf	indf2,w,c
   747  0013FA  6EFE               	movwf	tosh,c	;volatile
   748                           
   749                           ; BSR set to: 0
   750  0013FC  4A24               	infsnz	_puc,f,c
   751  0013FE  2A25               	incf	_puc+1,f,c
   752                           
   753                           ; BSR set to: 0
   754  001400  C024  FFD9         	movff	_puc,fsr2l
   755  001404  C025  FFDA         	movff	_puc+1,fsr2h
   756  001408  50DF               	movf	indf2,w,c
   757  00140A  6EFF               	movwf	tosu,c	;volatile
   758                           
   759                           ; BSR set to: 0
   760                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short long) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   761  00140C  0E07               	movlw	7
   762  00140E  6EFC               	movwf	stkptr,c	;volatile
   763                           
   764                           ; BSR set to: 0
   765  001410  0ED6               	movlw	low _tache2
   766  001412  6E21               	movwf	_fptr,c
   767  001414  0E15               	movlw	high _tache2
   768  001416  6E22               	movwf	_fptr+1,c
   769  001418  0E00               	movlw	low (_tache2 shr (0+16))
   770  00141A  6E23               	movwf	_fptr+2,c
   771                           
   772                           ; BSR set to: 0
   773  00141C  C021  F026         	movff	_fptr,_val_tos
   774  001420  C022  F027         	movff	_fptr+1,_val_tos+1
   775  001424  C023  F028         	movff	_fptr+2,_val_tos+2
   776                           
   777                           ; BSR set to: 0
   778  001428  0E26               	movlw	low _val_tos
   779  00142A  6E24               	movwf	_puc,c
   780  00142C  0E00               	movlw	high _val_tos
   781  00142E  6E25               	movwf	_puc+1,c
   782                           
   783                           ; BSR set to: 0
   784  001430  C024  FFD9         	movff	_puc,fsr2l
   785  001434  C025  FFDA         	movff	_puc+1,fsr2h
   786  001438  50DF               	movf	indf2,w,c
   787  00143A  6EFD               	movwf	tosl,c	;volatile
   788                           
   789                           ; BSR set to: 0
   790  00143C  4A24               	infsnz	_puc,f,c
   791  00143E  2A25               	incf	_puc+1,f,c
   792                           
   793                           ; BSR set to: 0
   794  001440  C024  FFD9         	movff	_puc,fsr2l
   795  001444  C025  FFDA         	movff	_puc+1,fsr2h
   796  001448  50DF               	movf	indf2,w,c
   797  00144A  6EFE               	movwf	tosh,c	;volatile
   798                           
   799                           ; BSR set to: 0
   800  00144C  4A24               	infsnz	_puc,f,c
   801  00144E  2A25               	incf	_puc+1,f,c
   802                           
   803                           ; BSR set to: 0
   804  001450  C024  FFD9         	movff	_puc,fsr2l
   805  001454  C025  FFDA         	movff	_puc+1,fsr2h
   806  001458  50DF               	movf	indf2,w,c
   807  00145A  6EFF               	movwf	tosu,c	;volatile
   808                           
   809                           ; BSR set to: 0
   810                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short long) fptr; puc=(unsign
      +                          ed char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   811  00145C  0E0C               	movlw	12
   812  00145E  6EFC               	movwf	stkptr,c	;volatile
   813                           
   814                           ; BSR set to: 0
   815  001460  0ED6               	movlw	low _tache3
   816  001462  6E21               	movwf	_fptr,c
   817  001464  0E1C               	movlw	high _tache3
   818  001466  6E22               	movwf	_fptr+1,c
   819  001468  0E00               	movlw	low (_tache3 shr (0+16))
   820  00146A  6E23               	movwf	_fptr+2,c
   821                           
   822                           ; BSR set to: 0
   823  00146C  C021  F026         	movff	_fptr,_val_tos
   824  001470  C022  F027         	movff	_fptr+1,_val_tos+1
   825  001474  C023  F028         	movff	_fptr+2,_val_tos+2
   826                           
   827                           ; BSR set to: 0
   828  001478  0E26               	movlw	low _val_tos
   829  00147A  6E24               	movwf	_puc,c
   830  00147C  0E00               	movlw	high _val_tos
   831  00147E  6E25               	movwf	_puc+1,c
   832                           
   833                           ; BSR set to: 0
   834  001480  C024  FFD9         	movff	_puc,fsr2l
   835  001484  C025  FFDA         	movff	_puc+1,fsr2h
   836  001488  50DF               	movf	indf2,w,c
   837  00148A  6EFD               	movwf	tosl,c	;volatile
   838                           
   839                           ; BSR set to: 0
   840  00148C  4A24               	infsnz	_puc,f,c
   841  00148E  2A25               	incf	_puc+1,f,c
   842                           
   843                           ; BSR set to: 0
   844  001490  C024  FFD9         	movff	_puc,fsr2l
   845  001494  C025  FFDA         	movff	_puc+1,fsr2h
   846  001498  50DF               	movf	indf2,w,c
   847  00149A  6EFE               	movwf	tosh,c	;volatile
   848                           
   849                           ; BSR set to: 0
   850  00149C  4A24               	infsnz	_puc,f,c
   851  00149E  2A25               	incf	_puc+1,f,c
   852                           
   853                           ; BSR set to: 0
   854  0014A0  C024  FFD9         	movff	_puc,fsr2l
   855  0014A4  C025  FFDA         	movff	_puc+1,fsr2h
   856  0014A8  50DF               	movf	indf2,w,c
   857  0014AA  6EFF               	movwf	tosu,c	;volatile
   858                           
   859                           ; BSR set to: 0
   860                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short long) fptr; puc=(unsign
      +                          ed char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   861  0014AC  0E11               	movlw	17
   862  0014AE  6EFC               	movwf	stkptr,c	;volatile
   863                           
   864                           ; BSR set to: 0
   865  0014B0  0E98               	movlw	low _tache4
   866  0014B2  6E21               	movwf	_fptr,c
   867  0014B4  0E1C               	movlw	high _tache4
   868  0014B6  6E22               	movwf	_fptr+1,c
   869  0014B8  0E00               	movlw	low (_tache4 shr (0+16))
   870  0014BA  6E23               	movwf	_fptr+2,c
   871                           
   872                           ; BSR set to: 0
   873  0014BC  C021  F026         	movff	_fptr,_val_tos
   874  0014C0  C022  F027         	movff	_fptr+1,_val_tos+1
   875  0014C4  C023  F028         	movff	_fptr+2,_val_tos+2
   876                           
   877                           ; BSR set to: 0
   878  0014C8  0E26               	movlw	low _val_tos
   879  0014CA  6E24               	movwf	_puc,c
   880  0014CC  0E00               	movlw	high _val_tos
   881  0014CE  6E25               	movwf	_puc+1,c
   882                           
   883                           ; BSR set to: 0
   884  0014D0  C024  FFD9         	movff	_puc,fsr2l
   885  0014D4  C025  FFDA         	movff	_puc+1,fsr2h
   886  0014D8  50DF               	movf	indf2,w,c
   887  0014DA  6EFD               	movwf	tosl,c	;volatile
   888                           
   889                           ; BSR set to: 0
   890  0014DC  4A24               	infsnz	_puc,f,c
   891  0014DE  2A25               	incf	_puc+1,f,c
   892                           
   893                           ; BSR set to: 0
   894  0014E0  C024  FFD9         	movff	_puc,fsr2l
   895  0014E4  C025  FFDA         	movff	_puc+1,fsr2h
   896  0014E8  50DF               	movf	indf2,w,c
   897  0014EA  6EFE               	movwf	tosh,c	;volatile
   898                           
   899                           ; BSR set to: 0
   900  0014EC  4A24               	infsnz	_puc,f,c
   901  0014EE  2A25               	incf	_puc+1,f,c
   902                           
   903                           ; BSR set to: 0
   904  0014F0  C024  FFD9         	movff	_puc,fsr2l
   905  0014F4  C025  FFDA         	movff	_puc+1,fsr2h
   906  0014F8  50DF               	movf	indf2,w,c
   907  0014FA  6EFF               	movwf	tosu,c	;volatile
   908                           
   909                           ; BSR set to: 0
   910                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short long) fptr; puc=(unsign
      +                          ed char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   911  0014FC  0E16               	movlw	22
   912  0014FE  6EFC               	movwf	stkptr,c	;volatile
   913                           
   914                           ; BSR set to: 0
   915  001500  0E5A               	movlw	low _tache5
   916  001502  6E21               	movwf	_fptr,c
   917  001504  0E1C               	movlw	high _tache5
   918  001506  6E22               	movwf	_fptr+1,c
   919  001508  0E00               	movlw	low (_tache5 shr (0+16))
   920  00150A  6E23               	movwf	_fptr+2,c
   921                           
   922                           ; BSR set to: 0
   923  00150C  C021  F026         	movff	_fptr,_val_tos
   924  001510  C022  F027         	movff	_fptr+1,_val_tos+1
   925  001514  C023  F028         	movff	_fptr+2,_val_tos+2
   926                           
   927                           ; BSR set to: 0
   928  001518  0E26               	movlw	low _val_tos
   929  00151A  6E24               	movwf	_puc,c
   930  00151C  0E00               	movlw	high _val_tos
   931  00151E  6E25               	movwf	_puc+1,c
   932                           
   933                           ; BSR set to: 0
   934  001520  C024  FFD9         	movff	_puc,fsr2l
   935  001524  C025  FFDA         	movff	_puc+1,fsr2h
   936  001528  50DF               	movf	indf2,w,c
   937  00152A  6EFD               	movwf	tosl,c	;volatile
   938                           
   939                           ; BSR set to: 0
   940  00152C  4A24               	infsnz	_puc,f,c
   941  00152E  2A25               	incf	_puc+1,f,c
   942                           
   943                           ; BSR set to: 0
   944  001530  C024  FFD9         	movff	_puc,fsr2l
   945  001534  C025  FFDA         	movff	_puc+1,fsr2h
   946  001538  50DF               	movf	indf2,w,c
   947  00153A  6EFE               	movwf	tosh,c	;volatile
   948                           
   949                           ; BSR set to: 0
   950  00153C  4A24               	infsnz	_puc,f,c
   951  00153E  2A25               	incf	_puc+1,f,c
   952                           
   953                           ; BSR set to: 0
   954  001540  C024  FFD9         	movff	_puc,fsr2l
   955  001544  C025  FFDA         	movff	_puc+1,fsr2h
   956  001548  50DF               	movf	indf2,w,c
   957  00154A  6EFF               	movwf	tosu,c	;volatile
   958                           
   959                           ; BSR set to: 0
   960                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short long) fptr; puc=(unsign
      +                          ed char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   961  00154C  0E1B               	movlw	27
   962  00154E  6EFC               	movwf	stkptr,c	;volatile
   963                           
   964                           ; BSR set to: 0
   965  001550  0E42               	movlw	low _tache6
   966  001552  6E21               	movwf	_fptr,c
   967  001554  0E1E               	movlw	high _tache6
   968  001556  6E22               	movwf	_fptr+1,c
   969  001558  0E00               	movlw	low (_tache6 shr (0+16))
   970  00155A  6E23               	movwf	_fptr+2,c
   971                           
   972                           ; BSR set to: 0
   973  00155C  C021  F026         	movff	_fptr,_val_tos
   974  001560  C022  F027         	movff	_fptr+1,_val_tos+1
   975  001564  C023  F028         	movff	_fptr+2,_val_tos+2
   976                           
   977                           ; BSR set to: 0
   978  001568  0E26               	movlw	low _val_tos
   979  00156A  6E24               	movwf	_puc,c
   980  00156C  0E00               	movlw	high _val_tos
   981  00156E  6E25               	movwf	_puc+1,c
   982                           
   983                           ; BSR set to: 0
   984  001570  C024  FFD9         	movff	_puc,fsr2l
   985  001574  C025  FFDA         	movff	_puc+1,fsr2h
   986  001578  50DF               	movf	indf2,w,c
   987  00157A  6EFD               	movwf	tosl,c	;volatile
   988                           
   989                           ; BSR set to: 0
   990  00157C  4A24               	infsnz	_puc,f,c
   991  00157E  2A25               	incf	_puc+1,f,c
   992                           
   993                           ; BSR set to: 0
   994  001580  C024  FFD9         	movff	_puc,fsr2l
   995  001584  C025  FFDA         	movff	_puc+1,fsr2h
   996  001588  50DF               	movf	indf2,w,c
   997  00158A  6EFE               	movwf	tosh,c	;volatile
   998                           
   999                           ; BSR set to: 0
  1000  00158C  4A24               	infsnz	_puc,f,c
  1001  00158E  2A25               	incf	_puc+1,f,c
  1002                           
  1003                           ; BSR set to: 0
  1004  001590  C024  FFD9         	movff	_puc,fsr2l
  1005  001594  C025  FFDA         	movff	_puc+1,fsr2h
  1006  001598  50DF               	movf	indf2,w,c
  1007  00159A  6EFF               	movwf	tosu,c	;volatile
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;systeme.c: 162: STKPTR=temp;
  1011  00159C  C020  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;systeme.c: 165: STKPTR_T1=2;
  1015  0015A0  0E02               	movlw	2
  1016  0015A2  0101               	movlb	1	; () banked
  1017  0015A4  6F03               	movwf	3,b
  1018                           
  1019                           ; BSR set to: 1
  1020                           ;systeme.c: 166: STKPTR_T2=7;
  1021  0015A6  0E07               	movlw	7
  1022  0015A8  0102               	movlb	2	; () banked
  1023  0015AA  6F03               	movwf	3,b
  1024                           
  1025                           ; BSR set to: 2
  1026                           ;systeme.c: 167: STKPTR_T3=12;
  1027  0015AC  0E0C               	movlw	12
  1028  0015AE  0103               	movlb	3	; () banked
  1029  0015B0  6F03               	movwf	3,b
  1030                           
  1031                           ; BSR set to: 3
  1032                           ;systeme.c: 168: STKPTR_T4=17;
  1033  0015B2  0E11               	movlw	17
  1034  0015B4  0104               	movlb	4	; () banked
  1035  0015B6  6F03               	movwf	3,b
  1036                           
  1037                           ; BSR set to: 4
  1038                           ;systeme.c: 169: STKPTR_T5=22;
  1039  0015B8  0E16               	movlw	22
  1040  0015BA  0105               	movlb	5	; () banked
  1041  0015BC  6F03               	movwf	3,b
  1042                           
  1043                           ; BSR set to: 5
  1044                           ;systeme.c: 170: STKPTR_T6=27;
  1045  0015BE  0E1B               	movlw	27
  1046  0015C0  0106               	movlb	6	; () banked
  1047  0015C2  6F03               	movwf	3,b
  1048                           
  1049                           ; BSR set to: 6
  1050                           ;systeme.c: 173: Tick_Count=0;
  1051  0015C4  0E00               	movlw	0
  1052  0015C6  0100               	movlb	0	; () banked
  1053  0015C8  6F72               	movwf	114,b
  1054  0015CA  0E00               	movlw	0
  1055  0015CC  6F71               	movwf	113,b
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;systeme.c: 175: T0CON=0x08;
  1059  0015CE  0E08               	movlw	8
  1060  0015D0  6ED5               	movwf	4053,c	;volatile
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;systeme.c: 176: T0IE=1;
  1064  0015D2  8AF2               	bsf	intcon,5,c	;volatile
  1065                           
  1066                           ; BSR set to: 0
  1067  0015D4  0012               	return		;funcret
  1068  0015D6                     __end_of_initialisation_du_systeme:
  1069                           	opt stack 0
  1070                           tosu	equ	0xFFF
  1071                           tosh	equ	0xFFE
  1072                           tosl	equ	0xFFD
  1073                           stkptr	equ	0xFFC
  1074                           prodh	equ	0xFF4
  1075                           prodl	equ	0xFF3
  1076                           intcon	equ	0xFF2
  1077                           indf2	equ	0xFDF
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           
  1081 ;; *************** function _initialisation_des_ports *****************
  1082 ;; Defined at:
  1083 ;;		line 20 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    6
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text2
  1112  001B82                     __ptext2:
  1113                           	opt stack 0
  1114  001B82                     _initialisation_des_ports:
  1115                           	opt stack 24
  1116                           
  1117                           ;main.c: 23: MEMCON=0xA0;
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;incstack = 0
  1121  001B82  0EA0               	movlw	160
  1122  001B84  010F               	movlb	15	; () banked
  1123  001B86  6F26               	movwf	38,b	;volatile
  1124                           
  1125                           ;main.c: 26: ANCON0=0x00;
  1126  001B88  0E00               	movlw	0
  1127  001B8A  010F               	movlb	15	; () banked
  1128  001B8C  6F25               	movwf	37,b	;volatile
  1129                           
  1130                           ;main.c: 27: ANCON1=0x00;
  1131  001B8E  0E00               	movlw	0
  1132  001B90  010F               	movlb	15	; () banked
  1133  001B92  6F24               	movwf	36,b	;volatile
  1134                           
  1135                           ;main.c: 28: ANCON2=0x00;
  1136  001B94  0E00               	movlw	0
  1137  001B96  010F               	movlb	15	; () banked
  1138  001B98  6F23               	movwf	35,b	;volatile
  1139                           
  1140                           ; BSR set to: 15
  1141                           ;main.c: 29: ANCON0bits.ANSEL0=1;
  1142  001B9A  010F               	movlb	15	; () banked
  1143  001B9C  8125               	bsf	37,0,b	;volatile
  1144                           
  1145                           ; BSR set to: 15
  1146                           ;main.c: 30: ANCON0bits.ANSEL1=1;
  1147  001B9E  010F               	movlb	15	; () banked
  1148  001BA0  8325               	bsf	37,1,b	;volatile
  1149                           
  1150                           ; BSR set to: 15
  1151                           ;main.c: 31: ANCON0bits.ANSEL2=1;
  1152  001BA2  010F               	movlb	15	; () banked
  1153  001BA4  8525               	bsf	37,2,b	;volatile
  1154                           
  1155                           ; BSR set to: 15
  1156                           ;main.c: 32: ANCON0bits.ANSEL3=1;
  1157  001BA6  010F               	movlb	15	; () banked
  1158  001BA8  8725               	bsf	37,3,b	;volatile
  1159                           
  1160                           ; BSR set to: 15
  1161                           ;main.c: 33: ANCON1bits.ANSEL10=1;
  1162  001BAA  010F               	movlb	15	; () banked
  1163  001BAC  8524               	bsf	36,2,b	;volatile
  1164                           
  1165                           ; BSR set to: 15
  1166                           ;main.c: 34: ANCON1bits.ANSEL11=1;
  1167  001BAE  010F               	movlb	15	; () banked
  1168  001BB0  8724               	bsf	36,3,b	;volatile
  1169                           
  1170                           ; BSR set to: 15
  1171                           ;main.c: 38: LATCbits.LATC2=1;
  1172  001BB2  848B               	bsf	3979,2,c	;volatile
  1173                           
  1174                           ; BSR set to: 15
  1175                           ;main.c: 39: LATCbits.LATC1=1;
  1176  001BB4  828B               	bsf	3979,1,c	;volatile
  1177                           
  1178                           ; BSR set to: 15
  1179                           ;main.c: 40: LATGbits.LATG0=1;
  1180  001BB6  808F               	bsf	3983,0,c	;volatile
  1181                           
  1182                           ; BSR set to: 15
  1183                           ;main.c: 43: TRISCbits.TRISC2=0;
  1184  001BB8  9494               	bcf	3988,2,c	;volatile
  1185                           
  1186                           ; BSR set to: 15
  1187                           ;main.c: 44: TRISCbits.TRISC1=0;
  1188  001BBA  9294               	bcf	3988,1,c	;volatile
  1189                           
  1190                           ; BSR set to: 15
  1191                           ;main.c: 45: TRISGbits.TRISG0=0;
  1192  001BBC  9098               	bcf	3992,0,c	;volatile
  1193                           
  1194                           ; BSR set to: 15
  1195                           ;main.c: 46: TRISGbits.TRISG3=0;
  1196  001BBE  9698               	bcf	3992,3,c	;volatile
  1197                           
  1198                           ; BSR set to: 15
  1199                           ;main.c: 47: TRISGbits.TRISG4=0;
  1200  001BC0  9898               	bcf	3992,4,c	;volatile
  1201                           
  1202                           ; BSR set to: 15
  1203                           ;main.c: 48: TRISDbits.TRISD2=0;
  1204  001BC2  9495               	bcf	3989,2,c	;volatile
  1205                           
  1206                           ; BSR set to: 15
  1207                           ;main.c: 49: TRISDbits.TRISD3=0;
  1208  001BC4  9695               	bcf	3989,3,c	;volatile
  1209                           
  1210                           ; BSR set to: 15
  1211                           ;main.c: 52: INTCON2bits.RBPU=0;
  1212  001BC6  9EF1               	bcf	intcon2,7,c	;volatile
  1213                           
  1214                           ; BSR set to: 15
  1215                           ;main.c: 53: PADCFG1bits.REPU=1;
  1216  001BC8  010F               	movlb	15	; () banked
  1217  001BCA  8D53               	bsf	83,6,b	;volatile
  1218                           
  1219                           ; BSR set to: 15
  1220  001BCC  0012               	return		;funcret
  1221  001BCE                     __end_of_initialisation_des_ports:
  1222                           	opt stack 0
  1223                           tosu	equ	0xFFF
  1224                           tosh	equ	0xFFE
  1225                           tosl	equ	0xFFD
  1226                           stkptr	equ	0xFFC
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           intcon	equ	0xFF2
  1230                           intcon2	equ	0xFF1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           
  1235 ;; *************** function _Init *****************
  1236 ;; Defined at:
  1237 ;;		line 4 in file "semaphore.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  sem             1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  sem             1   31[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:        1 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    6
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text3
  1266  001F2A                     __ptext3:
  1267                           	opt stack 0
  1268  001F2A                     _Init:
  1269                           	opt stack 24
  1270                           
  1271                           ; BSR set to: 15
  1272                           ;incstack = 0
  1273                           ;Init@sem stored from wreg
  1274  001F2A  6E20               	movwf	Init@sem,c
  1275                           
  1276                           ;semaphore.c: 6: switch (sem)
  1277  001F2C  D003               	goto	l2518
  1278  001F2E                     l2516:
  1279                           
  1280                           ;semaphore.c: 9: Val_sem_cna=1;
  1281  001F2E  0E01               	movlw	1
  1282  001F30  6E2C               	movwf	_Val_sem_cna,c
  1283                           
  1284                           ;semaphore.c: 12: ;
  1285                           ;semaphore.c: 13: }
  1286                           
  1287                           ;semaphore.c: 11: default:
  1288                           
  1289                           ;semaphore.c: 10: break;
  1290  001F32  0012               	return	
  1291  001F34                     l2518:
  1292  001F34  5020               	movf	Init@sem,w,c
  1293                           
  1294                           ; Switch size 1, requested type "space"
  1295                           ; Number of cases is 1, Range of values is 1 to 1
  1296                           ; switch strategies available:
  1297                           ; Name         Instructions Cycles
  1298                           ; simple_byte            4     3 (average)
  1299                           ;	Chosen strategy is simple_byte
  1300  001F36  0A01               	xorlw	1	; case 1
  1301  001F38  A4D8               	btfss	status,2,c
  1302  001F3A  0012               	return	
  1303  001F3C  D7F8               	goto	l2516
  1304  001F3E                     __end_of_Init:
  1305                           	opt stack 0
  1306                           tosu	equ	0xFFF
  1307                           tosh	equ	0xFFE
  1308                           tosl	equ	0xFFD
  1309                           stkptr	equ	0xFFC
  1310                           prodh	equ	0xFF4
  1311                           prodl	equ	0xFF3
  1312                           intcon	equ	0xFF2
  1313                           intcon2	equ	0xFF1
  1314                           indf2	equ	0xFDF
  1315                           fsr2h	equ	0xFDA
  1316                           fsr2l	equ	0xFD9
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _fonction_d_interruption *****************
  1320 ;; Defined at:
  1321 ;;		line 17 in file "systeme.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:       14 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    5
  1342 ;; This function calls:
  1343 ;;		_tache1
  1344 ;;		_tache2
  1345 ;;		_tache3
  1346 ;;		_tache4
  1347 ;;		_tache5
  1348 ;;		_tache6
  1349 ;; This function is called by:
  1350 ;;		Interrupt level 2
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	intcode
  1355  000008                     __pintcode:
  1356                           	opt stack 0
  1357  000008                     _fonction_d_interruption:
  1358                           	opt stack 24
  1359                           
  1360                           ;incstack = 0
  1361  000008  822D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1362  00000A  CFFA F012          	movff	pclath,??_fonction_d_interruption
  1363  00000E  CFFB F013          	movff	pclatu,??_fonction_d_interruption+1
  1364  000012  CFE9 F014          	movff	fsr0l,??_fonction_d_interruption+2
  1365  000016  CFEA F015          	movff	fsr0h,??_fonction_d_interruption+3
  1366  00001A  CFE1 F016          	movff	fsr1l,??_fonction_d_interruption+4
  1367  00001E  CFE2 F017          	movff	fsr1h,??_fonction_d_interruption+5
  1368  000022  CFD9 F018          	movff	fsr2l,??_fonction_d_interruption+6
  1369  000026  CFDA F019          	movff	fsr2h,??_fonction_d_interruption+7
  1370  00002A  CFF3 F01A          	movff	prodl,??_fonction_d_interruption+8
  1371  00002E  CFF4 F01B          	movff	prodh,??_fonction_d_interruption+9
  1372  000032  CFF6 F01C          	movff	tblptrl,??_fonction_d_interruption+10
  1373  000036  CFF7 F01D          	movff	tblptrh,??_fonction_d_interruption+11
  1374  00003A  CFF8 F01E          	movff	tblptru,??_fonction_d_interruption+12
  1375  00003E  CFF5 F01F          	movff	tablat,??_fonction_d_interruption+13
  1376                           
  1377                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1378  000042  CFD8 F061          	movff	status,97	;volatile
  1379  000046  0100               	movlb	0	; () banked
  1380  000048  6F60               	movwf	96,b
  1381                           
  1382                           ; BSR set to: 0
  1383  00004A  CFE0 F062          	movff	bsr,98	;volatile
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1387  00004E  CFEA F063          	movff	fsr0h,99	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390  000052  CFE9 F064          	movff	fsr0l,100	;volatile
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;systeme.c: 24: if(T0IE && T0IF)
  1394  000056  BAF2               	btfsc	intcon,5,c	;volatile
  1395                           
  1396                           ; BSR set to: 0
  1397  000058  A4F2               	btfss	intcon,2,c	;volatile
  1398  00005A  D14E               	goto	i2l4292
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;systeme.c: 25: {
  1402                           ;systeme.c: 26: if (DEMARRAGE==1)
  1403  00005C  0100               	movlb	0	; () banked
  1404  00005E  0565               	decf	101,w,b
  1405  000060  A4D8               	btfss	status,2,c
  1406  000062  D005               	goto	i2l3992
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;systeme.c: 27: {
  1410                           ;systeme.c: 28: STKPTR=27;
  1411  000064  0E1B               	movlw	27
  1412  000066  6EFC               	movwf	stkptr,c	;volatile
  1413                           
  1414                           ;systeme.c: 29: DEMARRAGE=0;
  1415  000068  0E00               	movlw	0
  1416  00006A  0100               	movlb	0	; () banked
  1417  00006C  6F65               	movwf	101,b
  1418  00006E                     i2l3992:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;systeme.c: 30: }
  1422                           ;systeme.c: 34: FSR0H=tache_active;
  1423  00006E  C06F FFEA          	movff	111,fsr0h	;volatile
  1424                           
  1425                           ;systeme.c: 35: FSR0L=0;
  1426  000072  0E00               	movlw	0
  1427  000074  6EE9               	movwf	fsr0l,c	;volatile
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1431  000076  C060 FFEE          	movff	96,postinc0	;volatile
  1432                           
  1433                           ; BSR set to: 0
  1434  00007A  C061 FFEE          	movff	97,postinc0	;volatile
  1435                           
  1436                           ; BSR set to: 0
  1437  00007E  C062 FFEE          	movff	98,postinc0	;volatile
  1438                           
  1439                           ; BSR set to: 0
  1440  000082  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1444  000086  C063 FFEE          	movff	99,postinc0	;volatile
  1445                           
  1446                           ; BSR set to: 0
  1447  00008A  C064 FFEE          	movff	100,postinc0	;volatile
  1448                           
  1449                           ; BSR set to: 0
  1450  00008E  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1451                           
  1452                           ; BSR set to: 0
  1453  000092  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1457  000096  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1458                           
  1459                           ; BSR set to: 0
  1460  00009A  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1461                           
  1462                           ; BSR set to: 0
  1463  00009E  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1464                           
  1465                           ; BSR set to: 0
  1466  0000A2  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1470  0000A6  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1471                           
  1472                           ; BSR set to: 0
  1473  0000AA  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1474                           
  1475                           ; BSR set to: 0
  1476  0000AE  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1477                           
  1478                           ; BSR set to: 0
  1479  0000B2  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1483  0000B6  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486  0000BA  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1487                           
  1488                           ;systeme.c: 44: FSR1H=0;
  1489  0000BE  0E00               	movlw	0
  1490  0000C0  6EE2               	movwf	fsr1h,c	;volatile
  1491                           
  1492                           ;systeme.c: 45: FSR1L=0;
  1493  0000C2  0E00               	movlw	0
  1494  0000C4  6EE1               	movwf	fsr1l,c	;volatile
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1498  0000C6  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501  0000CA  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504  0000CE  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507  0000D2  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1511  0000D6  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514  0000DA  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517  0000DE  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1518                           
  1519                           ; BSR set to: 0
  1520  0000E2  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1524  0000E6  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1525                           
  1526                           ; BSR set to: 0
  1527  0000EA  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1528                           
  1529                           ; BSR set to: 0
  1530  0000EE  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1531                           
  1532                           ; BSR set to: 0
  1533  0000F2  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1537  0000F6  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1538                           
  1539                           ; BSR set to: 0
  1540  0000FA  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543  0000FE  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546  000102  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1550  000106  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553  00010A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556  00010E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559  000112  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1563  000116  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566  00011A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1567                           
  1568                           ; BSR set to: 0
  1569  00011E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1570                           
  1571                           ; BSR set to: 0
  1572  000122  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1576  000126  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1577                           
  1578                           ; BSR set to: 0
  1579  00012A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582  00012E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1583                           
  1584                           ; BSR set to: 0
  1585  000132  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1589  000136  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1590                           
  1591                           ; BSR set to: 0
  1592  00013A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595  00013E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598  000142  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1602  000146  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1603                           
  1604                           ; BSR set to: 0
  1605  00014A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608  00014E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1609                           
  1610                           ; BSR set to: 0
  1611  000152  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1615  000156  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1616                           
  1617                           ; BSR set to: 0
  1618  00015A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621  00015E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624  000162  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1628  000166  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1629                           
  1630                           ; BSR set to: 0
  1631  00016A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1632                           
  1633                           ; BSR set to: 0
  1634  00016E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637  000172  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1641  000176  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644  00017A  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1645                           
  1646                           ; BSR set to: 0
  1647  00017E  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1648                           
  1649                           ; BSR set to: 0
  1650  000182  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1651                           
  1652                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1653  000186  0E8A               	movlw	138
  1654  000188  6ED7               	movwf	4055,c	;volatile
  1655  00018A  0ECF               	movlw	207
  1656  00018C  6ED6               	movwf	4054,c	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;systeme.c: 63: T0IF=0;
  1660  00018E  94F2               	bcf	intcon,2,c	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;systeme.c: 65: Tick_Count++;
  1664  000190  0100               	movlb	0	; () banked
  1665  000192  4B71               	infsnz	113,f,b
  1666  000194  2B72               	incf	114,f,b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;systeme.c: 67: pointeur_de_tache++;
  1670  000196  0100               	movlb	0	; () banked
  1671  000198  2B70               	incf	112,f,b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1675  00019A  0E06               	movlw	6
  1676  00019C  0100               	movlb	0	; () banked
  1677  00019E  1970               	xorwf	112,w,b
  1678  0001A0  A4D8               	btfss	status,2,c
  1679  0001A2  D003               	goto	i2l4136
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;systeme.c: 69: pointeur_de_tache=0;
  1683  0001A4  0E00               	movlw	0
  1684  0001A6  0100               	movlb	0	; () banked
  1685  0001A8  6F70               	movwf	112,b
  1686  0001AA                     i2l4136:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1690  0001AA  0100               	movlb	0	; () banked
  1691  0001AC  5170               	movf	112,w,b
  1692  0001AE  0D01               	mullw	1
  1693  0001B0  0E69               	movlw	105
  1694  0001B2  24F3               	addwf	prodl,w,c
  1695  0001B4  6ED9               	movwf	fsr2l,c
  1696  0001B6  0E00               	movlw	0
  1697  0001B8  20F4               	addwfc	prodh,w,c
  1698  0001BA  6EDA               	movwf	fsr2h,c
  1699  0001BC  50DF               	movf	indf2,w,c
  1700  0001BE  0100               	movlb	0	; () banked
  1701  0001C0  6F6F               	movwf	111,b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;systeme.c: 75: FSR1H=0;
  1705  0001C2  0E00               	movlw	0
  1706  0001C4  6EE2               	movwf	fsr1h,c	;volatile
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;systeme.c: 76: FSR1L=0;
  1710  0001C6  0E00               	movlw	0
  1711  0001C8  6EE1               	movwf	fsr1l,c	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;systeme.c: 77: FSR0H=tache_active;
  1715  0001CA  C06F FFEA          	movff	111,fsr0h	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;systeme.c: 78: FSR0L=18;
  1719  0001CE  0E12               	movlw	18
  1720  0001D0  6EE9               	movwf	fsr0l,c	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1724  0001D2  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727  0001D6  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730  0001DA  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1731                           
  1732                           ; BSR set to: 0
  1733  0001DE  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1737  0001E2  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740  0001E6  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743  0001EA  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746  0001EE  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1750  0001F2  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753  0001F6  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756  0001FA  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759  0001FE  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1763  000202  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766  000206  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769  00020A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1770                           
  1771                           ; BSR set to: 0
  1772  00020E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1776  000212  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1777                           
  1778                           ; BSR set to: 0
  1779  000216  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1780                           
  1781                           ; BSR set to: 0
  1782  00021A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785  00021E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1789  000222  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1790                           
  1791                           ; BSR set to: 0
  1792  000226  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795  00022A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1796                           
  1797                           ; BSR set to: 0
  1798  00022E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1802  000232  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805  000236  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1806                           
  1807                           ; BSR set to: 0
  1808  00023A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811  00023E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1815  000242  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1816                           
  1817                           ; BSR set to: 0
  1818  000246  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1819                           
  1820                           ; BSR set to: 0
  1821  00024A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824  00024E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1828  000252  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831  000256  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834  00025A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1835                           
  1836                           ; BSR set to: 0
  1837  00025E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1841  000262  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844  000266  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847  00026A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850  00026E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1854  000272  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857  000276  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1858                           
  1859                           ; BSR set to: 0
  1860  00027A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1861                           
  1862                           ; BSR set to: 0
  1863  00027E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1867  000282  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870  000286  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873  00028A  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1874                           
  1875                           ; BSR set to: 0
  1876  00028E  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;systeme.c: 96: FSR0H=tache_active;
  1880  000292  C06F FFEA          	movff	111,fsr0h	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;systeme.c: 97: FSR0L=0;
  1884  000296  0E00               	movlw	0
  1885  000298  6EE9               	movwf	fsr0l,c	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1889  00029A  CFEE F060          	movff	postinc0,96	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892  00029E  CFEE F061          	movff	postinc0,97	;volatile
  1893                           
  1894                           ; BSR set to: 0
  1895  0002A2  CFEE F062          	movff	postinc0,98	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898  0002A6  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  1902  0002AA  CFEE F063          	movff	postinc0,99	;volatile
  1903                           
  1904                           ; BSR set to: 0
  1905  0002AE  CFEE F064          	movff	postinc0,100	;volatile
  1906                           
  1907                           ; BSR set to: 0
  1908  0002B2  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911  0002B6  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  1915  0002BA  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  1916                           
  1917                           ; BSR set to: 0
  1918  0002BE  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921  0002C2  CFEE FFF4          	movff	postinc0,prodh	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924  0002C6  CFEE FFF3          	movff	postinc0,prodl	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  1928  0002CA  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931  0002CE  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  1932                           
  1933                           ; BSR set to: 0
  1934  0002D2  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937  0002D6  CFEE FFF5          	movff	postinc0,tablat	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  1941  0002DA  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944  0002DE  CFEE FFFA          	movff	postinc0,pclath	;volatile
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  1948  0002E2  C064 FFE9          	movff	100,fsr0l	;volatile
  1949                           
  1950                           ; BSR set to: 0
  1951  0002E6  C063 FFEA          	movff	99,fsr0h	;volatile
  1952                           
  1953                           ; BSR set to: 0
  1954  0002EA  C062 FFE0          	movff	98,bsr	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  1958  0002EE  0100               	movlb	0	; () banked
  1959  0002F0  5160               	movf	96,w,b
  1960                           
  1961                           ; BSR set to: 0
  1962  0002F2  C061 FFD8          	movff	97,status	;volatile
  1963  0002F6  0010               	retfie		;# 
  1964  0002F8                     i2l4292:
  1965                           
  1966                           ;systeme.c: 113: }
  1967                           ;systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  1968  0002F8  C064 FFE9          	movff	100,fsr0l	;volatile
  1969  0002FC  C063 FFEA          	movff	99,fsr0h	;volatile
  1970  000300  C062 FFE0          	movff	98,bsr	;volatile
  1971                           
  1972                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  1973  000304  0100               	movlb	0	; () banked
  1974  000306  5160               	movf	96,w,b
  1975                           
  1976                           ; BSR set to: 0
  1977  000308  C061 FFD8          	movff	97,status	;volatile
  1978  00030C  0010               	retfie		;# 
  1979                           
  1980                           ;systeme.c: 123: tache1();
  1981  00030E  EC46  F008         	call	_tache1	;wreg free
  1982                           
  1983                           ;systeme.c: 124: tache2();
  1984  000312  ECEB  F00A         	call	_tache2	;wreg free
  1985                           
  1986                           ;systeme.c: 125: tache3();
  1987  000316  EC6B  F00E         	call	_tache3	;wreg free
  1988                           
  1989                           ;systeme.c: 126: tache4();
  1990  00031A  EC4C  F00E         	call	_tache4	;wreg free
  1991                           
  1992                           ;systeme.c: 127: tache5();
  1993  00031E  EC2D  F00E         	call	_tache5	;wreg free
  1994                           
  1995                           ;systeme.c: 128: tache6();
  1996  000322  EC21  F00F         	call	_tache6	;wreg free
  1997  000326  C01F  FFF5         	movff	??_fonction_d_interruption+13,tablat
  1998  00032A  C01E  FFF8         	movff	??_fonction_d_interruption+12,tblptru
  1999  00032E  C01D  FFF7         	movff	??_fonction_d_interruption+11,tblptrh
  2000  000332  C01C  FFF6         	movff	??_fonction_d_interruption+10,tblptrl
  2001  000336  C01B  FFF4         	movff	??_fonction_d_interruption+9,prodh
  2002  00033A  C01A  FFF3         	movff	??_fonction_d_interruption+8,prodl
  2003  00033E  C019  FFDA         	movff	??_fonction_d_interruption+7,fsr2h
  2004  000342  C018  FFD9         	movff	??_fonction_d_interruption+6,fsr2l
  2005  000346  C017  FFE2         	movff	??_fonction_d_interruption+5,fsr1h
  2006  00034A  C016  FFE1         	movff	??_fonction_d_interruption+4,fsr1l
  2007  00034E  C015  FFEA         	movff	??_fonction_d_interruption+3,fsr0h
  2008  000352  C014  FFE9         	movff	??_fonction_d_interruption+2,fsr0l
  2009  000356  C013  FFFB         	movff	??_fonction_d_interruption+1,pclatu
  2010  00035A  C012  FFFA         	movff	??_fonction_d_interruption,pclath
  2011  00035E  922D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2012  000360  0011               	retfie		f
  2013  000362                     __end_of_fonction_d_interruption:
  2014                           	opt stack 0
  2015                           tosu	equ	0xFFF
  2016                           tosh	equ	0xFFE
  2017                           tosl	equ	0xFFD
  2018                           stkptr	equ	0xFFC
  2019                           pclatu	equ	0xFFB
  2020                           pclath	equ	0xFFA
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           postinc0	equ	0xFEE
  2030                           fsr0h	equ	0xFEA
  2031                           fsr0l	equ	0xFE9
  2032                           postinc1	equ	0xFE6
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           bsr	equ	0xFE0
  2036                           indf2	equ	0xFDF
  2037                           fsr2h	equ	0xFDA
  2038                           fsr2l	equ	0xFD9
  2039                           status	equ	0xFD8
  2040                           
  2041 ;; *************** function _tache6 *****************
  2042 ;; Defined at:
  2043 ;;		line 3 in file "T6.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  n               1    8[COMRAM] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        1 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    2
  2064 ;; This function calls:
  2065 ;;		_lecture_normale
  2066 ;; This function is called by:
  2067 ;;		_fonction_d_interruption
  2068 ;;		_initialisation_du_systeme
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text5
  2073  001E42                     __ptext5:
  2074                           	opt stack 0
  2075  001E42                     _tache6:
  2076                           	opt stack 26
  2077  001E42                     
  2078                           ;T6.c: 7: {
  2079                           ;T6.c: 8: n=lecture_normale(badge);
  2080  001E42  0E75               	movlw	117
  2081  001E44  6E03               	movwf	lecture_normale@stid_id,c
  2082  001E46  0E00               	movlw	0
  2083  001E48  6E04               	movwf	lecture_normale@stid_id+1,c
  2084  001E4A  ECCD  F00B         	call	_lecture_normale	;wreg free
  2085  001E4E  6E09               	movwf	tache6@n,c
  2086                           
  2087                           ;T6.c: 9: if (n>0)
  2088  001E50  5009               	movf	tache6@n,w,c
  2089  001E52  B4D8               	btfsc	status,2,c
  2090  001E54  D006               	goto	i2l3958
  2091                           
  2092                           ;T6.c: 10: {
  2093                           ;T6.c: 11: if(n<10)
  2094  001E56  0E0A               	movlw	10
  2095  001E58  6009               	cpfslt	tache6@n,c
  2096  001E5A  D003               	goto	i2l3958
  2097                           
  2098                           ;T6.c: 12: {
  2099                           ;T6.c: 13: n_octet_badge=n;
  2100  001E5C  C009  F07F         	movff	tache6@n,127
  2101                           
  2102                           ;T6.c: 14: }
  2103  001E60  D7F0               	goto	i2l3948
  2104  001E62                     i2l3958:
  2105                           
  2106                           ;T6.c: 20: else
  2107                           ;T6.c: 21: {
  2108                           ;T6.c: 22: n_octet_badge=0;
  2109  001E62  0E00               	movlw	0
  2110  001E64  0100               	movlb	0	; () banked
  2111  001E66  6F7F               	movwf	127,b
  2112                           
  2113                           ; BSR set to: 0
  2114                           
  2115                           ; BSR set to: 0
  2116  001E68  D7EC               	goto	i2l3948
  2117  001E6A                     __end_of_tache6:
  2118                           	opt stack 0
  2119                           tosu	equ	0xFFF
  2120                           tosh	equ	0xFFE
  2121                           tosl	equ	0xFFD
  2122                           stkptr	equ	0xFFC
  2123                           pclatu	equ	0xFFB
  2124                           pclath	equ	0xFFA
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon	equ	0xFF2
  2132                           intcon2	equ	0xFF1
  2133                           postinc0	equ	0xFEE
  2134                           fsr0h	equ	0xFEA
  2135                           fsr0l	equ	0xFE9
  2136                           postinc1	equ	0xFE6
  2137                           fsr1h	equ	0xFE2
  2138                           fsr1l	equ	0xFE1
  2139                           bsr	equ	0xFE0
  2140                           indf2	equ	0xFDF
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _lecture_normale *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "stid.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2150 ;;		 -> badge(10), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  octet           1    7[COMRAM] unsigned char 
  2153 ;;  n_bit           1    6[COMRAM] unsigned char 
  2154 ;;  n_octet         1    5[COMRAM] unsigned char 
  2155 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    1
  2172 ;; This function calls:
  2173 ;;		_stid_delai_us
  2174 ;; This function is called by:
  2175 ;;		_tache6
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text6
  2180  00179A                     __ptext6:
  2181                           	opt stack 0
  2182  00179A                     _lecture_normale:
  2183                           	opt stack 26
  2184                           
  2185                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;
  2186                           ;stid.c: 9: TRISDbits.TRISD1=1;
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;incstack = 0
  2190  00179A  8295               	bsf	3989,1,c	;volatile
  2191                           
  2192                           ;stid.c: 10: LATDbits.LATD3=0;
  2193  00179C  968C               	bcf	3980,3,c	;volatile
  2194                           
  2195                           ;stid.c: 11: LATDbits.LATD2=0;
  2196  00179E  948C               	bcf	3980,2,c	;volatile
  2197                           
  2198                           ;stid.c: 12: stid_delai_us(100);
  2199  0017A0  0E00               	movlw	0
  2200  0017A2  6E02               	movwf	stid_delai_us@isdu+1,c
  2201  0017A4  0E64               	movlw	100
  2202  0017A6  6E01               	movwf	stid_delai_us@isdu,c
  2203  0017A8  EC7D  F00F         	call	_stid_delai_us	;wreg free
  2204                           
  2205                           ;stid.c: 13: LATDbits.LATD3=1;
  2206  0017AC  868C               	bsf	3980,3,c	;volatile
  2207                           
  2208                           ;stid.c: 14: temps_attente=0;
  2209  0017AE  0E00               	movlw	0
  2210  0017B0  6E05               	movwf	lecture_normale@temps_attente,c
  2211  0017B2                     i2l3516:
  2212                           
  2213                           ;stid.c: 16: {
  2214                           ;stid.c: 17: stid_delai_us(1000);
  2215  0017B2  0E03               	movlw	3
  2216  0017B4  6E02               	movwf	stid_delai_us@isdu+1,c
  2217  0017B6  0EE8               	movlw	232
  2218  0017B8  6E01               	movwf	stid_delai_us@isdu,c
  2219  0017BA  EC7D  F00F         	call	_stid_delai_us	;wreg free
  2220                           
  2221                           ;stid.c: 18: temps_attente++;
  2222  0017BE  2A05               	incf	lecture_normale@temps_attente,f,c
  2223                           
  2224                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2225  0017C0  A083               	btfss	3971,0,c	;volatile
  2226  0017C2  D002               	goto	i2l3524
  2227                           
  2228                           ;stid.c: 20: temps_attente=65;
  2229  0017C4  0E41               	movlw	65
  2230  0017C6  6E05               	movwf	lecture_normale@temps_attente,c
  2231  0017C8                     i2l3524:
  2232                           
  2233                           ;stid.c: 21: }
  2234                           ;stid.c: 22: while(temps_attente<65);
  2235  0017C8  0E40               	movlw	64
  2236  0017CA  6405               	cpfsgt	lecture_normale@temps_attente,c
  2237  0017CC  D7F2               	goto	i2l3516
  2238                           
  2239                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2240  0017CE  A083               	btfss	3971,0,c	;volatile
  2241  0017D0  D039               	goto	i2l3560
  2242                           
  2243                           ;stid.c: 25: {
  2244                           ;stid.c: 26: n_octet=0;
  2245  0017D2  0E00               	movlw	0
  2246  0017D4  6E06               	movwf	lecture_normale@n_octet,c
  2247                           
  2248                           ;stid.c: 27: n_bit=0;
  2249  0017D6  0E00               	movlw	0
  2250  0017D8  6E07               	movwf	lecture_normale@n_bit,c
  2251  0017DA                     i2l1230:
  2252                           
  2253                           ;stid.c: 29: {
  2254                           ;stid.c: 30: octet=0;
  2255  0017DA  0E00               	movlw	0
  2256  0017DC  6E08               	movwf	lecture_normale@octet,c
  2257                           
  2258                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2259  0017DE  0E00               	movlw	0
  2260  0017E0  6E07               	movwf	lecture_normale@n_bit,c
  2261  0017E2                     i2l3528:
  2262  0017E2  0E07               	movlw	7
  2263  0017E4  6407               	cpfsgt	lecture_normale@n_bit,c
  2264  0017E6  D001               	goto	i2l1231
  2265  0017E8  D01E               	goto	i2l3548
  2266  0017EA                     i2l1231:
  2267                           
  2268                           ;stid.c: 32: {
  2269                           ;stid.c: 33: if (PORTDbits.RD1==1)
  2270  0017EA  A283               	btfss	3971,1,c	;volatile
  2271  0017EC  D003               	goto	i2l1233
  2272                           
  2273                           ;stid.c: 34: octet=(octet|0x01);
  2274  0017EE  5008               	movf	lecture_normale@octet,w,c
  2275  0017F0  0901               	iorlw	1
  2276  0017F2  6E08               	movwf	lecture_normale@octet,c
  2277  0017F4                     i2l1233:
  2278                           
  2279                           ;stid.c: 35: octet=octet<<1;
  2280  0017F4  5008               	movf	lecture_normale@octet,w,c
  2281  0017F6  2408               	addwf	lecture_normale@octet,w,c
  2282  0017F8  6E08               	movwf	lecture_normale@octet,c
  2283                           
  2284                           ;stid.c: 36: stid_delai_us(100);
  2285  0017FA  0E00               	movlw	0
  2286  0017FC  6E02               	movwf	stid_delai_us@isdu+1,c
  2287  0017FE  0E64               	movlw	100
  2288  001800  6E01               	movwf	stid_delai_us@isdu,c
  2289  001802  EC7D  F00F         	call	_stid_delai_us	;wreg free
  2290                           
  2291                           ;stid.c: 37: LATDbits.LATD2=1;
  2292  001806  848C               	bsf	3980,2,c	;volatile
  2293                           
  2294                           ;stid.c: 38: stid_delai_us(500);
  2295  001808  0E01               	movlw	1
  2296  00180A  6E02               	movwf	stid_delai_us@isdu+1,c
  2297  00180C  0EF4               	movlw	244
  2298  00180E  6E01               	movwf	stid_delai_us@isdu,c
  2299  001810  EC7D  F00F         	call	_stid_delai_us	;wreg free
  2300                           
  2301                           ;stid.c: 39: LATDbits.LATD2=0;
  2302  001814  948C               	bcf	3980,2,c	;volatile
  2303                           
  2304                           ;stid.c: 40: stid_delai_us(400);
  2305  001816  0E01               	movlw	1
  2306  001818  6E02               	movwf	stid_delai_us@isdu+1,c
  2307  00181A  0E90               	movlw	144
  2308  00181C  6E01               	movwf	stid_delai_us@isdu,c
  2309  00181E  EC7D  F00F         	call	_stid_delai_us	;wreg free
  2310  001822  2A07               	incf	lecture_normale@n_bit,f,c
  2311  001824  D7DE               	goto	i2l3528
  2312  001826                     i2l3548:
  2313                           
  2314                           ;stid.c: 41: }
  2315                           ;stid.c: 42: stid_id[n_octet]=octet;
  2316  001826  5006               	movf	lecture_normale@n_octet,w,c
  2317  001828  0D01               	mullw	1
  2318  00182A  50F3               	movf	prodl,w,c
  2319  00182C  2403               	addwf	lecture_normale@stid_id,w,c
  2320  00182E  6ED9               	movwf	fsr2l,c
  2321  001830  50F4               	movf	prodh,w,c
  2322  001832  2004               	addwfc	lecture_normale@stid_id+1,w,c
  2323  001834  6EDA               	movwf	fsr2h,c
  2324  001836  C008  FFDF         	movff	lecture_normale@octet,indf2
  2325                           
  2326                           ;stid.c: 43: n_octet++;
  2327  00183A  2A06               	incf	lecture_normale@n_octet,f,c
  2328                           
  2329                           ;stid.c: 44: }
  2330                           ;stid.c: 45: while(PORTDbits.RD0==1);
  2331  00183C  B083               	btfsc	3971,0,c	;volatile
  2332  00183E  D7CD               	goto	i2l1230
  2333                           
  2334                           ;stid.c: 47: return n_octet;
  2335  001840  5006               	movf	lecture_normale@n_octet,w,c
  2336                           
  2337                           ;stid.c: 48: }
  2338  001842  0012               	return	
  2339  001844                     i2l3560:
  2340                           
  2341                           ;stid.c: 49: else
  2342                           ;stid.c: 50: {
  2343                           ;stid.c: 51: return 0;
  2344  001844  0E00               	movlw	0
  2345  001846  0012               	return	
  2346  001848                     __end_of_lecture_normale:
  2347                           	opt stack 0
  2348                           tosu	equ	0xFFF
  2349                           tosh	equ	0xFFE
  2350                           tosl	equ	0xFFD
  2351                           stkptr	equ	0xFFC
  2352                           pclatu	equ	0xFFB
  2353                           pclath	equ	0xFFA
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           intcon2	equ	0xFF1
  2362                           postinc0	equ	0xFEE
  2363                           fsr0h	equ	0xFEA
  2364                           fsr0l	equ	0xFE9
  2365                           postinc1	equ	0xFE6
  2366                           fsr1h	equ	0xFE2
  2367                           fsr1l	equ	0xFE1
  2368                           bsr	equ	0xFE0
  2369                           indf2	equ	0xFDF
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _stid_delai_us *****************
  2375 ;; Defined at:
  2376 ;;		line 56 in file "stid.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  isdu            2    0[COMRAM] unsigned int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_lecture_normale
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text7
  2404  001EFA                     __ptext7:
  2405                           	opt stack 0
  2406  001EFA                     _stid_delai_us:
  2407                           	opt stack 26
  2408                           
  2409                           ;stid.c: 58: while(isdu>0)
  2410                           
  2411                           ;incstack = 0
  2412  001EFA  D006               	goto	i2l3290
  2413  001EFC                     i2l1240:
  2414                           
  2415                           ;stid.c: 59: {
  2416                           ;stid.c: 60: __nop();__nop();__nop();
  2417  001EFC  F000               	nop	
  2418  001EFE  F000               	nop	
  2419  001F00  F000               	nop	
  2420                           
  2421                           ;stid.c: 61: isdu--;
  2422  001F02  0601               	decf	stid_delai_us@isdu,f,c
  2423  001F04  A0D8               	btfss	status,0,c
  2424  001F06  0602               	decf	stid_delai_us@isdu+1,f,c
  2425  001F08                     i2l3290:
  2426  001F08  5001               	movf	stid_delai_us@isdu,w,c
  2427  001F0A  1002               	iorwf	stid_delai_us@isdu+1,w,c
  2428  001F0C  B4D8               	btfsc	status,2,c
  2429  001F0E  0012               	return	
  2430  001F10  D7F5               	goto	i2l1240
  2431  001F12                     __end_of_stid_delai_us:
  2432                           	opt stack 0
  2433                           tosu	equ	0xFFF
  2434                           tosh	equ	0xFFE
  2435                           tosl	equ	0xFFD
  2436                           stkptr	equ	0xFFC
  2437                           pclatu	equ	0xFFB
  2438                           pclath	equ	0xFFA
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           intcon2	equ	0xFF1
  2447                           postinc0	equ	0xFEE
  2448                           fsr0h	equ	0xFEA
  2449                           fsr0l	equ	0xFE9
  2450                           postinc1	equ	0xFE6
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           bsr	equ	0xFE0
  2454                           indf2	equ	0xFDF
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _tache5 *****************
  2460 ;; Defined at:
  2461 ;;		line 3 in file "T5.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_fonction_d_interruption
  2485 ;;		_initialisation_du_systeme
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text8
  2490  001C5A                     __ptext8:
  2491                           	opt stack 0
  2492  001C5A                     _tache5:
  2493                           	opt stack 28
  2494  001C5A                     
  2495                           ;T5.c: 6: {
  2496                           ;T5.c: 7: if (TP_appui==1)
  2497  001C5A  0100               	movlb	0	; () banked
  2498  001C5C  0566               	decf	102,w,b
  2499  001C5E  A4D8               	btfss	status,2,c
  2500  001C60  D7FC               	goto	i2l2784
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;T5.c: 8: {
  2504                           ;T5.c: 9: if ((TP_x>=227)&&(TP_x<233))
  2505  001C62  0EE2               	movlw	226
  2506  001C64  0100               	movlb	0	; () banked
  2507  001C66  6567               	cpfsgt	103,b
  2508  001C68  D7F8               	goto	i2l2784
  2509                           
  2510                           ; BSR set to: 0
  2511  001C6A  0EE9               	movlw	233
  2512  001C6C  0100               	movlb	0	; () banked
  2513  001C6E  6167               	cpfslt	103,b
  2514  001C70  D7F4               	goto	i2l2784
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;T5.c: 10: {
  2518                           ;T5.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2519  001C72  0E70               	movlw	112
  2520  001C74  0100               	movlb	0	; () banked
  2521  001C76  6568               	cpfsgt	104,b
  2522  001C78  D005               	goto	i2l2796
  2523                           
  2524                           ; BSR set to: 0
  2525  001C7A  0E79               	movlw	121
  2526  001C7C  0100               	movlb	0	; () banked
  2527  001C7E  6168               	cpfslt	104,b
  2528  001C80  D001               	goto	i2l2796
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;T5.c: 12: {
  2532                           ;T5.c: 13: LATGbits.LATG0=1;
  2533  001C82  808F               	bsf	3983,0,c	;volatile
  2534  001C84                     i2l2796:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;T5.c: 14: }
  2538                           ;T5.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2539  001C84  0E78               	movlw	120
  2540  001C86  0100               	movlb	0	; () banked
  2541  001C88  6568               	cpfsgt	104,b
  2542  001C8A  D7E7               	goto	i2l2784
  2543                           
  2544                           ; BSR set to: 0
  2545  001C8C  0E7F               	movlw	127
  2546  001C8E  0100               	movlb	0	; () banked
  2547  001C90  6168               	cpfslt	104,b
  2548  001C92  D7E3               	goto	i2l2784
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;T5.c: 16: {
  2552                           ;T5.c: 17: LATGbits.LATG0=0;
  2553  001C94  908F               	bcf	3983,0,c	;volatile
  2554                           
  2555                           ; BSR set to: 0
  2556                           
  2557                           ; BSR set to: 0
  2558                           
  2559                           ; BSR set to: 0
  2560                           
  2561                           ; BSR set to: 0
  2562  001C96  D7E1               	goto	i2l2784
  2563  001C98                     __end_of_tache5:
  2564                           	opt stack 0
  2565                           tosu	equ	0xFFF
  2566                           tosh	equ	0xFFE
  2567                           tosl	equ	0xFFD
  2568                           stkptr	equ	0xFFC
  2569                           pclatu	equ	0xFFB
  2570                           pclath	equ	0xFFA
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           intcon	equ	0xFF2
  2578                           intcon2	equ	0xFF1
  2579                           postinc0	equ	0xFEE
  2580                           fsr0h	equ	0xFEA
  2581                           fsr0l	equ	0xFE9
  2582                           postinc1	equ	0xFE6
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           bsr	equ	0xFE0
  2586                           indf2	equ	0xFDF
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _tache4 *****************
  2592 ;; Defined at:
  2593 ;;		line 3 in file "T4.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_fonction_d_interruption
  2617 ;;		_initialisation_du_systeme
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text9
  2622  001C98                     __ptext9:
  2623                           	opt stack 0
  2624  001C98                     _tache4:
  2625                           	opt stack 28
  2626  001C98                     
  2627                           ;T4.c: 6: {
  2628                           ;T4.c: 7: if (TP_appui==1)
  2629  001C98  0100               	movlb	0	; () banked
  2630  001C9A  0566               	decf	102,w,b
  2631  001C9C  A4D8               	btfss	status,2,c
  2632  001C9E  D7FC               	goto	i2l2766
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;T4.c: 8: {
  2636                           ;T4.c: 9: if ((TP_x>=215)&&(TP_x<221))
  2637  001CA0  0ED6               	movlw	214
  2638  001CA2  0100               	movlb	0	; () banked
  2639  001CA4  6567               	cpfsgt	103,b
  2640  001CA6  D7F8               	goto	i2l2766
  2641                           
  2642                           ; BSR set to: 0
  2643  001CA8  0EDD               	movlw	221
  2644  001CAA  0100               	movlb	0	; () banked
  2645  001CAC  6167               	cpfslt	103,b
  2646  001CAE  D7F4               	goto	i2l2766
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;T4.c: 10: {
  2650                           ;T4.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2651  001CB0  0E70               	movlw	112
  2652  001CB2  0100               	movlb	0	; () banked
  2653  001CB4  6568               	cpfsgt	104,b
  2654  001CB6  D005               	goto	i2l2778
  2655                           
  2656                           ; BSR set to: 0
  2657  001CB8  0E79               	movlw	121
  2658  001CBA  0100               	movlb	0	; () banked
  2659  001CBC  6168               	cpfslt	104,b
  2660  001CBE  D001               	goto	i2l2778
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;T4.c: 12: {
  2664                           ;T4.c: 13: LATCbits.LATC1=1;
  2665  001CC0  828B               	bsf	3979,1,c	;volatile
  2666  001CC2                     i2l2778:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;T4.c: 14: }
  2670                           ;T4.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2671  001CC2  0E78               	movlw	120
  2672  001CC4  0100               	movlb	0	; () banked
  2673  001CC6  6568               	cpfsgt	104,b
  2674  001CC8  D7E7               	goto	i2l2766
  2675                           
  2676                           ; BSR set to: 0
  2677  001CCA  0E7F               	movlw	127
  2678  001CCC  0100               	movlb	0	; () banked
  2679  001CCE  6168               	cpfslt	104,b
  2680  001CD0  D7E3               	goto	i2l2766
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;T4.c: 16: {
  2684                           ;T4.c: 17: LATCbits.LATC1=0;
  2685  001CD2  928B               	bcf	3979,1,c	;volatile
  2686                           
  2687                           ; BSR set to: 0
  2688                           
  2689                           ; BSR set to: 0
  2690                           
  2691                           ; BSR set to: 0
  2692                           
  2693                           ; BSR set to: 0
  2694  001CD4  D7E1               	goto	i2l2766
  2695  001CD6                     __end_of_tache4:
  2696                           	opt stack 0
  2697                           tosu	equ	0xFFF
  2698                           tosh	equ	0xFFE
  2699                           tosl	equ	0xFFD
  2700                           stkptr	equ	0xFFC
  2701                           pclatu	equ	0xFFB
  2702                           pclath	equ	0xFFA
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           intcon2	equ	0xFF1
  2711                           postinc0	equ	0xFEE
  2712                           fsr0h	equ	0xFEA
  2713                           fsr0l	equ	0xFE9
  2714                           postinc1	equ	0xFE6
  2715                           fsr1h	equ	0xFE2
  2716                           fsr1l	equ	0xFE1
  2717                           bsr	equ	0xFE0
  2718                           indf2	equ	0xFDF
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _tache3 *****************
  2724 ;; Defined at:
  2725 ;;		line 3 in file "T3.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_fonction_d_interruption
  2749 ;;		_initialisation_du_systeme
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text10
  2754  001CD6                     __ptext10:
  2755                           	opt stack 0
  2756  001CD6                     _tache3:
  2757                           	opt stack 28
  2758  001CD6                     
  2759                           ;T3.c: 6: {
  2760                           ;T3.c: 7: if (TP_appui==1)
  2761  001CD6  0100               	movlb	0	; () banked
  2762  001CD8  0566               	decf	102,w,b
  2763  001CDA  A4D8               	btfss	status,2,c
  2764  001CDC  D7FC               	goto	i2l2748
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;T3.c: 8: {
  2768                           ;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2769  001CDE  0ECA               	movlw	202
  2770  001CE0  0100               	movlb	0	; () banked
  2771  001CE2  6567               	cpfsgt	103,b
  2772  001CE4  D7F8               	goto	i2l2748
  2773                           
  2774                           ; BSR set to: 0
  2775  001CE6  0ED1               	movlw	209
  2776  001CE8  0100               	movlb	0	; () banked
  2777  001CEA  6167               	cpfslt	103,b
  2778  001CEC  D7F4               	goto	i2l2748
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;T3.c: 10: {
  2782                           ;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2783  001CEE  0E70               	movlw	112
  2784  001CF0  0100               	movlb	0	; () banked
  2785  001CF2  6568               	cpfsgt	104,b
  2786  001CF4  D005               	goto	i2l2760
  2787                           
  2788                           ; BSR set to: 0
  2789  001CF6  0E79               	movlw	121
  2790  001CF8  0100               	movlb	0	; () banked
  2791  001CFA  6168               	cpfslt	104,b
  2792  001CFC  D001               	goto	i2l2760
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;T3.c: 12: {
  2796                           ;T3.c: 13: LATCbits.LATC2=1;
  2797  001CFE  848B               	bsf	3979,2,c	;volatile
  2798  001D00                     i2l2760:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;T3.c: 14: }
  2802                           ;T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2803  001D00  0E78               	movlw	120
  2804  001D02  0100               	movlb	0	; () banked
  2805  001D04  6568               	cpfsgt	104,b
  2806  001D06  D7E7               	goto	i2l2748
  2807                           
  2808                           ; BSR set to: 0
  2809  001D08  0E7F               	movlw	127
  2810  001D0A  0100               	movlb	0	; () banked
  2811  001D0C  6168               	cpfslt	104,b
  2812  001D0E  D7E3               	goto	i2l2748
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;T3.c: 16: {
  2816                           ;T3.c: 17: LATCbits.LATC2=0;
  2817  001D10  948B               	bcf	3979,2,c	;volatile
  2818                           
  2819                           ; BSR set to: 0
  2820                           
  2821                           ; BSR set to: 0
  2822                           
  2823                           ; BSR set to: 0
  2824                           
  2825                           ; BSR set to: 0
  2826  001D12  D7E1               	goto	i2l2748
  2827  001D14                     __end_of_tache3:
  2828                           	opt stack 0
  2829                           tosu	equ	0xFFF
  2830                           tosh	equ	0xFFE
  2831                           tosl	equ	0xFFD
  2832                           stkptr	equ	0xFFC
  2833                           pclatu	equ	0xFFB
  2834                           pclath	equ	0xFFA
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           intcon2	equ	0xFF1
  2843                           postinc0	equ	0xFEE
  2844                           fsr0h	equ	0xFEA
  2845                           fsr0l	equ	0xFE9
  2846                           postinc1	equ	0xFE6
  2847                           fsr1h	equ	0xFE2
  2848                           fsr1l	equ	0xFE1
  2849                           bsr	equ	0xFE0
  2850                           indf2	equ	0xFDF
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _tache2 *****************
  2856 ;; Defined at:
  2857 ;;		line 3 in file "T2.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  iy              2   11[COMRAM] unsigned int 
  2862 ;;  ix              2    9[COMRAM] unsigned int 
  2863 ;;  ly              1   16[COMRAM] unsigned char 
  2864 ;;  hy              1   15[COMRAM] unsigned char 
  2865 ;;  lx              1   14[COMRAM] unsigned char 
  2866 ;;  hx              1   13[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:       10 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		___lwdiv
  2885 ;;		_tp_delai
  2886 ;; This function is called by:
  2887 ;;		_fonction_d_interruption
  2888 ;;		_initialisation_du_systeme
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text11
  2893  0015D6                     __ptext11:
  2894                           	opt stack 0
  2895  0015D6                     _tache2:
  2896                           	opt stack 27
  2897  0015D6                     i2l3898:
  2898                           
  2899                           ;T2.c: 5: unsigned char hx,lx,hy,ly;
  2900                           ;T2.c: 6: unsigned int ix,iy;
  2901                           ;T2.c: 8: TP_appui=0;
  2902  0015D6  0E00               	movlw	0
  2903  0015D8  D077               	goto	L2
  2904  0015DA                     i2l3900:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;T2.c: 11: {
  2908                           ;T2.c: 12: LATGbits.LATG3=1;
  2909  0015DA  868F               	bsf	3983,3,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;T2.c: 13: LATGbits.LATG4=0;
  2913  0015DC  988F               	bcf	3983,4,c	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;T2.c: 14: tp_delai(3000);
  2917  0015DE  0E0B               	movlw	11
  2918  0015E0  6E02               	movwf	tp_delai@itpd+1,c
  2919  0015E2  0EB8               	movlw	184
  2920  0015E4  6E01               	movwf	tp_delai@itpd,c
  2921  0015E6  EC89  F00F         	call	_tp_delai	;wreg free
  2922                           
  2923                           ;T2.c: 18: ADCON2=0x16;
  2924  0015EA  0E16               	movlw	22
  2925  0015EC  6EC0               	movwf	4032,c	;volatile
  2926                           
  2927                           ;T2.c: 19: ADCON0=0x01;
  2928  0015EE  0E01               	movlw	1
  2929  0015F0  6EC2               	movwf	4034,c	;volatile
  2930                           
  2931                           ;T2.c: 20: ADCON0=0x03;
  2932  0015F2  0E03               	movlw	3
  2933  0015F4  6EC2               	movwf	4034,c	;volatile
  2934  0015F6                     i2l495:
  2935  0015F6  B2C2               	btfsc	4034,1,c	;volatile
  2936  0015F8  D7FE               	goto	i2l495
  2937                           
  2938                           ;T2.c: 23: hx=ADRESH;
  2939  0015FA  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  2940                           
  2941                           ;T2.c: 24: lx=ADRESL;
  2942  0015FE  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  2943                           
  2944                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  2945  001602  C00F  F008         	movff	tache2@lx,??_tache2
  2946  001606  0E0F               	movlw	15
  2947  001608  1608               	andwf	??_tache2,f,c
  2948  00160A  B4D8               	btfsc	status,2,c
  2949  00160C  D004               	goto	i2l3916
  2950  00160E  0E00               	movlw	0
  2951  001610  6E0E               	movwf	tache2@hx,c
  2952  001612  0E00               	movlw	0
  2953  001614  6E0F               	movwf	tache2@lx,c
  2954  001616                     i2l3916:
  2955                           
  2956                           ;T2.c: 31: if (hx>=10)
  2957  001616  0E09               	movlw	9
  2958  001618  640E               	cpfsgt	tache2@hx,c
  2959  00161A  D7DD               	goto	i2l3898
  2960                           
  2961                           ;T2.c: 32: {
  2962                           ;T2.c: 33: LATGbits.LATG3=0;
  2963  00161C  968F               	bcf	3983,3,c	;volatile
  2964                           
  2965                           ;T2.c: 34: LATGbits.LATG4=1;
  2966  00161E  888F               	bsf	3983,4,c	;volatile
  2967                           
  2968                           ;T2.c: 35: tp_delai(3000);
  2969  001620  0E0B               	movlw	11
  2970  001622  6E02               	movwf	tp_delai@itpd+1,c
  2971  001624  0EB8               	movlw	184
  2972  001626  6E01               	movwf	tp_delai@itpd,c
  2973  001628  EC89  F00F         	call	_tp_delai	;wreg free
  2974                           
  2975                           ;T2.c: 39: ADCON2=0x16;
  2976  00162C  0E16               	movlw	22
  2977  00162E  6EC0               	movwf	4032,c	;volatile
  2978                           
  2979                           ;T2.c: 40: ADCON0=0x05;
  2980  001630  0E05               	movlw	5
  2981  001632  6EC2               	movwf	4034,c	;volatile
  2982                           
  2983                           ;T2.c: 41: ADCON0=0x07;
  2984  001634  0E07               	movlw	7
  2985  001636  6EC2               	movwf	4034,c	;volatile
  2986  001638                     i2l500:
  2987  001638  B2C2               	btfsc	4034,1,c	;volatile
  2988  00163A  D7FE               	goto	i2l500
  2989                           
  2990                           ;T2.c: 44: hy=ADRESH;
  2991  00163C  CFC4 F010          	movff	4036,tache2@hy	;volatile
  2992                           
  2993                           ;T2.c: 45: ly=ADRESL;
  2994  001640  CFC3 F011          	movff	4035,tache2@ly	;volatile
  2995                           
  2996                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  2997  001644  C011  F008         	movff	tache2@ly,??_tache2
  2998  001648  0E0F               	movlw	15
  2999  00164A  1608               	andwf	??_tache2,f,c
  3000  00164C  B4D8               	btfsc	status,2,c
  3001  00164E  D004               	goto	i2l3932
  3002  001650  0E00               	movlw	0
  3003  001652  6E10               	movwf	tache2@hy,c
  3004  001654  0E00               	movlw	0
  3005  001656  6E11               	movwf	tache2@ly,c
  3006  001658                     i2l3932:
  3007                           
  3008                           ;T2.c: 51: if (hy>=20)
  3009  001658  0E13               	movlw	19
  3010  00165A  6410               	cpfsgt	tache2@hy,c
  3011  00165C  D7BC               	goto	i2l3898
  3012                           
  3013                           ;T2.c: 52: {
  3014                           ;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3015  00165E  500E               	movf	tache2@hx,w,c
  3016  001660  6E08               	movwf	??_tache2& (0+255),c
  3017  001662  500F               	movf	tache2@lx,w,c
  3018  001664  6E0A               	movwf	tache2@ix,c
  3019  001666  C008  F00B         	movff	??_tache2,tache2@ix+1
  3020                           
  3021                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3022  00166A  5010               	movf	tache2@hy,w,c
  3023  00166C  6E08               	movwf	??_tache2& (0+255),c
  3024  00166E  5011               	movf	tache2@ly,w,c
  3025  001670  6E0C               	movwf	tache2@iy,c
  3026  001672  C008  F00D         	movff	??_tache2,tache2@iy+1
  3027                           
  3028                           ;T2.c: 55: ix=ix-3150;
  3029  001676  0EB2               	movlw	178
  3030  001678  240A               	addwf	tache2@ix,w,c
  3031  00167A  6E0A               	movwf	tache2@ix,c
  3032  00167C  0EF3               	movlw	243
  3033  00167E  200B               	addwfc	tache2@ix+1,w,c
  3034  001680  6E0B               	movwf	tache2@ix+1,c
  3035                           
  3036                           ;T2.c: 56: iy=iy-6500;
  3037  001682  0E9C               	movlw	156
  3038  001684  240C               	addwf	tache2@iy,w,c
  3039  001686  6E0C               	movwf	tache2@iy,c
  3040  001688  0EE6               	movlw	230
  3041  00168A  200D               	addwfc	tache2@iy+1,w,c
  3042  00168C  6E0D               	movwf	tache2@iy+1,c
  3043                           
  3044                           ;T2.c: 58: TP_x=ix/246;
  3045  00168E  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3046  001692  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3047  001696  0E00               	movlw	0
  3048  001698  6E04               	movwf	___lwdiv@divisor+1,c
  3049  00169A  0EF6               	movlw	246
  3050  00169C  6E03               	movwf	___lwdiv@divisor,c
  3051  00169E  EC1F  F00D         	call	___lwdiv	;wreg free
  3052  0016A2  5001               	movf	?___lwdiv,w,c
  3053  0016A4  0100               	movlb	0	; () banked
  3054  0016A6  6F67               	movwf	103,b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;T2.c: 59: TP_y=127-(iy/409);
  3058  0016A8  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3059  0016AC  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3060  0016B0  0E01               	movlw	1
  3061  0016B2  6E04               	movwf	___lwdiv@divisor+1,c
  3062  0016B4  0E99               	movlw	153
  3063  0016B6  6E03               	movwf	___lwdiv@divisor,c
  3064  0016B8  EC1F  F00D         	call	___lwdiv	;wreg free
  3065  0016BC  5001               	movf	?___lwdiv,w,c
  3066  0016BE  0800               	sublw	0
  3067  0016C0  0F7F               	addlw	127
  3068  0016C2  0100               	movlb	0	; () banked
  3069  0016C4  6F68               	movwf	104,b
  3070                           
  3071                           ;T2.c: 68: TP_appui=1;
  3072  0016C6  0E01               	movlw	1
  3073  0016C8                     L2:
  3074  0016C8  0100               	movlb	0	; () banked
  3075  0016CA  6F66               	movwf	102,b
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;T2.c: 73: }
  3079                           ;T2.c: 74: }
  3080  0016CC  D786               	goto	i2l3900
  3081  0016CE                     __end_of_tache2:
  3082                           	opt stack 0
  3083                           tosu	equ	0xFFF
  3084                           tosh	equ	0xFFE
  3085                           tosl	equ	0xFFD
  3086                           stkptr	equ	0xFFC
  3087                           pclatu	equ	0xFFB
  3088                           pclath	equ	0xFFA
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           intcon	equ	0xFF2
  3096                           intcon2	equ	0xFF1
  3097                           postinc0	equ	0xFEE
  3098                           fsr0h	equ	0xFEA
  3099                           fsr0l	equ	0xFE9
  3100                           postinc1	equ	0xFE6
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           bsr	equ	0xFE0
  3104                           indf2	equ	0xFDF
  3105                           fsr2h	equ	0xFDA
  3106                           fsr2l	equ	0xFD9
  3107                           status	equ	0xFD8
  3108                           
  3109 ;; *************** function _tp_delai *****************
  3110 ;; Defined at:
  3111 ;;		line 82 in file "T2.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  itpd            2    0[COMRAM] unsigned int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;Total ram usage:        2 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_tache2
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text12
  3139  001F12                     __ptext12:
  3140                           	opt stack 0
  3141  001F12                     _tp_delai:
  3142                           	opt stack 27
  3143                           
  3144                           ;T2.c: 84: while(itpd>0)
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;incstack = 0
  3148  001F12  D006               	goto	i2l3506
  3149  001F14                     i2l513:
  3150                           
  3151                           ;T2.c: 85: {
  3152                           ;T2.c: 86: __nop();__nop();__nop();
  3153  001F14  F000               	nop	
  3154  001F16  F000               	nop	
  3155  001F18  F000               	nop	
  3156                           
  3157                           ;T2.c: 87: itpd--;
  3158  001F1A  0601               	decf	tp_delai@itpd,f,c
  3159  001F1C  A0D8               	btfss	status,0,c
  3160  001F1E  0602               	decf	tp_delai@itpd+1,f,c
  3161  001F20                     i2l3506:
  3162  001F20  5001               	movf	tp_delai@itpd,w,c
  3163  001F22  1002               	iorwf	tp_delai@itpd+1,w,c
  3164  001F24  B4D8               	btfsc	status,2,c
  3165  001F26  0012               	return	
  3166  001F28  D7F5               	goto	i2l513
  3167  001F2A                     __end_of_tp_delai:
  3168                           	opt stack 0
  3169                           tosu	equ	0xFFF
  3170                           tosh	equ	0xFFE
  3171                           tosl	equ	0xFFD
  3172                           stkptr	equ	0xFFC
  3173                           pclatu	equ	0xFFB
  3174                           pclath	equ	0xFFA
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           intcon2	equ	0xFF1
  3183                           postinc0	equ	0xFEE
  3184                           fsr0h	equ	0xFEA
  3185                           fsr0l	equ	0xFE9
  3186                           postinc1	equ	0xFE6
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           bsr	equ	0xFE0
  3190                           indf2	equ	0xFDF
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function ___lwdiv *****************
  3196 ;; Defined at:
  3197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  dividend        2    0[COMRAM] unsigned int 
  3200 ;;  divisor         2    2[COMRAM] unsigned int 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  quotient        2    4[COMRAM] unsigned int 
  3203 ;;  counter         1    6[COMRAM] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  2    0[COMRAM] unsigned int 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;Total ram usage:        7 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_tache2
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text13
  3227  001A3E                     __ptext13:
  3228                           	opt stack 0
  3229  001A3E                     ___lwdiv:
  3230                           	opt stack 27
  3231                           
  3232                           ;incstack = 0
  3233  001A3E  0E00               	movlw	0
  3234  001A40  6E06               	movwf	___lwdiv@quotient+1,c
  3235  001A42  0E00               	movlw	0
  3236  001A44  6E05               	movwf	___lwdiv@quotient,c
  3237  001A46  5003               	movf	___lwdiv@divisor,w,c
  3238  001A48  1004               	iorwf	___lwdiv@divisor+1,w,c
  3239  001A4A  B4D8               	btfsc	status,2,c
  3240  001A4C  D01C               	goto	i2l1645
  3241  001A4E  0E01               	movlw	1
  3242  001A50  6E07               	movwf	___lwdiv@counter,c
  3243  001A52  D004               	goto	i2l3572
  3244  001A54                     i2l3570:
  3245  001A54  90D8               	bcf	status,0,c
  3246  001A56  3603               	rlcf	___lwdiv@divisor,f,c
  3247  001A58  3604               	rlcf	___lwdiv@divisor+1,f,c
  3248  001A5A  2A07               	incf	___lwdiv@counter,f,c
  3249  001A5C                     i2l3572:
  3250  001A5C  AE04               	btfss	___lwdiv@divisor+1,7,c
  3251  001A5E  D7FA               	goto	i2l3570
  3252  001A60                     i2l3574:
  3253  001A60  90D8               	bcf	status,0,c
  3254  001A62  3605               	rlcf	___lwdiv@quotient,f,c
  3255  001A64  3606               	rlcf	___lwdiv@quotient+1,f,c
  3256  001A66  5003               	movf	___lwdiv@divisor,w,c
  3257  001A68  5C01               	subwf	___lwdiv@dividend,w,c
  3258  001A6A  5004               	movf	___lwdiv@divisor+1,w,c
  3259  001A6C  5802               	subwfb	___lwdiv@dividend+1,w,c
  3260  001A6E  A0D8               	btfss	status,0,c
  3261  001A70  D005               	goto	i2l3582
  3262  001A72  5003               	movf	___lwdiv@divisor,w,c
  3263  001A74  5E01               	subwf	___lwdiv@dividend,f,c
  3264  001A76  5004               	movf	___lwdiv@divisor+1,w,c
  3265  001A78  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3266  001A7A  8005               	bsf	___lwdiv@quotient,0,c
  3267  001A7C                     i2l3582:
  3268  001A7C  90D8               	bcf	status,0,c
  3269  001A7E  3204               	rrcf	___lwdiv@divisor+1,f,c
  3270  001A80  3203               	rrcf	___lwdiv@divisor,f,c
  3271  001A82  2E07               	decfsz	___lwdiv@counter,f,c
  3272  001A84  D7ED               	goto	i2l3574
  3273  001A86                     i2l1645:
  3274  001A86  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3275  001A8A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3276  001A8E  0012               	return		;funcret
  3277  001A90                     __end_of___lwdiv:
  3278                           	opt stack 0
  3279                           tosu	equ	0xFFF
  3280                           tosh	equ	0xFFE
  3281                           tosl	equ	0xFFD
  3282                           stkptr	equ	0xFFC
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           intcon2	equ	0xFF1
  3293                           postinc0	equ	0xFEE
  3294                           fsr0h	equ	0xFEA
  3295                           fsr0l	equ	0xFE9
  3296                           postinc1	equ	0xFE6
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           bsr	equ	0xFE0
  3300                           indf2	equ	0xFDF
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function _tache1 *****************
  3306 ;; Defined at:
  3307 ;;		line 3 in file "T1.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  i               1   12[COMRAM] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    4
  3328 ;; This function calls:
  3329 ;;		_clear_graphics
  3330 ;;		_clear_text
  3331 ;;		_draw_char
  3332 ;;		_draw_hex8
  3333 ;;		_draw_string
  3334 ;;		_goto_lico
  3335 ;;		_initialisation_afficheur
  3336 ;;		_lecture_8bit_analogique
  3337 ;;		_plot1
  3338 ;;		i2_initialisation_des_ports
  3339 ;; This function is called by:
  3340 ;;		_fonction_d_interruption
  3341 ;;		_initialisation_du_systeme
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text14
  3346  00108C                     __ptext14:
  3347                           	opt stack 0
  3348  00108C                     _tache1:
  3349                           	opt stack 24
  3350                           
  3351                           ;T1.c: 5: unsigned char i;
  3352                           ;T1.c: 7: (INTCONbits.GIE = 0);
  3353                           
  3354                           ;incstack = 0
  3355  00108C  9EF2               	bcf	intcon,7,c	;volatile
  3356                           
  3357                           ;T1.c: 8: initialisation_des_ports();
  3358  00108E  ECE7  F00D         	call	i2_initialisation_des_ports	;wreg free
  3359                           
  3360                           ;T1.c: 9: initialisation_afficheur();
  3361  001092  EC67  F00B         	call	_initialisation_afficheur	;wreg free
  3362                           
  3363                           ;T1.c: 10: clear_text();
  3364  001096  ECDB  F00E         	call	_clear_text	;wreg free
  3365                           
  3366                           ;T1.c: 11: clear_graphics();
  3367  00109A  ECF3  F00E         	call	_clear_graphics	;wreg free
  3368                           
  3369                           ;T1.c: 12: (INTCONbits.GIE = 1);
  3370  00109E  8EF2               	bsf	intcon,7,c	;volatile
  3371                           
  3372                           ;T1.c: 14: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3373  0010A0  948B               	bcf	3979,2,c	;volatile
  3374  0010A2  928B               	bcf	3979,1,c	;volatile
  3375  0010A4  908F               	bcf	3983,0,c	;volatile
  3376                           
  3377                           ;T1.c: 16: vitesse=0;
  3378  0010A6  0E00               	movlw	0
  3379  0010A8  0100               	movlb	0	; () banked
  3380  0010AA  6F73               	movwf	115,b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;T1.c: 17: batterie=120;
  3384  0010AC  0E78               	movlw	120
  3385  0010AE  0100               	movlb	0	; () banked
  3386  0010B0  6F74               	movwf	116,b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;T1.c: 18: n_octet_badge=0;
  3390  0010B2  0E00               	movlw	0
  3391  0010B4  0100               	movlb	0	; () banked
  3392  0010B6  6F7F               	movwf	127,b
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;T1.c: 20: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3396  0010B8  0E22               	movlw	34
  3397  0010BA  6E09               	movwf	goto_lico@colonne,c
  3398  0010BC  0E0D               	movlw	13
  3399  0010BE  EC71  F00D         	call	_goto_lico
  3400  0010C2  0E52               	movlw	82
  3401  0010C4  ECC2  F00E         	call	_draw_char
  3402  0010C8  0E20               	movlw	32
  3403  0010CA  ECC2  F00E         	call	_draw_char
  3404  0010CE  0E56               	movlw	86
  3405  0010D0  ECC2  F00E         	call	_draw_char
  3406  0010D4  0E20               	movlw	32
  3407  0010D6  ECC2  F00E         	call	_draw_char
  3408  0010DA  0E42               	movlw	66
  3409  0010DC  ECC2  F00E         	call	_draw_char
  3410                           
  3411                           ;T1.c: 21: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3412  0010E0  0E22               	movlw	34
  3413  0010E2  6E09               	movwf	goto_lico@colonne,c
  3414  0010E4  0E0E               	movlw	14
  3415  0010E6  EC71  F00D         	call	_goto_lico
  3416  0010EA  0E30               	movlw	48
  3417  0010EC  ECC2  F00E         	call	_draw_char
  3418  0010F0  0E20               	movlw	32
  3419  0010F2  ECC2  F00E         	call	_draw_char
  3420  0010F6  0E30               	movlw	48
  3421  0010F8  ECC2  F00E         	call	_draw_char
  3422  0010FC  0E20               	movlw	32
  3423  0010FE  ECC2  F00E         	call	_draw_char
  3424  001102  0E30               	movlw	48
  3425  001104  ECC2  F00E         	call	_draw_char
  3426                           
  3427                           ;T1.c: 22: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3428  001108  0E22               	movlw	34
  3429  00110A  6E09               	movwf	goto_lico@colonne,c
  3430  00110C  0E0F               	movlw	15
  3431  00110E  EC71  F00D         	call	_goto_lico
  3432  001112  0E31               	movlw	49
  3433  001114  ECC2  F00E         	call	_draw_char
  3434  001118  0E20               	movlw	32
  3435  00111A  ECC2  F00E         	call	_draw_char
  3436  00111E  0E31               	movlw	49
  3437  001120  ECC2  F00E         	call	_draw_char
  3438  001124  0E20               	movlw	32
  3439  001126  ECC2  F00E         	call	_draw_char
  3440  00112A  0E31               	movlw	49
  3441  00112C  ECC2  F00E         	call	_draw_char
  3442                           
  3443                           ;T1.c: 24: TP_appui=0;
  3444  001130  0E00               	movlw	0
  3445  001132  0100               	movlb	0	; () banked
  3446  001134  6F66               	movwf	102,b
  3447  001136                     i2l3782:
  3448                           
  3449                           ;T1.c: 27: {
  3450                           ;T1.c: 29: goto_lico(0,0);
  3451  001136  0E00               	movlw	0
  3452  001138  6E09               	movwf	goto_lico@colonne,c
  3453  00113A  0E00               	movlw	0
  3454  00113C  EC71  F00D         	call	_goto_lico
  3455                           
  3456                           ;T1.c: 30: draw_string("Marche:");
  3457  001140  0E59               	movlw	low STR_1
  3458  001142  6E08               	movwf	draw_string@tableau,c
  3459  001144  0E10               	movlw	high STR_1
  3460  001146  6E09               	movwf	draw_string@tableau+1,c
  3461  001148  EC0D  F00E         	call	_draw_string	;wreg free
  3462                           
  3463                           ;T1.c: 31: if (PORTBbits.RB0==0)
  3464  00114C  B081               	btfsc	3969,0,c	;volatile
  3465  00114E  D007               	goto	i2l384
  3466                           
  3467                           ;T1.c: 32: draw_string("AV");
  3468  001150  0E88               	movlw	low STR_2
  3469  001152  6E08               	movwf	draw_string@tableau,c
  3470  001154  0E10               	movlw	high STR_2
  3471  001156  6E09               	movwf	draw_string@tableau+1,c
  3472  001158  EC0D  F00E         	call	_draw_string	;wreg free
  3473  00115C  D00F               	goto	i2l3794
  3474  00115E                     i2l384:
  3475                           
  3476                           ;T1.c: 33: else
  3477                           ;T1.c: 34: if (PORTBbits.RB1==0)
  3478  00115E  B281               	btfsc	3969,1,c	;volatile
  3479  001160  D007               	goto	i2l3792
  3480                           
  3481                           ;T1.c: 35: draw_string("AR");
  3482  001162  0E85               	movlw	low STR_3
  3483  001164  6E08               	movwf	draw_string@tableau,c
  3484  001166  0E10               	movlw	high STR_3
  3485  001168  6E09               	movwf	draw_string@tableau+1,c
  3486  00116A  EC0D  F00E         	call	_draw_string	;wreg free
  3487  00116E  D006               	goto	i2l3794
  3488  001170                     i2l3792:
  3489                           
  3490                           ;T1.c: 36: else
  3491                           ;T1.c: 37: draw_string("N ");
  3492  001170  0E7F               	movlw	low STR_4
  3493  001172  6E08               	movwf	draw_string@tableau,c
  3494  001174  0E10               	movlw	high STR_4
  3495  001176  6E09               	movwf	draw_string@tableau+1,c
  3496  001178  EC0D  F00E         	call	_draw_string	;wreg free
  3497  00117C                     i2l3794:
  3498                           
  3499                           ;T1.c: 39: goto_lico(1,0);
  3500  00117C  0E00               	movlw	0
  3501  00117E  6E09               	movwf	goto_lico@colonne,c
  3502  001180  0E01               	movlw	1
  3503  001182  EC71  F00D         	call	_goto_lico
  3504                           
  3505                           ;T1.c: 40: draw_string("Siege:");
  3506  001186  0E68               	movlw	low STR_5
  3507  001188  6E08               	movwf	draw_string@tableau,c
  3508  00118A  0E10               	movlw	high STR_5
  3509  00118C  6E09               	movwf	draw_string@tableau+1,c
  3510  00118E  EC0D  F00E         	call	_draw_string	;wreg free
  3511                           
  3512                           ;T1.c: 41: if (PORTBbits.RB2==0)
  3513  001192  B481               	btfsc	3969,2,c	;volatile
  3514  001194  D004               	goto	i2l3802
  3515                           
  3516                           ;T1.c: 42: draw_char('1');
  3517  001196  0E31               	movlw	49
  3518  001198  ECC2  F00E         	call	_draw_char
  3519  00119C  D003               	goto	i2l3804
  3520  00119E                     i2l3802:
  3521                           
  3522                           ;T1.c: 43: else
  3523                           ;T1.c: 44: draw_char('0');
  3524  00119E  0E30               	movlw	48
  3525  0011A0  ECC2  F00E         	call	_draw_char
  3526  0011A4                     i2l3804:
  3527                           
  3528                           ;T1.c: 46: goto_lico(2,0);
  3529  0011A4  0E00               	movlw	0
  3530  0011A6  6E09               	movwf	goto_lico@colonne,c
  3531  0011A8  0E02               	movlw	2
  3532  0011AA  EC71  F00D         	call	_goto_lico
  3533                           
  3534                           ;T1.c: 47: draw_string("Temp. Eau:");
  3535  0011AE  0E3B               	movlw	low STR_6
  3536  0011B0  6E08               	movwf	draw_string@tableau,c
  3537  0011B2  0E10               	movlw	high STR_6
  3538  0011B4  6E09               	movwf	draw_string@tableau+1,c
  3539  0011B6  EC0D  F00E         	call	_draw_string	;wreg free
  3540                           
  3541                           ;T1.c: 48: draw_hex8(lecture_8bit_analogique(2));
  3542  0011BA  0E02               	movlw	2
  3543  0011BC  ECA7  F00E         	call	_lecture_8bit_analogique
  3544  0011C0  ECF1  F00C         	call	_draw_hex8
  3545                           
  3546                           ;T1.c: 50: goto_lico(3,0);
  3547  0011C4  0E00               	movlw	0
  3548  0011C6  6E09               	movwf	goto_lico@colonne,c
  3549  0011C8  0E03               	movlw	3
  3550  0011CA  EC71  F00D         	call	_goto_lico
  3551                           
  3552                           ;T1.c: 51: draw_string("Temp. Huile:");
  3553  0011CE  0E16               	movlw	low STR_7
  3554  0011D0  6E08               	movwf	draw_string@tableau,c
  3555  0011D2  0E10               	movlw	high STR_7
  3556  0011D4  6E09               	movwf	draw_string@tableau+1,c
  3557  0011D6  EC0D  F00E         	call	_draw_string	;wreg free
  3558                           
  3559                           ;T1.c: 52: draw_hex8(lecture_8bit_analogique(3));
  3560  0011DA  0E03               	movlw	3
  3561  0011DC  ECA7  F00E         	call	_lecture_8bit_analogique
  3562  0011E0  ECF1  F00C         	call	_draw_hex8
  3563                           
  3564                           ;T1.c: 54: goto_lico(4,0);
  3565  0011E4  0E00               	movlw	0
  3566  0011E6  6E09               	movwf	goto_lico@colonne,c
  3567  0011E8  0E04               	movlw	4
  3568  0011EA  EC71  F00D         	call	_goto_lico
  3569                           
  3570                           ;T1.c: 55: draw_string("Choc:");
  3571  0011EE  0E75               	movlw	low STR_8
  3572  0011F0  6E08               	movwf	draw_string@tableau,c
  3573  0011F2  0E10               	movlw	high STR_8
  3574  0011F4  6E09               	movwf	draw_string@tableau+1,c
  3575  0011F6  EC0D  F00E         	call	_draw_string	;wreg free
  3576                           
  3577                           ;T1.c: 56: if (PORTBbits.RB3==0)
  3578  0011FA  B681               	btfsc	3969,3,c	;volatile
  3579  0011FC  D004               	goto	i2l3822
  3580                           
  3581                           ;T1.c: 57: draw_char('1');
  3582  0011FE  0E31               	movlw	49
  3583  001200  ECC2  F00E         	call	_draw_char
  3584  001204  D003               	goto	i2l3824
  3585  001206                     i2l3822:
  3586                           
  3587                           ;T1.c: 58: else
  3588                           ;T1.c: 59: draw_char('0');
  3589  001206  0E30               	movlw	48
  3590  001208  ECC2  F00E         	call	_draw_char
  3591  00120C                     i2l3824:
  3592                           
  3593                           ;T1.c: 61: goto_lico(5,0);
  3594  00120C  0E00               	movlw	0
  3595  00120E  6E09               	movwf	goto_lico@colonne,c
  3596  001210  0E05               	movlw	5
  3597  001212  EC71  F00D         	call	_goto_lico
  3598                           
  3599                           ;T1.c: 62: draw_string("Vitesse:");
  3600  001216  0E50               	movlw	low STR_9
  3601  001218  6E08               	movwf	draw_string@tableau,c
  3602  00121A  0E10               	movlw	high STR_9
  3603  00121C  6E09               	movwf	draw_string@tableau+1,c
  3604  00121E  EC0D  F00E         	call	_draw_string	;wreg free
  3605                           
  3606                           ;T1.c: 63: if (PORTEbits.RE0==0)
  3607  001222  B084               	btfsc	3972,0,c	;volatile
  3608  001224  D002               	goto	i2l3832
  3609                           
  3610                           ;T1.c: 64: vitesse++;
  3611  001226  0100               	movlb	0	; () banked
  3612  001228  2B73               	incf	115,f,b
  3613  00122A                     i2l3832:
  3614                           
  3615                           ;T1.c: 65: if (PORTEbits.RE1==0)
  3616  00122A  B284               	btfsc	3972,1,c	;volatile
  3617  00122C  D002               	goto	i2l3836
  3618                           
  3619                           ;T1.c: 66: vitesse--;
  3620  00122E  0100               	movlb	0	; () banked
  3621  001230  0773               	decf	115,f,b
  3622  001232                     i2l3836:
  3623                           
  3624                           ;T1.c: 67: draw_hex8(vitesse);
  3625  001232  0100               	movlb	0	; () banked
  3626  001234  5173               	movf	115,w,b
  3627  001236  ECF1  F00C         	call	_draw_hex8
  3628                           
  3629                           ;T1.c: 69: goto_lico(6,0);
  3630  00123A  0E00               	movlw	0
  3631  00123C  6E09               	movwf	goto_lico@colonne,c
  3632  00123E  0E06               	movlw	6
  3633  001240  EC71  F00D         	call	_goto_lico
  3634                           
  3635                           ;T1.c: 70: draw_string("Batterie:");
  3636  001244  0E46               	movlw	low STR_10
  3637  001246  6E08               	movwf	draw_string@tableau,c
  3638  001248  0E10               	movlw	high STR_10
  3639  00124A  6E09               	movwf	draw_string@tableau+1,c
  3640  00124C  EC0D  F00E         	call	_draw_string	;wreg free
  3641                           
  3642                           ;T1.c: 71: if (PORTEbits.RE2==0)
  3643  001250  B484               	btfsc	3972,2,c	;volatile
  3644  001252  D002               	goto	i2l3846
  3645                           
  3646                           ;T1.c: 72: batterie++;
  3647  001254  0100               	movlb	0	; () banked
  3648  001256  2B74               	incf	116,f,b
  3649  001258                     i2l3846:
  3650                           
  3651                           ;T1.c: 73: if (PORTEbits.RE3==0)
  3652  001258  B684               	btfsc	3972,3,c	;volatile
  3653  00125A  D002               	goto	i2l3850
  3654                           
  3655                           ;T1.c: 74: batterie--;
  3656  00125C  0100               	movlb	0	; () banked
  3657  00125E  0774               	decf	116,f,b
  3658  001260                     i2l3850:
  3659                           
  3660                           ;T1.c: 75: draw_hex8(batterie);
  3661  001260  0100               	movlb	0	; () banked
  3662  001262  5174               	movf	116,w,b
  3663  001264  ECF1  F00C         	call	_draw_hex8
  3664                           
  3665                           ;T1.c: 77: goto_lico(7,0);
  3666  001268  0E00               	movlw	0
  3667  00126A  6E09               	movwf	goto_lico@colonne,c
  3668  00126C  0E07               	movlw	7
  3669  00126E  EC71  F00D         	call	_goto_lico
  3670                           
  3671                           ;T1.c: 78: if (PORTEbits.RE4==0)
  3672  001272  B884               	btfsc	3972,4,c	;volatile
  3673  001274  D007               	goto	i2l3858
  3674                           
  3675                           ;T1.c: 79: draw_string("((!))");
  3676  001276  0E6F               	movlw	low STR_11
  3677  001278  6E08               	movwf	draw_string@tableau,c
  3678  00127A  0E10               	movlw	high STR_11
  3679  00127C  6E09               	movwf	draw_string@tableau+1,c
  3680  00127E  EC0D  F00E         	call	_draw_string	;wreg free
  3681  001282  D006               	goto	i2l3860
  3682  001284                     i2l3858:
  3683                           
  3684                           ;T1.c: 80: else
  3685                           ;T1.c: 81: draw_string("     ");
  3686  001284  0E10               	movlw	low (STR_14+15)
  3687  001286  6E08               	movwf	draw_string@tableau,c
  3688  001288  0E10               	movlw	high (STR_14+15)
  3689  00128A  6E09               	movwf	draw_string@tableau+1,c
  3690  00128C  EC0D  F00E         	call	_draw_string	;wreg free
  3691  001290                     i2l3860:
  3692                           
  3693                           ;T1.c: 83: goto_lico(8,0);
  3694  001290  0E00               	movlw	0
  3695  001292  6E09               	movwf	goto_lico@colonne,c
  3696  001294  0E08               	movlw	8
  3697  001296  EC71  F00D         	call	_goto_lico
  3698                           
  3699                           ;T1.c: 84: draw_string("Badge:");
  3700  00129A  0E61               	movlw	low STR_13
  3701  00129C  6E08               	movwf	draw_string@tableau,c
  3702  00129E  0E10               	movlw	high STR_13
  3703  0012A0  6E09               	movwf	draw_string@tableau+1,c
  3704  0012A2  EC0D  F00E         	call	_draw_string	;wreg free
  3705                           
  3706                           ;T1.c: 85: if (n_octet_badge==0)
  3707  0012A6  0100               	movlb	0	; () banked
  3708  0012A8  517F               	movf	127,w,b
  3709  0012AA  A4D8               	btfss	status,2,c
  3710  0012AC  D007               	goto	i2l3868
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;T1.c: 86: draw_string(" AUCUN              ");
  3714  0012AE  0E01               	movlw	low STR_14
  3715  0012B0  6E08               	movwf	draw_string@tableau,c
  3716  0012B2  0E10               	movlw	high STR_14
  3717  0012B4  6E09               	movwf	draw_string@tableau+1,c
  3718  0012B6  EC0D  F00E         	call	_draw_string	;wreg free
  3719  0012BA  D014               	goto	i2l3876
  3720  0012BC                     i2l3868:
  3721                           
  3722                           ;T1.c: 87: else
  3723                           ;T1.c: 88: {
  3724                           ;T1.c: 89: for (i=0;i<n_octet_badge;i++)
  3725  0012BC  0E00               	movlw	0
  3726  0012BE  6E0D               	movwf	tache1@i,c
  3727  0012C0  D00C               	goto	i2l3874
  3728  0012C2                     i2l3870:
  3729                           
  3730                           ;T1.c: 90: {
  3731                           ;T1.c: 91: draw_hex8(badge[i]);
  3732  0012C2  500D               	movf	tache1@i,w,c
  3733  0012C4  0D01               	mullw	1
  3734  0012C6  0E75               	movlw	117
  3735  0012C8  24F3               	addwf	prodl,w,c
  3736  0012CA  6ED9               	movwf	fsr2l,c
  3737  0012CC  0E00               	movlw	0
  3738  0012CE  20F4               	addwfc	prodh,w,c
  3739  0012D0  6EDA               	movwf	fsr2h,c
  3740  0012D2  50DF               	movf	indf2,w,c
  3741  0012D4  ECF1  F00C         	call	_draw_hex8
  3742  0012D8  2A0D               	incf	tache1@i,f,c
  3743  0012DA                     i2l3874:
  3744  0012DA  0100               	movlb	0	; () banked
  3745  0012DC  517F               	movf	127,w,b
  3746  0012DE  5C0D               	subwf	tache1@i,w,c
  3747  0012E0  A0D8               	btfss	status,0,c
  3748  0012E2  D7EF               	goto	i2l3870
  3749  0012E4                     i2l3876:
  3750                           
  3751                           ;T1.c: 92: }
  3752                           ;T1.c: 93: }
  3753                           ;T1.c: 95: goto_lico(9,0);
  3754  0012E4  0E00               	movlw	0
  3755  0012E6  6E09               	movwf	goto_lico@colonne,c
  3756  0012E8  0E09               	movlw	9
  3757  0012EA  EC71  F00D         	call	_goto_lico
  3758                           
  3759                           ;T1.c: 96: draw_string("X-Joystick:");
  3760  0012EE  0E23               	movlw	low STR_15
  3761  0012F0  6E08               	movwf	draw_string@tableau,c
  3762  0012F2  0E10               	movlw	high STR_15
  3763  0012F4  6E09               	movwf	draw_string@tableau+1,c
  3764  0012F6  EC0D  F00E         	call	_draw_string	;wreg free
  3765                           
  3766                           ;T1.c: 97: draw_hex8(lecture_8bit_analogique(10));
  3767  0012FA  0E0A               	movlw	10
  3768  0012FC  ECA7  F00E         	call	_lecture_8bit_analogique
  3769  001300  ECF1  F00C         	call	_draw_hex8
  3770                           
  3771                           ;T1.c: 99: goto_lico(10,0);
  3772  001304  0E00               	movlw	0
  3773  001306  6E09               	movwf	goto_lico@colonne,c
  3774  001308  0E0A               	movlw	10
  3775  00130A  EC71  F00D         	call	_goto_lico
  3776                           
  3777                           ;T1.c: 100: draw_string("Y-Joystick:");
  3778  00130E  0E2F               	movlw	low STR_16
  3779  001310  6E08               	movwf	draw_string@tableau,c
  3780  001312  0E10               	movlw	high STR_16
  3781  001314  6E09               	movwf	draw_string@tableau+1,c
  3782  001316  EC0D  F00E         	call	_draw_string	;wreg free
  3783                           
  3784                           ;T1.c: 101: draw_hex8(lecture_8bit_analogique(11));
  3785  00131A  0E0B               	movlw	11
  3786  00131C  ECA7  F00E         	call	_lecture_8bit_analogique
  3787  001320  ECF1  F00C         	call	_draw_hex8
  3788                           
  3789                           ;T1.c: 103: if (TP_appui==1)
  3790  001324  0100               	movlb	0	; () banked
  3791  001326  0566               	decf	102,w,b
  3792  001328  A4D8               	btfss	status,2,c
  3793  00132A  D020               	goto	i2l403
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;T1.c: 104: {
  3797                           ;T1.c: 105: goto_lico(0,20);
  3798  00132C  0E14               	movlw	20
  3799  00132E  6E09               	movwf	goto_lico@colonne,c
  3800  001330  0E00               	movlw	0
  3801  001332  EC71  F00D         	call	_goto_lico
  3802                           
  3803                           ;T1.c: 106: draw_string("x=");
  3804  001336  0E82               	movlw	low STR_17
  3805  001338  6E08               	movwf	draw_string@tableau,c
  3806  00133A  0E10               	movlw	high STR_17
  3807  00133C  6E09               	movwf	draw_string@tableau+1,c
  3808  00133E  EC0D  F00E         	call	_draw_string	;wreg free
  3809                           
  3810                           ;T1.c: 107: draw_hex8(TP_x);
  3811  001342  0100               	movlb	0	; () banked
  3812  001344  5167               	movf	103,w,b
  3813  001346  ECF1  F00C         	call	_draw_hex8
  3814                           
  3815                           ;T1.c: 108: draw_string(" y=");
  3816  00134A  0E7B               	movlw	low STR_18
  3817  00134C  6E08               	movwf	draw_string@tableau,c
  3818  00134E  0E10               	movlw	high STR_18
  3819  001350  6E09               	movwf	draw_string@tableau+1,c
  3820  001352  EC0D  F00E         	call	_draw_string	;wreg free
  3821                           
  3822                           ;T1.c: 109: draw_hex8(TP_y);
  3823  001356  0100               	movlb	0	; () banked
  3824  001358  5168               	movf	104,w,b
  3825  00135A  ECF1  F00C         	call	_draw_hex8
  3826                           
  3827                           ;T1.c: 110: plot1(TP_x,TP_y);
  3828  00135E  C068 F009          	movff	104,plot1@y
  3829  001362  0100               	movlb	0	; () banked
  3830  001364  5167               	movf	103,w,b
  3831  001366  EC24  F00C         	call	_plot1
  3832                           
  3833                           ;T1.c: 111: }
  3834  00136A  D6E5               	goto	i2l3782
  3835  00136C                     i2l403:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;T1.c: 112: else
  3839                           ;T1.c: 113: {
  3840                           ;T1.c: 114: __nop();
  3841  00136C  F000               	nop	
  3842  00136E  D6E3               	goto	i2l3782
  3843  001370                     __end_of_tache1:
  3844                           	opt stack 0
  3845                           tosu	equ	0xFFF
  3846                           tosh	equ	0xFFE
  3847                           tosl	equ	0xFFD
  3848                           stkptr	equ	0xFFC
  3849                           pclatu	equ	0xFFB
  3850                           pclath	equ	0xFFA
  3851                           tblptru	equ	0xFF8
  3852                           tblptrh	equ	0xFF7
  3853                           tblptrl	equ	0xFF6
  3854                           tablat	equ	0xFF5
  3855                           prodh	equ	0xFF4
  3856                           prodl	equ	0xFF3
  3857                           intcon	equ	0xFF2
  3858                           intcon2	equ	0xFF1
  3859                           postinc0	equ	0xFEE
  3860                           fsr0h	equ	0xFEA
  3861                           fsr0l	equ	0xFE9
  3862                           postinc1	equ	0xFE6
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           bsr	equ	0xFE0
  3866                           indf2	equ	0xFDF
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function i2_initialisation_des_ports *****************
  3872 ;; Defined at:
  3873 ;;		line 20 in file "main.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_tache1
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text15
  3901  001BCE                     __ptext15:
  3902                           	opt stack 0
  3903  001BCE                     i2_initialisation_des_ports:
  3904                           	opt stack 27
  3905                           
  3906                           ;main.c: 23: MEMCON=0xA0;
  3907                           
  3908                           ;incstack = 0
  3909  001BCE  0EA0               	movlw	160
  3910  001BD0  010F               	movlb	15	; () banked
  3911  001BD2  6F26               	movwf	38,b	;volatile
  3912                           
  3913                           ;main.c: 26: ANCON0=0x00;
  3914  001BD4  0E00               	movlw	0
  3915  001BD6  010F               	movlb	15	; () banked
  3916  001BD8  6F25               	movwf	37,b	;volatile
  3917                           
  3918                           ;main.c: 27: ANCON1=0x00;
  3919  001BDA  0E00               	movlw	0
  3920  001BDC  010F               	movlb	15	; () banked
  3921  001BDE  6F24               	movwf	36,b	;volatile
  3922                           
  3923                           ;main.c: 28: ANCON2=0x00;
  3924  001BE0  0E00               	movlw	0
  3925  001BE2  010F               	movlb	15	; () banked
  3926  001BE4  6F23               	movwf	35,b	;volatile
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;main.c: 29: ANCON0bits.ANSEL0=1;
  3930  001BE6  010F               	movlb	15	; () banked
  3931  001BE8  8125               	bsf	37,0,b	;volatile
  3932                           
  3933                           ; BSR set to: 15
  3934                           ;main.c: 30: ANCON0bits.ANSEL1=1;
  3935  001BEA  010F               	movlb	15	; () banked
  3936  001BEC  8325               	bsf	37,1,b	;volatile
  3937                           
  3938                           ; BSR set to: 15
  3939                           ;main.c: 31: ANCON0bits.ANSEL2=1;
  3940  001BEE  010F               	movlb	15	; () banked
  3941  001BF0  8525               	bsf	37,2,b	;volatile
  3942                           
  3943                           ; BSR set to: 15
  3944                           ;main.c: 32: ANCON0bits.ANSEL3=1;
  3945  001BF2  010F               	movlb	15	; () banked
  3946  001BF4  8725               	bsf	37,3,b	;volatile
  3947                           
  3948                           ; BSR set to: 15
  3949                           ;main.c: 33: ANCON1bits.ANSEL10=1;
  3950  001BF6  010F               	movlb	15	; () banked
  3951  001BF8  8524               	bsf	36,2,b	;volatile
  3952                           
  3953                           ; BSR set to: 15
  3954                           ;main.c: 34: ANCON1bits.ANSEL11=1;
  3955  001BFA  010F               	movlb	15	; () banked
  3956  001BFC  8724               	bsf	36,3,b	;volatile
  3957                           
  3958                           ; BSR set to: 15
  3959                           ;main.c: 38: LATCbits.LATC2=1;
  3960  001BFE  848B               	bsf	3979,2,c	;volatile
  3961                           
  3962                           ; BSR set to: 15
  3963                           ;main.c: 39: LATCbits.LATC1=1;
  3964  001C00  828B               	bsf	3979,1,c	;volatile
  3965                           
  3966                           ; BSR set to: 15
  3967                           ;main.c: 40: LATGbits.LATG0=1;
  3968  001C02  808F               	bsf	3983,0,c	;volatile
  3969                           
  3970                           ; BSR set to: 15
  3971                           ;main.c: 43: TRISCbits.TRISC2=0;
  3972  001C04  9494               	bcf	3988,2,c	;volatile
  3973                           
  3974                           ; BSR set to: 15
  3975                           ;main.c: 44: TRISCbits.TRISC1=0;
  3976  001C06  9294               	bcf	3988,1,c	;volatile
  3977                           
  3978                           ; BSR set to: 15
  3979                           ;main.c: 45: TRISGbits.TRISG0=0;
  3980  001C08  9098               	bcf	3992,0,c	;volatile
  3981                           
  3982                           ; BSR set to: 15
  3983                           ;main.c: 46: TRISGbits.TRISG3=0;
  3984  001C0A  9698               	bcf	3992,3,c	;volatile
  3985                           
  3986                           ; BSR set to: 15
  3987                           ;main.c: 47: TRISGbits.TRISG4=0;
  3988  001C0C  9898               	bcf	3992,4,c	;volatile
  3989                           
  3990                           ; BSR set to: 15
  3991                           ;main.c: 48: TRISDbits.TRISD2=0;
  3992  001C0E  9495               	bcf	3989,2,c	;volatile
  3993                           
  3994                           ; BSR set to: 15
  3995                           ;main.c: 49: TRISDbits.TRISD3=0;
  3996  001C10  9695               	bcf	3989,3,c	;volatile
  3997                           
  3998                           ; BSR set to: 15
  3999                           ;main.c: 52: INTCON2bits.RBPU=0;
  4000  001C12  9EF1               	bcf	intcon2,7,c	;volatile
  4001                           
  4002                           ; BSR set to: 15
  4003                           ;main.c: 53: PADCFG1bits.REPU=1;
  4004  001C14  010F               	movlb	15	; () banked
  4005  001C16  8D53               	bsf	83,6,b	;volatile
  4006                           
  4007                           ; BSR set to: 15
  4008  001C18  0012               	return		;funcret
  4009  001C1A                     __end_ofi2_initialisation_des_ports:
  4010                           	opt stack 0
  4011                           tosu	equ	0xFFF
  4012                           tosh	equ	0xFFE
  4013                           tosl	equ	0xFFD
  4014                           stkptr	equ	0xFFC
  4015                           pclatu	equ	0xFFB
  4016                           pclath	equ	0xFFA
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           intcon2	equ	0xFF1
  4025                           postinc0	equ	0xFEE
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           postinc1	equ	0xFE6
  4029                           fsr1h	equ	0xFE2
  4030                           fsr1l	equ	0xFE1
  4031                           bsr	equ	0xFE0
  4032                           indf2	equ	0xFDF
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _plot1 *****************
  4038 ;; Defined at:
  4039 ;;		line 320 in file "afficheur.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  x               1    wreg     unsigned char 
  4042 ;;  y               1    8[COMRAM] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  x               1   11[COMRAM] unsigned char 
  4045 ;;  add             2    9[COMRAM] unsigned int 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        4 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    3
  4062 ;; This function calls:
  4063 ;;		___awdiv
  4064 ;;		___awmod
  4065 ;;		_command
  4066 ;;		_d2command
  4067 ;; This function is called by:
  4068 ;;		_tache1
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text16
  4073  001848                     __ptext16:
  4074                           	opt stack 0
  4075  001848                     _plot1:
  4076                           	opt stack 24
  4077                           
  4078                           ; BSR set to: 15
  4079                           ;incstack = 0
  4080                           ;plot1@x stored from wreg
  4081  001848  6E0C               	movwf	plot1@x,c
  4082                           
  4083                           ;afficheur.c: 322: unsigned int add;
  4084                           ;afficheur.c: 324: add=40*y+x/6;
  4085  00184A  C00C  F001         	movff	plot1@x,___awdiv@dividend
  4086  00184E  6A02               	clrf	___awdiv@dividend+1,c
  4087  001850  0E00               	movlw	0
  4088  001852  6E04               	movwf	___awdiv@divisor+1,c
  4089  001854  0E06               	movlw	6
  4090  001856  6E03               	movwf	___awdiv@divisor,c
  4091  001858  EC77  F00C         	call	___awdiv	;wreg free
  4092  00185C  5009               	movf	plot1@y,w,c
  4093  00185E  0D28               	mullw	40
  4094  001860  5001               	movf	?___awdiv,w,c
  4095  001862  24F3               	addwf	prodl,w,c
  4096  001864  6E0A               	movwf	plot1@add,c
  4097  001866  5002               	movf	?___awdiv+1,w,c
  4098  001868  20F4               	addwfc	prodh,w,c
  4099  00186A  6E0B               	movwf	plot1@add+1,c
  4100                           
  4101                           ;afficheur.c: 325: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4102  00186C  500B               	movf	plot1@add+1,w,c
  4103  00186E  6E05               	movwf	d2command@d2,c
  4104  001870  0E24               	movlw	36
  4105  001872  6E06               	movwf	d2command@cmd,c
  4106  001874  500A               	movf	plot1@add,w,c
  4107  001876  EC99  F00D         	call	_d2command
  4108                           
  4109                           ;afficheur.c: 327: switch(x%6)
  4110  00187A  D018               	goto	i2l3496
  4111  00187C                     i2l3482:
  4112  00187C  0EFD               	movlw	253
  4113  00187E  EC35  F00F         	call	_command
  4114  001882  0012               	return	
  4115  001884                     i2l3484:
  4116  001884  0EFC               	movlw	252
  4117  001886  EC35  F00F         	call	_command
  4118  00188A  0012               	return	
  4119  00188C                     i2l3486:
  4120  00188C  0EFB               	movlw	251
  4121  00188E  EC35  F00F         	call	_command
  4122  001892  0012               	return	
  4123  001894                     i2l3488:
  4124  001894  0EFA               	movlw	250
  4125  001896  EC35  F00F         	call	_command
  4126  00189A  0012               	return	
  4127  00189C                     i2l3490:
  4128  00189C  0EF9               	movlw	249
  4129  00189E  EC35  F00F         	call	_command
  4130  0018A2  0012               	return	
  4131  0018A4                     i2l3492:
  4132  0018A4  0EF8               	movlw	248
  4133  0018A6  EC35  F00F         	call	_command
  4134                           
  4135                           ;afficheur.c: 337: }
  4136                           
  4137                           ;afficheur.c: 336: default:break;
  4138  0018AA  0012               	return	
  4139  0018AC                     i2l3496:
  4140  0018AC  C00C  F001         	movff	plot1@x,___awmod@dividend
  4141  0018B0  6A02               	clrf	___awmod@dividend+1,c
  4142  0018B2  0E00               	movlw	0
  4143  0018B4  6E04               	movwf	___awmod@divisor+1,c
  4144  0018B6  0E06               	movlw	6
  4145  0018B8  6E03               	movwf	___awmod@divisor,c
  4146  0018BA  ECB9  F00C         	call	___awmod	;wreg free
  4147                           
  4148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4149                           ; Switch size 1, requested type "space"
  4150                           ; Number of cases is 1, Range of values is 0 to 0
  4151                           ; switch strategies available:
  4152                           ; Name         Instructions Cycles
  4153                           ; simple_byte            4     3 (average)
  4154                           ;	Chosen strategy is simple_byte
  4155  0018BE  5002               	movf	?___awmod+1,w,c
  4156  0018C0  0A00               	xorlw	0	; case 0
  4157  0018C2  A4D8               	btfss	status,2,c
  4158  0018C4  0012               	return	
  4159                           
  4160                           ; Switch size 1, requested type "space"
  4161                           ; Number of cases is 6, Range of values is 0 to 5
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte           19    10 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166  0018C6  5001               	movf	?___awmod,w,c
  4167  0018C8  0A00               	xorlw	0	; case 0
  4168  0018CA  B4D8               	btfsc	status,2,c
  4169  0018CC  D7D7               	goto	i2l3482
  4170  0018CE  0A01               	xorlw	1	; case 1
  4171  0018D0  B4D8               	btfsc	status,2,c
  4172  0018D2  D7D8               	goto	i2l3484
  4173  0018D4  0A03               	xorlw	3	; case 2
  4174  0018D6  B4D8               	btfsc	status,2,c
  4175  0018D8  D7D9               	goto	i2l3486
  4176  0018DA  0A01               	xorlw	1	; case 3
  4177  0018DC  B4D8               	btfsc	status,2,c
  4178  0018DE  D7DA               	goto	i2l3488
  4179  0018E0  0A07               	xorlw	7	; case 4
  4180  0018E2  B4D8               	btfsc	status,2,c
  4181  0018E4  D7DB               	goto	i2l3490
  4182  0018E6  0A01               	xorlw	1	; case 5
  4183  0018E8  A4D8               	btfss	status,2,c
  4184  0018EA  0012               	return	
  4185  0018EC  D7DB               	goto	i2l3492
  4186  0018EE                     __end_of_plot1:
  4187                           	opt stack 0
  4188                           tosu	equ	0xFFF
  4189                           tosh	equ	0xFFE
  4190                           tosl	equ	0xFFD
  4191                           stkptr	equ	0xFFC
  4192                           pclatu	equ	0xFFB
  4193                           pclath	equ	0xFFA
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           intcon2	equ	0xFF1
  4202                           postinc0	equ	0xFEE
  4203                           fsr0h	equ	0xFEA
  4204                           fsr0l	equ	0xFE9
  4205                           postinc1	equ	0xFE6
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           bsr	equ	0xFE0
  4209                           indf2	equ	0xFDF
  4210                           fsr2h	equ	0xFDA
  4211                           fsr2l	equ	0xFD9
  4212                           status	equ	0xFD8
  4213                           
  4214 ;; *************** function ___awmod *****************
  4215 ;; Defined at:
  4216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  dividend        2    0[COMRAM] int 
  4219 ;;  divisor         2    2[COMRAM] int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  sign            1    5[COMRAM] unsigned char 
  4222 ;;  counter         1    4[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2    0[COMRAM] int 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        6 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_plot1
  4242 ;;		_plot0
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text17
  4247  001972                     __ptext17:
  4248                           	opt stack 0
  4249  001972                     ___awmod:
  4250                           	opt stack 26
  4251                           
  4252                           ;incstack = 0
  4253  001972  0E00               	movlw	0
  4254  001974  6E06               	movwf	___awmod@sign,c
  4255  001976  AE02               	btfss	___awmod@dividend+1,7,c
  4256  001978  D006               	goto	i2l3344
  4257  00197A  6C01               	negf	___awmod@dividend,c
  4258  00197C  1E02               	comf	___awmod@dividend+1,f,c
  4259  00197E  B0D8               	btfsc	status,0,c
  4260  001980  2A02               	incf	___awmod@dividend+1,f,c
  4261  001982  0E01               	movlw	1
  4262  001984  6E06               	movwf	___awmod@sign,c
  4263  001986                     i2l3344:
  4264  001986  AE04               	btfss	___awmod@divisor+1,7,c
  4265  001988  D004               	goto	i2l3348
  4266  00198A  6C03               	negf	___awmod@divisor,c
  4267  00198C  1E04               	comf	___awmod@divisor+1,f,c
  4268  00198E  B0D8               	btfsc	status,0,c
  4269  001990  2A04               	incf	___awmod@divisor+1,f,c
  4270  001992                     i2l3348:
  4271  001992  5003               	movf	___awmod@divisor,w,c
  4272  001994  1004               	iorwf	___awmod@divisor+1,w,c
  4273  001996  B4D8               	btfsc	status,2,c
  4274  001998  D018               	goto	i2l3364
  4275  00199A  0E01               	movlw	1
  4276  00199C  6E05               	movwf	___awmod@counter,c
  4277  00199E  D004               	goto	i2l3354
  4278  0019A0                     i2l3352:
  4279  0019A0  90D8               	bcf	status,0,c
  4280  0019A2  3603               	rlcf	___awmod@divisor,f,c
  4281  0019A4  3604               	rlcf	___awmod@divisor+1,f,c
  4282  0019A6  2A05               	incf	___awmod@counter,f,c
  4283  0019A8                     i2l3354:
  4284  0019A8  AE04               	btfss	___awmod@divisor+1,7,c
  4285  0019AA  D7FA               	goto	i2l3352
  4286  0019AC                     i2l3356:
  4287  0019AC  5003               	movf	___awmod@divisor,w,c
  4288  0019AE  5C01               	subwf	___awmod@dividend,w,c
  4289  0019B0  5004               	movf	___awmod@divisor+1,w,c
  4290  0019B2  5802               	subwfb	___awmod@dividend+1,w,c
  4291  0019B4  A0D8               	btfss	status,0,c
  4292  0019B6  D004               	goto	i2l3360
  4293  0019B8  5003               	movf	___awmod@divisor,w,c
  4294  0019BA  5E01               	subwf	___awmod@dividend,f,c
  4295  0019BC  5004               	movf	___awmod@divisor+1,w,c
  4296  0019BE  5A02               	subwfb	___awmod@dividend+1,f,c
  4297  0019C0                     i2l3360:
  4298  0019C0  90D8               	bcf	status,0,c
  4299  0019C2  3204               	rrcf	___awmod@divisor+1,f,c
  4300  0019C4  3203               	rrcf	___awmod@divisor,f,c
  4301  0019C6  2E05               	decfsz	___awmod@counter,f,c
  4302  0019C8  D7F1               	goto	i2l3356
  4303  0019CA                     i2l3364:
  4304  0019CA  5006               	movf	___awmod@sign,w,c
  4305  0019CC  B4D8               	btfsc	status,2,c
  4306  0019CE  D004               	goto	i2l3368
  4307  0019D0  6C01               	negf	___awmod@dividend,c
  4308  0019D2  1E02               	comf	___awmod@dividend+1,f,c
  4309  0019D4  B0D8               	btfsc	status,0,c
  4310  0019D6  2A02               	incf	___awmod@dividend+1,f,c
  4311  0019D8                     i2l3368:
  4312  0019D8  C001  F001         	movff	___awmod@dividend,?___awmod
  4313  0019DC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4314  0019E0  0012               	return	
  4315  0019E2                     __end_of___awmod:
  4316                           	opt stack 0
  4317                           tosu	equ	0xFFF
  4318                           tosh	equ	0xFFE
  4319                           tosl	equ	0xFFD
  4320                           stkptr	equ	0xFFC
  4321                           pclatu	equ	0xFFB
  4322                           pclath	equ	0xFFA
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           intcon	equ	0xFF2
  4330                           intcon2	equ	0xFF1
  4331                           postinc0	equ	0xFEE
  4332                           fsr0h	equ	0xFEA
  4333                           fsr0l	equ	0xFE9
  4334                           postinc1	equ	0xFE6
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           bsr	equ	0xFE0
  4338                           indf2	equ	0xFDF
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8
  4342                           
  4343 ;; *************** function ___awdiv *****************
  4344 ;; Defined at:
  4345 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  dividend        2    0[COMRAM] int 
  4348 ;;  divisor         2    2[COMRAM] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  quotient        2    6[COMRAM] int 
  4351 ;;  sign            1    5[COMRAM] unsigned char 
  4352 ;;  counter         1    4[COMRAM] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2    0[COMRAM] int 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:        8 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_plot1
  4372 ;;		_plot0
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text18
  4377  0018EE                     __ptext18:
  4378                           	opt stack 0
  4379  0018EE                     ___awdiv:
  4380                           	opt stack 26
  4381                           
  4382                           ;incstack = 0
  4383  0018EE  0E00               	movlw	0
  4384  0018F0  6E06               	movwf	___awdiv@sign,c
  4385  0018F2  AE04               	btfss	___awdiv@divisor+1,7,c
  4386  0018F4  D006               	goto	i2l3300
  4387  0018F6  6C03               	negf	___awdiv@divisor,c
  4388  0018F8  1E04               	comf	___awdiv@divisor+1,f,c
  4389  0018FA  B0D8               	btfsc	status,0,c
  4390  0018FC  2A04               	incf	___awdiv@divisor+1,f,c
  4391  0018FE  0E01               	movlw	1
  4392  001900  6E06               	movwf	___awdiv@sign,c
  4393  001902                     i2l3300:
  4394  001902  AE02               	btfss	___awdiv@dividend+1,7,c
  4395  001904  D006               	goto	i2l3306
  4396  001906  6C01               	negf	___awdiv@dividend,c
  4397  001908  1E02               	comf	___awdiv@dividend+1,f,c
  4398  00190A  B0D8               	btfsc	status,0,c
  4399  00190C  2A02               	incf	___awdiv@dividend+1,f,c
  4400  00190E  0E01               	movlw	1
  4401  001910  1A06               	xorwf	___awdiv@sign,f,c
  4402  001912                     i2l3306:
  4403  001912  0E00               	movlw	0
  4404  001914  6E08               	movwf	___awdiv@quotient+1,c
  4405  001916  0E00               	movlw	0
  4406  001918  6E07               	movwf	___awdiv@quotient,c
  4407  00191A  5003               	movf	___awdiv@divisor,w,c
  4408  00191C  1004               	iorwf	___awdiv@divisor+1,w,c
  4409  00191E  B4D8               	btfsc	status,2,c
  4410  001920  D01C               	goto	i2l3328
  4411  001922  0E01               	movlw	1
  4412  001924  6E05               	movwf	___awdiv@counter,c
  4413  001926  D004               	goto	i2l3314
  4414  001928                     i2l3312:
  4415  001928  90D8               	bcf	status,0,c
  4416  00192A  3603               	rlcf	___awdiv@divisor,f,c
  4417  00192C  3604               	rlcf	___awdiv@divisor+1,f,c
  4418  00192E  2A05               	incf	___awdiv@counter,f,c
  4419  001930                     i2l3314:
  4420  001930  AE04               	btfss	___awdiv@divisor+1,7,c
  4421  001932  D7FA               	goto	i2l3312
  4422  001934                     i2l3316:
  4423  001934  90D8               	bcf	status,0,c
  4424  001936  3607               	rlcf	___awdiv@quotient,f,c
  4425  001938  3608               	rlcf	___awdiv@quotient+1,f,c
  4426  00193A  5003               	movf	___awdiv@divisor,w,c
  4427  00193C  5C01               	subwf	___awdiv@dividend,w,c
  4428  00193E  5004               	movf	___awdiv@divisor+1,w,c
  4429  001940  5802               	subwfb	___awdiv@dividend+1,w,c
  4430  001942  A0D8               	btfss	status,0,c
  4431  001944  D005               	goto	i2l3324
  4432  001946  5003               	movf	___awdiv@divisor,w,c
  4433  001948  5E01               	subwf	___awdiv@dividend,f,c
  4434  00194A  5004               	movf	___awdiv@divisor+1,w,c
  4435  00194C  5A02               	subwfb	___awdiv@dividend+1,f,c
  4436  00194E  8007               	bsf	___awdiv@quotient,0,c
  4437  001950                     i2l3324:
  4438  001950  90D8               	bcf	status,0,c
  4439  001952  3204               	rrcf	___awdiv@divisor+1,f,c
  4440  001954  3203               	rrcf	___awdiv@divisor,f,c
  4441  001956  2E05               	decfsz	___awdiv@counter,f,c
  4442  001958  D7ED               	goto	i2l3316
  4443  00195A                     i2l3328:
  4444  00195A  5006               	movf	___awdiv@sign,w,c
  4445  00195C  B4D8               	btfsc	status,2,c
  4446  00195E  D004               	goto	i2l3332
  4447  001960  6C07               	negf	___awdiv@quotient,c
  4448  001962  1E08               	comf	___awdiv@quotient+1,f,c
  4449  001964  B0D8               	btfsc	status,0,c
  4450  001966  2A08               	incf	___awdiv@quotient+1,f,c
  4451  001968                     i2l3332:
  4452  001968  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4453  00196C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4454  001970  0012               	return	
  4455  001972                     __end_of___awdiv:
  4456                           	opt stack 0
  4457                           tosu	equ	0xFFF
  4458                           tosh	equ	0xFFE
  4459                           tosl	equ	0xFFD
  4460                           stkptr	equ	0xFFC
  4461                           pclatu	equ	0xFFB
  4462                           pclath	equ	0xFFA
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           postinc0	equ	0xFEE
  4472                           fsr0h	equ	0xFEA
  4473                           fsr0l	equ	0xFE9
  4474                           postinc1	equ	0xFE6
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           bsr	equ	0xFE0
  4478                           indf2	equ	0xFDF
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _lecture_8bit_analogique *****************
  4484 ;; Defined at:
  4485 ;;		line 57 in file "main.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  channel         1    wreg     unsigned char 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  channel         1    1[COMRAM] unsigned char 
  4490 ;;  ret             1    0[COMRAM] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        2 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_tache1
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text19
  4514  001D4E                     __ptext19:
  4515                           	opt stack 0
  4516  001D4E                     _lecture_8bit_analogique:
  4517                           	opt stack 27
  4518                           
  4519                           ;incstack = 0
  4520                           ;lecture_8bit_analogique@channel stored from wreg
  4521  001D4E  6E02               	movwf	lecture_8bit_analogique@channel,c
  4522                           
  4523                           ;main.c: 59: unsigned char ret;
  4524                           ;main.c: 62: ADCON1=0;
  4525  001D50  0E00               	movlw	0
  4526  001D52  6EC1               	movwf	4033,c	;volatile
  4527                           
  4528                           ;main.c: 63: ADCON2=0x16;
  4529  001D54  0E16               	movlw	22
  4530  001D56  6EC0               	movwf	4032,c	;volatile
  4531                           
  4532                           ;main.c: 64: channel=channel&0x1F;
  4533  001D58  5002               	movf	lecture_8bit_analogique@channel,w,c
  4534  001D5A  0B1F               	andlw	31
  4535  001D5C  6E02               	movwf	lecture_8bit_analogique@channel,c
  4536                           
  4537                           ;main.c: 65: channel=channel<<2;
  4538  001D5E  4402               	rlncf	lecture_8bit_analogique@channel,w,c
  4539  001D60  46E8               	rlncf	wreg,f,c
  4540  001D62  0BFC               	andlw	252
  4541  001D64  6E02               	movwf	lecture_8bit_analogique@channel,c
  4542                           
  4543                           ;main.c: 66: ADCON0=channel|0x01;
  4544  001D66  5002               	movf	lecture_8bit_analogique@channel,w,c
  4545  001D68  0901               	iorlw	1
  4546  001D6A  6EC2               	movwf	4034,c	;volatile
  4547                           
  4548                           ;main.c: 68: ADCON0bits.GO=1;
  4549  001D6C  82C2               	bsf	4034,1,c	;volatile
  4550  001D6E                     i2l132:
  4551  001D6E  B2C2               	btfsc	4034,1,c	;volatile
  4552  001D70  D7FE               	goto	i2l132
  4553                           
  4554                           ;main.c: 72: if ((ADRESL&0x01)==0x01)
  4555  001D72  A0C3               	btfss	4035,0,c	;volatile
  4556  001D74  D003               	goto	i2l135
  4557                           
  4558                           ;main.c: 73: ret=0;
  4559  001D76  0E00               	movlw	0
  4560  001D78  6E01               	movwf	lecture_8bit_analogique@ret,c
  4561  001D7A  D002               	goto	i2l2086
  4562  001D7C                     i2l135:
  4563                           
  4564                           ;main.c: 74: else
  4565                           ;main.c: 75: ret=ADRESH;
  4566  001D7C  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4567  001D80                     i2l2086:
  4568                           
  4569                           ;main.c: 78: return ret;
  4570  001D80  5001               	movf	lecture_8bit_analogique@ret,w,c
  4571  001D82  0012               	return	
  4572  001D84                     __end_of_lecture_8bit_analogique:
  4573                           	opt stack 0
  4574                           tosu	equ	0xFFF
  4575                           tosh	equ	0xFFE
  4576                           tosl	equ	0xFFD
  4577                           stkptr	equ	0xFFC
  4578                           pclatu	equ	0xFFB
  4579                           pclath	equ	0xFFA
  4580                           tblptru	equ	0xFF8
  4581                           tblptrh	equ	0xFF7
  4582                           tblptrl	equ	0xFF6
  4583                           tablat	equ	0xFF5
  4584                           prodh	equ	0xFF4
  4585                           prodl	equ	0xFF3
  4586                           intcon	equ	0xFF2
  4587                           intcon2	equ	0xFF1
  4588                           postinc0	equ	0xFEE
  4589                           fsr0h	equ	0xFEA
  4590                           fsr0l	equ	0xFE9
  4591                           wreg	equ	0xFE8
  4592                           postinc1	equ	0xFE6
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           bsr	equ	0xFE0
  4596                           indf2	equ	0xFDF
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _initialisation_afficheur *****************
  4602 ;; Defined at:
  4603 ;;		line 164 in file "afficheur.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  error_count     1    8[COMRAM] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;Total ram usage:        1 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    3
  4624 ;; This function calls:
  4625 ;;		_check_status_ok
  4626 ;;		_command
  4627 ;;		_d1command
  4628 ;;		_d2command
  4629 ;;		_delai_us_char
  4630 ;; This function is called by:
  4631 ;;		_tache1
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text20
  4636  0016CE                     __ptext20:
  4637                           	opt stack 0
  4638  0016CE                     _initialisation_afficheur:
  4639                           	opt stack 24
  4640                           
  4641                           ;afficheur.c: 167: unsigned char error_count;
  4642                           ;afficheur.c: 169: error_count=0;
  4643                           
  4644                           ;incstack = 0
  4645  0016CE  0E00               	movlw	0
  4646  0016D0  6E09               	movwf	initialisation_afficheur@error_count,c
  4647                           
  4648                           ;afficheur.c: 172: LATH=0;
  4649  0016D2  0E00               	movlw	0
  4650  0016D4  6E90               	movwf	3984,c	;volatile
  4651                           
  4652                           ;afficheur.c: 173: LATJ=0x1F;
  4653  0016D6  0E1F               	movlw	31
  4654  0016D8  6E91               	movwf	3985,c	;volatile
  4655                           
  4656                           ;afficheur.c: 176: TRISH=0;
  4657  0016DA  0E00               	movlw	0
  4658  0016DC  6E99               	movwf	3993,c	;volatile
  4659                           
  4660                           ;afficheur.c: 177: TRISJ=0;
  4661  0016DE  0E00               	movlw	0
  4662  0016E0  6E9A               	movwf	3994,c	;volatile
  4663                           
  4664                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4665  0016E2  9A91               	bcf	3985,5,c	;volatile
  4666                           
  4667                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4668  0016E4  8C91               	bsf	3985,6,c	;volatile
  4669                           
  4670                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4671  0016E6  9891               	bcf	3985,4,c	;volatile
  4672                           
  4673                           ;afficheur.c: 185: delai_us_char(4);
  4674  0016E8  0E04               	movlw	4
  4675  0016EA  EC46  F00F         	call	_delai_us_char
  4676                           
  4677                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4678  0016EE  8891               	bsf	3985,4,c	;volatile
  4679                           
  4680                           ;afficheur.c: 190: delai_us_char(12);
  4681  0016F0  0E0C               	movlw	12
  4682  0016F2  EC46  F00F         	call	_delai_us_char
  4683                           
  4684                           ;afficheur.c: 191: while(check_status_ok()==00)
  4685  0016F6  D00C               	goto	i2l3396
  4686  0016F8                     i2l3386:
  4687                           
  4688                           ;afficheur.c: 192: {
  4689                           ;afficheur.c: 193: error_count++;
  4690  0016F8  2A09               	incf	initialisation_afficheur@error_count,f,c
  4691                           
  4692                           ;afficheur.c: 194: delai_us_char(12);
  4693  0016FA  0E0C               	movlw	12
  4694  0016FC  EC46  F00F         	call	_delai_us_char
  4695                           
  4696                           ;afficheur.c: 195: if (error_count>200)
  4697  001700  0EC8               	movlw	200
  4698  001702  6409               	cpfsgt	initialisation_afficheur@error_count,c
  4699  001704  D005               	goto	i2l3396
  4700                           
  4701                           ;afficheur.c: 196: {
  4702                           ;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=0;
  4703  001706  828B               	bsf	3979,1,c	;volatile
  4704  001708  808F               	bsf	3983,0,c	;volatile
  4705  00170A  948B               	bcf	3979,2,c	;volatile
  4706                           
  4707                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4708  00170C  9EF2               	bcf	intcon,7,c	;volatile
  4709  00170E                     i2l972:
  4710  00170E  D7FF               	goto	i2l972
  4711  001710                     i2l3396:
  4712  001710  EC0B  F00F         	call	_check_status_ok	;wreg free
  4713  001714  0900               	iorlw	0
  4714  001716  B4D8               	btfsc	status,2,c
  4715  001718  D7EF               	goto	i2l3386
  4716                           
  4717                           ;afficheur.c: 201: }
  4718                           ;afficheur.c: 202: }
  4719                           ;afficheur.c: 205: d2command(39,15,0x21);
  4720  00171A  0E0F               	movlw	15
  4721  00171C  6E05               	movwf	d2command@d2,c
  4722  00171E  0E21               	movlw	33
  4723  001720  6E06               	movwf	d2command@cmd,c
  4724  001722  0E27               	movlw	39
  4725  001724  EC99  F00D         	call	_d2command
  4726                           
  4727                           ;afficheur.c: 206: d2command(0,0,0x22);
  4728  001728  0E00               	movlw	0
  4729  00172A  6E05               	movwf	d2command@d2,c
  4730  00172C  0E22               	movlw	34
  4731  00172E  6E06               	movwf	d2command@cmd,c
  4732  001730  0E00               	movlw	0
  4733  001732  EC99  F00D         	call	_d2command
  4734                           
  4735                           ;afficheur.c: 207: d2command(0,0,0x24);
  4736  001736  0E00               	movlw	0
  4737  001738  6E05               	movwf	d2command@d2,c
  4738  00173A  0E24               	movlw	36
  4739  00173C  6E06               	movwf	d2command@cmd,c
  4740  00173E  0E00               	movlw	0
  4741  001740  EC99  F00D         	call	_d2command
  4742                           
  4743                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4744  001744  0E7B               	movlw	123
  4745  001746  6E05               	movwf	d2command@d2,c
  4746  001748  0E40               	movlw	64
  4747  00174A  6E06               	movwf	d2command@cmd,c
  4748  00174C  0E00               	movlw	0
  4749  00174E  EC99  F00D         	call	_d2command
  4750                           
  4751                           ;afficheur.c: 211: d2command(40,0,0x41);
  4752  001752  0E00               	movlw	0
  4753  001754  6E05               	movwf	d2command@d2,c
  4754  001756  0E41               	movlw	65
  4755  001758  6E06               	movwf	d2command@cmd,c
  4756  00175A  0E28               	movlw	40
  4757  00175C  EC99  F00D         	call	_d2command
  4758                           
  4759                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4760  001760  0E80               	movlw	128
  4761  001762  6E05               	movwf	d2command@d2,c
  4762  001764  0E42               	movlw	66
  4763  001766  6E06               	movwf	d2command@cmd,c
  4764  001768  0E00               	movlw	0
  4765  00176A  EC99  F00D         	call	_d2command
  4766                           
  4767                           ;afficheur.c: 213: d2command(40,0,0x43);
  4768  00176E  0E00               	movlw	0
  4769  001770  6E05               	movwf	d2command@d2,c
  4770  001772  0E43               	movlw	67
  4771  001774  6E06               	movwf	d2command@cmd,c
  4772  001776  0E28               	movlw	40
  4773  001778  EC99  F00D         	call	_d2command
  4774                           
  4775                           ;afficheur.c: 216: command(0x80);
  4776  00177C  0E80               	movlw	128
  4777  00177E  EC35  F00F         	call	_command
  4778                           
  4779                           ;afficheur.c: 219: command(0x9C);
  4780  001782  0E9C               	movlw	156
  4781  001784  EC35  F00F         	call	_command
  4782                           
  4783                           ;afficheur.c: 222: command(0xA0);
  4784  001788  0EA0               	movlw	160
  4785  00178A  EC35  F00F         	call	_command
  4786                           
  4787                           ;afficheur.c: 225: d1command(0x02,0x70);
  4788  00178E  0E70               	movlw	112
  4789  001790  6E05               	movwf	d1command@cmd,c
  4790  001792  0E02               	movlw	2
  4791  001794  EC8A  F00E         	call	_d1command
  4792  001798  0012               	return		;funcret
  4793  00179A                     __end_of_initialisation_afficheur:
  4794                           	opt stack 0
  4795                           tosu	equ	0xFFF
  4796                           tosh	equ	0xFFE
  4797                           tosl	equ	0xFFD
  4798                           stkptr	equ	0xFFC
  4799                           pclatu	equ	0xFFB
  4800                           pclath	equ	0xFFA
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           prodh	equ	0xFF4
  4806                           prodl	equ	0xFF3
  4807                           intcon	equ	0xFF2
  4808                           intcon2	equ	0xFF1
  4809                           postinc0	equ	0xFEE
  4810                           fsr0h	equ	0xFEA
  4811                           fsr0l	equ	0xFE9
  4812                           wreg	equ	0xFE8
  4813                           postinc1	equ	0xFE6
  4814                           fsr1h	equ	0xFE2
  4815                           fsr1l	equ	0xFE1
  4816                           bsr	equ	0xFE0
  4817                           indf2	equ	0xFDF
  4818                           fsr2h	equ	0xFDA
  4819                           fsr2l	equ	0xFD9
  4820                           status	equ	0xFD8
  4821                           
  4822 ;; *************** function _command *****************
  4823 ;; Defined at:
  4824 ;;		line 90 in file "afficheur.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  cmd             1    wreg     unsigned char 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  cmd             1    5[COMRAM] unsigned char 
  4829 ;;  res             1    4[COMRAM] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      unsigned char 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;Total ram usage:        2 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    2
  4846 ;; This function calls:
  4847 ;;		_delai_us_char
  4848 ;;		_wait_status_ok
  4849 ;;		_write_c_aff
  4850 ;; This function is called by:
  4851 ;;		_initialisation_afficheur
  4852 ;;		_plot1
  4853 ;;		_plot0
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text21
  4858  001E6A                     __ptext21:
  4859                           	opt stack 0
  4860  001E6A                     _command:
  4861                           	opt stack 24
  4862                           
  4863                           ;incstack = 0
  4864                           ;command@cmd stored from wreg
  4865  001E6A  6E06               	movwf	command@cmd,c
  4866                           
  4867                           ;afficheur.c: 92: unsigned char res;
  4868                           ;afficheur.c: 94: res=0;
  4869  001E6C  0E00               	movlw	0
  4870  001E6E  6E05               	movwf	command@res,c
  4871                           
  4872                           ;afficheur.c: 96: if(wait_status_ok()==1)
  4873  001E70  EC48  F00D         	call	_wait_status_ok	;wreg free
  4874  001E74  06E8               	decf	wreg,f,c
  4875  001E76  A4D8               	btfss	status,2,c
  4876  001E78  0012               	return	
  4877                           
  4878                           ;afficheur.c: 97: {
  4879                           ;afficheur.c: 98: delai_us_char(12);
  4880  001E7A  0E0C               	movlw	12
  4881  001E7C  EC46  F00F         	call	_delai_us_char
  4882                           
  4883                           ;afficheur.c: 99: write_c_aff(cmd);
  4884  001E80  5006               	movf	command@cmd,w,c
  4885  001E82  EC64  F00F         	call	_write_c_aff
  4886                           
  4887                           ;afficheur.c: 100: res=1;
  4888  001E86  0E01               	movlw	1
  4889  001E88  6E05               	movwf	command@res,c
  4890  001E8A  0012               	return	
  4891  001E8C                     __end_of_command:
  4892                           	opt stack 0
  4893                           tosu	equ	0xFFF
  4894                           tosh	equ	0xFFE
  4895                           tosl	equ	0xFFD
  4896                           stkptr	equ	0xFFC
  4897                           pclatu	equ	0xFFB
  4898                           pclath	equ	0xFFA
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           intcon2	equ	0xFF1
  4907                           postinc0	equ	0xFEE
  4908                           fsr0h	equ	0xFEA
  4909                           fsr0l	equ	0xFE9
  4910                           wreg	equ	0xFE8
  4911                           postinc1	equ	0xFE6
  4912                           fsr1h	equ	0xFE2
  4913                           fsr1l	equ	0xFE1
  4914                           bsr	equ	0xFE0
  4915                           indf2	equ	0xFDF
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _check_status_ok *****************
  4921 ;; Defined at:
  4922 ;;		line 30 in file "afficheur.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  res             1    0[COMRAM] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      unsigned char 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;Total ram usage:        1 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_initialisation_afficheur
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text22
  4950  001E16                     __ptext22:
  4951                           	opt stack 0
  4952  001E16                     _check_status_ok:
  4953                           	opt stack 26
  4954                           
  4955                           ;afficheur.c: 32: unsigned char res;
  4956                           ;afficheur.c: 35: TRISH=0xFF;
  4957                           
  4958                           ;incstack = 0
  4959  001E16  6899               	setf	3993,c	;volatile
  4960                           
  4961                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4962  001E18  8091               	bsf	3985,0,c	;volatile
  4963                           
  4964                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4965  001E1A  9691               	bcf	3985,3,c	;volatile
  4966                           
  4967                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4968  001E1C  9291               	bcf	3985,1,c	;volatile
  4969                           
  4970                           ;afficheur.c: 39: __nop();
  4971  001E1E  F000               	nop	
  4972                           
  4973                           ;afficheur.c: 40: __nop();
  4974  001E20  F000               	nop	
  4975                           
  4976                           ;afficheur.c: 41: __nop();
  4977  001E22  F000               	nop	
  4978                           
  4979                           ;afficheur.c: 42: res=PORTH;
  4980  001E24  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4981                           
  4982                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4983  001E28  8291               	bsf	3985,1,c	;volatile
  4984                           
  4985                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4986  001E2A  8691               	bsf	3985,3,c	;volatile
  4987                           
  4988                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4989  001E2C  5001               	movf	check_status_ok@res,w,c
  4990  001E2E  0B03               	andlw	3
  4991  001E30  0A03               	xorlw	3
  4992  001E32  A4D8               	btfss	status,2,c
  4993  001E34  D002               	goto	i2l1926
  4994                           
  4995                           ;afficheur.c: 47: res=1;
  4996  001E36  0E01               	movlw	1
  4997  001E38  D001               	goto	L3
  4998  001E3A                     i2l1926:
  4999                           
  5000                           ;afficheur.c: 48: else
  5001                           ;afficheur.c: 49: res=0;
  5002  001E3A  0E00               	movlw	0
  5003  001E3C                     L3:
  5004  001E3C  6E01               	movwf	check_status_ok@res,c
  5005                           
  5006                           ;afficheur.c: 50: return res;
  5007  001E3E  5001               	movf	check_status_ok@res,w,c
  5008  001E40  0012               	return	
  5009  001E42                     __end_of_check_status_ok:
  5010                           	opt stack 0
  5011                           tosu	equ	0xFFF
  5012                           tosh	equ	0xFFE
  5013                           tosl	equ	0xFFD
  5014                           stkptr	equ	0xFFC
  5015                           pclatu	equ	0xFFB
  5016                           pclath	equ	0xFFA
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           prodh	equ	0xFF4
  5022                           prodl	equ	0xFF3
  5023                           intcon	equ	0xFF2
  5024                           intcon2	equ	0xFF1
  5025                           postinc0	equ	0xFEE
  5026                           fsr0h	equ	0xFEA
  5027                           fsr0l	equ	0xFE9
  5028                           wreg	equ	0xFE8
  5029                           postinc1	equ	0xFE6
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           bsr	equ	0xFE0
  5033                           indf2	equ	0xFDF
  5034                           fsr2h	equ	0xFDA
  5035                           fsr2l	equ	0xFD9
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _goto_lico *****************
  5039 ;; Defined at:
  5040 ;;		line 275 in file "afficheur.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  ligne           1    wreg     unsigned char 
  5043 ;;  colonne         1    8[COMRAM] unsigned char 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  ligne           1    9[COMRAM] unsigned char 
  5046 ;;  adr             2   10[COMRAM] unsigned int 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5056 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;Total ram usage:        4 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    3
  5063 ;; This function calls:
  5064 ;;		_d2command
  5065 ;; This function is called by:
  5066 ;;		_tache1
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text23
  5071  001AE2                     __ptext23:
  5072                           	opt stack 0
  5073  001AE2                     _goto_lico:
  5074                           	opt stack 24
  5075                           
  5076                           ;incstack = 0
  5077                           ;goto_lico@ligne stored from wreg
  5078  001AE2  6E0A               	movwf	goto_lico@ligne,c
  5079                           
  5080                           ;afficheur.c: 277: unsigned int adr;
  5081                           ;afficheur.c: 279: adr=0x7B00;
  5082  001AE4  0E7B               	movlw	123
  5083  001AE6  6E0C               	movwf	goto_lico@adr+1,c
  5084  001AE8  0E00               	movlw	0
  5085  001AEA  6E0B               	movwf	goto_lico@adr,c
  5086                           
  5087                           ;afficheur.c: 280: if (ligne>15) ligne=0;
  5088  001AEC  0E0F               	movlw	15
  5089  001AEE  640A               	cpfsgt	goto_lico@ligne,c
  5090  001AF0  D002               	goto	i2l3434
  5091  001AF2  0E00               	movlw	0
  5092  001AF4  6E0A               	movwf	goto_lico@ligne,c
  5093  001AF6                     i2l3434:
  5094                           
  5095                           ;afficheur.c: 281: if (colonne>39) colonne=0;
  5096  001AF6  0E27               	movlw	39
  5097  001AF8  6409               	cpfsgt	goto_lico@colonne,c
  5098  001AFA  D002               	goto	i2l3438
  5099  001AFC  0E00               	movlw	0
  5100  001AFE  6E09               	movwf	goto_lico@colonne,c
  5101  001B00                     i2l3438:
  5102                           
  5103                           ;afficheur.c: 282: adr=adr+40*ligne+colonne;
  5104  001B00  500A               	movf	goto_lico@ligne,w,c
  5105  001B02  0D28               	mullw	40
  5106  001B04  5009               	movf	goto_lico@colonne,w,c
  5107  001B06  26F3               	addwf	prodl,f,c
  5108  001B08  0E00               	movlw	0
  5109  001B0A  22F4               	addwfc	prodh,f,c
  5110  001B0C  500B               	movf	goto_lico@adr,w,c
  5111  001B0E  24F3               	addwf	prodl,w,c
  5112  001B10  6E0B               	movwf	goto_lico@adr,c
  5113  001B12  500C               	movf	goto_lico@adr+1,w,c
  5114  001B14  20F4               	addwfc	prodh,w,c
  5115  001B16  6E0C               	movwf	goto_lico@adr+1,c
  5116                           
  5117                           ;afficheur.c: 283: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  5118  001B18  D001               	goto	i2l3440
  5119  001B1A                     i2l1012:
  5120                           
  5121                           ;afficheur.c: 284: __nop();
  5122  001B1A  F000               	nop	
  5123  001B1C                     i2l3440:
  5124  001B1C  500C               	movf	goto_lico@adr+1,w,c
  5125  001B1E  6E05               	movwf	d2command@d2,c
  5126  001B20  0E24               	movlw	36
  5127  001B22  6E06               	movwf	d2command@cmd,c
  5128  001B24  500B               	movf	goto_lico@adr,w,c
  5129  001B26  EC99  F00D         	call	_d2command
  5130  001B2A  0900               	iorlw	0
  5131  001B2C  A4D8               	btfss	status,2,c
  5132  001B2E  0012               	return	
  5133  001B30  D7F4               	goto	i2l1012
  5134  001B32                     __end_of_goto_lico:
  5135                           	opt stack 0
  5136                           tosu	equ	0xFFF
  5137                           tosh	equ	0xFFE
  5138                           tosl	equ	0xFFD
  5139                           stkptr	equ	0xFFC
  5140                           pclatu	equ	0xFFB
  5141                           pclath	equ	0xFFA
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           prodh	equ	0xFF4
  5147                           prodl	equ	0xFF3
  5148                           intcon	equ	0xFF2
  5149                           intcon2	equ	0xFF1
  5150                           postinc0	equ	0xFEE
  5151                           fsr0h	equ	0xFEA
  5152                           fsr0l	equ	0xFE9
  5153                           wreg	equ	0xFE8
  5154                           postinc1	equ	0xFE6
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           bsr	equ	0xFE0
  5158                           indf2	equ	0xFDF
  5159                           fsr2h	equ	0xFDA
  5160                           fsr2l	equ	0xFD9
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function _draw_string *****************
  5164 ;; Defined at:
  5165 ;;		line 243 in file "afficheur.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  5168 ;;		 -> STR_18(4), STR_17(3), STR_16(12), STR_15(12), 
  5169 ;;		 -> STR_14(21), STR_13(7), STR_12(6), STR_11(6), 
  5170 ;;		 -> STR_10(10), STR_9(9), STR_8(6), STR_7(13), 
  5171 ;;		 -> STR_6(11), STR_5(7), STR_4(3), STR_3(3), 
  5172 ;;		 -> STR_2(3), STR_1(8), 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;Total ram usage:        2 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    3
  5191 ;; This function calls:
  5192 ;;		_d1command
  5193 ;; This function is called by:
  5194 ;;		_tache1
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text24
  5199  001C1A                     __ptext24:
  5200                           	opt stack 0
  5201  001C1A                     _draw_string:
  5202                           	opt stack 24
  5203                           
  5204                           ;afficheur.c: 245: while(tableau[0]!=0)
  5205                           
  5206                           ;incstack = 0
  5207  001C1A  D013               	goto	i2l3460
  5208  001C1C                     i2l990:
  5209                           
  5210                           ;afficheur.c: 248: __nop();
  5211  001C1C  F000               	nop	
  5212  001C1E                     i2l3456:
  5213  001C1E  0EC0               	movlw	192
  5214  001C20  6E05               	movwf	d1command@cmd,c
  5215  001C22  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5216  001C26  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5217  001C2A                     	if	0	;tblptru may be non-zero
  5218  001C2A                     	endif
  5219  001C2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5220  001C2A  0E00               	movlw	low (__mediumconst shr (0+16))
  5221  001C2C  6EF8               	movwf	tblptru,c
  5222  001C2E                     	endif
  5223  001C2E  0008               	tblrd		*
  5224  001C30  50F5               	movf	tablat,w,c
  5225  001C32  0FE0               	addlw	224
  5226  001C34  EC8A  F00E         	call	_d1command
  5227  001C38  0900               	iorlw	0
  5228  001C3A  B4D8               	btfsc	status,2,c
  5229  001C3C  D7EF               	goto	i2l990
  5230                           
  5231                           ;afficheur.c: 249: tableau++;
  5232  001C3E  4A08               	infsnz	draw_string@tableau,f,c
  5233  001C40  2A09               	incf	draw_string@tableau+1,f,c
  5234  001C42                     i2l3460:
  5235  001C42  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5236  001C46  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5237  001C4A                     	if	0	;tblptru may be non-zero
  5238  001C4A                     	endif
  5239  001C4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5240  001C4A  0E00               	movlw	low (__mediumconst shr (0+16))
  5241  001C4C  6EF8               	movwf	tblptru,c
  5242  001C4E                     	endif
  5243  001C4E  0008               	tblrd		*
  5244  001C50  50F5               	movf	tablat,w,c
  5245  001C52  0900               	iorlw	0
  5246  001C54  B4D8               	btfsc	status,2,c
  5247  001C56  0012               	return	
  5248  001C58  D7E2               	goto	i2l3456
  5249  001C5A                     __end_of_draw_string:
  5250                           	opt stack 0
  5251                           tosu	equ	0xFFF
  5252                           tosh	equ	0xFFE
  5253                           tosl	equ	0xFFD
  5254                           stkptr	equ	0xFFC
  5255                           pclatu	equ	0xFFB
  5256                           pclath	equ	0xFFA
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           prodh	equ	0xFF4
  5262                           prodl	equ	0xFF3
  5263                           intcon	equ	0xFF2
  5264                           intcon2	equ	0xFF1
  5265                           postinc0	equ	0xFEE
  5266                           fsr0h	equ	0xFEA
  5267                           fsr0l	equ	0xFE9
  5268                           wreg	equ	0xFE8
  5269                           postinc1	equ	0xFE6
  5270                           fsr1h	equ	0xFE2
  5271                           fsr1l	equ	0xFE1
  5272                           bsr	equ	0xFE0
  5273                           indf2	equ	0xFDF
  5274                           fsr2h	equ	0xFDA
  5275                           fsr2l	equ	0xFD9
  5276                           status	equ	0xFD8
  5277                           
  5278 ;; *************** function _draw_hex8 *****************
  5279 ;; Defined at:
  5280 ;;		line 253 in file "afficheur.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  octet           1    wreg     unsigned char 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  octet           1    7[COMRAM] unsigned char 
  5285 ;;  c               1    8[COMRAM] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;Total ram usage:        2 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    3
  5302 ;; This function calls:
  5303 ;;		_d1command
  5304 ;; This function is called by:
  5305 ;;		_tache1
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text25
  5310  0019E2                     __ptext25:
  5311                           	opt stack 0
  5312  0019E2                     _draw_hex8:
  5313                           	opt stack 24
  5314                           
  5315                           ;incstack = 0
  5316                           ;draw_hex8@octet stored from wreg
  5317  0019E2  6E08               	movwf	draw_hex8@octet,c
  5318                           
  5319                           ;afficheur.c: 255: unsigned char c;
  5320                           ;afficheur.c: 257: c=(octet>>4);
  5321  0019E4  3808               	swapf	draw_hex8@octet,w,c
  5322  0019E6  0B0F               	andlw	15
  5323  0019E8  6E09               	movwf	draw_hex8@c,c
  5324                           
  5325                           ;afficheur.c: 258: if (c>9)
  5326  0019EA  0E09               	movlw	9
  5327  0019EC  6409               	cpfsgt	draw_hex8@c,c
  5328  0019EE  D003               	goto	i2l3466
  5329                           
  5330                           ;afficheur.c: 259: c=c+0x17;
  5331  0019F0  5009               	movf	draw_hex8@c,w,c
  5332  0019F2  0F17               	addlw	23
  5333  0019F4  D002               	goto	L4
  5334  0019F6                     i2l3466:
  5335                           
  5336                           ;afficheur.c: 260: else
  5337                           ;afficheur.c: 261: c=c+0x10;
  5338  0019F6  5009               	movf	draw_hex8@c,w,c
  5339  0019F8  0F10               	addlw	16
  5340  0019FA                     L4:
  5341  0019FA  6E09               	movwf	draw_hex8@c,c
  5342                           
  5343                           ;afficheur.c: 262: while(d1command(c,0xC0)==0)
  5344  0019FC  D001               	goto	i2l3468
  5345  0019FE                     i2l999:
  5346                           
  5347                           ;afficheur.c: 263: __nop();
  5348  0019FE  F000               	nop	
  5349  001A00                     i2l3468:
  5350  001A00  0EC0               	movlw	192
  5351  001A02  6E05               	movwf	d1command@cmd,c
  5352  001A04  5009               	movf	draw_hex8@c,w,c
  5353  001A06  EC8A  F00E         	call	_d1command
  5354  001A0A  0900               	iorlw	0
  5355  001A0C  B4D8               	btfsc	status,2,c
  5356  001A0E  D7F7               	goto	i2l999
  5357                           
  5358                           ;afficheur.c: 265: c=(octet&0x0F);
  5359  001A10  5008               	movf	draw_hex8@octet,w,c
  5360  001A12  0B0F               	andlw	15
  5361  001A14  6E09               	movwf	draw_hex8@c,c
  5362                           
  5363                           ;afficheur.c: 266: if (c>9)
  5364  001A16  0E09               	movlw	9
  5365  001A18  6409               	cpfsgt	draw_hex8@c,c
  5366  001A1A  D003               	goto	i2l3474
  5367                           
  5368                           ;afficheur.c: 267: c=c+0x17;
  5369  001A1C  5009               	movf	draw_hex8@c,w,c
  5370  001A1E  0F17               	addlw	23
  5371  001A20  D002               	goto	L5
  5372  001A22                     i2l3474:
  5373                           
  5374                           ;afficheur.c: 268: else
  5375                           ;afficheur.c: 269: c=c+0x10;
  5376  001A22  5009               	movf	draw_hex8@c,w,c
  5377  001A24  0F10               	addlw	16
  5378  001A26                     L5:
  5379  001A26  6E09               	movwf	draw_hex8@c,c
  5380                           
  5381                           ;afficheur.c: 270: while(d1command(c,0xC0)==0)
  5382  001A28  D001               	goto	i2l3476
  5383  001A2A                     i2l1004:
  5384                           
  5385                           ;afficheur.c: 271: __nop();
  5386  001A2A  F000               	nop	
  5387  001A2C                     i2l3476:
  5388  001A2C  0EC0               	movlw	192
  5389  001A2E  6E05               	movwf	d1command@cmd,c
  5390  001A30  5009               	movf	draw_hex8@c,w,c
  5391  001A32  EC8A  F00E         	call	_d1command
  5392  001A36  0900               	iorlw	0
  5393  001A38  A4D8               	btfss	status,2,c
  5394  001A3A  0012               	return	
  5395  001A3C  D7F6               	goto	i2l1004
  5396  001A3E                     __end_of_draw_hex8:
  5397                           	opt stack 0
  5398                           tosu	equ	0xFFF
  5399                           tosh	equ	0xFFE
  5400                           tosl	equ	0xFFD
  5401                           stkptr	equ	0xFFC
  5402                           pclatu	equ	0xFFB
  5403                           pclath	equ	0xFFA
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           intcon2	equ	0xFF1
  5412                           postinc0	equ	0xFEE
  5413                           fsr0h	equ	0xFEA
  5414                           fsr0l	equ	0xFE9
  5415                           wreg	equ	0xFE8
  5416                           postinc1	equ	0xFE6
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           bsr	equ	0xFE0
  5420                           indf2	equ	0xFDF
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _draw_char *****************
  5426 ;; Defined at:
  5427 ;;		line 228 in file "afficheur.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  dccar           1    wreg     unsigned char 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  dccar           1    7[COMRAM] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;Total ram usage:        1 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    3
  5448 ;; This function calls:
  5449 ;;		_d1command
  5450 ;; This function is called by:
  5451 ;;		_tache1
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text26
  5456  001D84                     __ptext26:
  5457                           	opt stack 0
  5458  001D84                     _draw_char:
  5459                           	opt stack 24
  5460                           
  5461                           ;incstack = 0
  5462                           ;draw_char@dccar stored from wreg
  5463  001D84  6E08               	movwf	draw_char@dccar,c
  5464                           
  5465                           ;afficheur.c: 230: if (dccar<32)
  5466  001D86  0E20               	movlw	32
  5467  001D88  6008               	cpfslt	draw_char@dccar,c
  5468  001D8A  D002               	goto	i2l3446
  5469                           
  5470                           ;afficheur.c: 231: {
  5471                           ;afficheur.c: 232: dccar=0x3F;
  5472  001D8C  0E3F               	movlw	63
  5473  001D8E  6E08               	movwf	draw_char@dccar,c
  5474  001D90                     i2l3446:
  5475                           
  5476                           ;afficheur.c: 233: }
  5477                           ;afficheur.c: 234: if (dccar>0x9F)
  5478  001D90  0E9F               	movlw	159
  5479  001D92  6408               	cpfsgt	draw_char@dccar,c
  5480  001D94  D002               	goto	i2l3450
  5481                           
  5482                           ;afficheur.c: 235: {
  5483                           ;afficheur.c: 236: dccar=0x3F;
  5484  001D96  0E3F               	movlw	63
  5485  001D98  6E08               	movwf	draw_char@dccar,c
  5486  001D9A                     i2l3450:
  5487                           
  5488                           ;afficheur.c: 237: }
  5489                           ;afficheur.c: 238: dccar=dccar-32;
  5490  001D9A  5008               	movf	draw_char@dccar,w,c
  5491  001D9C  0FE0               	addlw	224
  5492  001D9E  6E08               	movwf	draw_char@dccar,c
  5493                           
  5494                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5495  001DA0  D001               	goto	i2l3452
  5496  001DA2                     i2l982:
  5497  001DA2  F000               	nop	
  5498  001DA4                     i2l3452:
  5499  001DA4  0EC0               	movlw	192
  5500  001DA6  6E05               	movwf	d1command@cmd,c
  5501  001DA8  5008               	movf	draw_char@dccar,w,c
  5502  001DAA  EC8A  F00E         	call	_d1command
  5503  001DAE  0900               	iorlw	0
  5504  001DB0  A4D8               	btfss	status,2,c
  5505  001DB2  0012               	return	
  5506  001DB4  D7F6               	goto	i2l982
  5507  001DB6                     __end_of_draw_char:
  5508                           	opt stack 0
  5509                           tosu	equ	0xFFF
  5510                           tosh	equ	0xFFE
  5511                           tosl	equ	0xFFD
  5512                           stkptr	equ	0xFFC
  5513                           pclatu	equ	0xFFB
  5514                           pclath	equ	0xFFA
  5515                           tblptru	equ	0xFF8
  5516                           tblptrh	equ	0xFF7
  5517                           tblptrl	equ	0xFF6
  5518                           tablat	equ	0xFF5
  5519                           prodh	equ	0xFF4
  5520                           prodl	equ	0xFF3
  5521                           intcon	equ	0xFF2
  5522                           intcon2	equ	0xFF1
  5523                           postinc0	equ	0xFEE
  5524                           fsr0h	equ	0xFEA
  5525                           fsr0l	equ	0xFE9
  5526                           wreg	equ	0xFE8
  5527                           postinc1	equ	0xFE6
  5528                           fsr1h	equ	0xFE2
  5529                           fsr1l	equ	0xFE1
  5530                           bsr	equ	0xFE0
  5531                           indf2	equ	0xFDF
  5532                           fsr2h	equ	0xFDA
  5533                           fsr2l	equ	0xFD9
  5534                           status	equ	0xFD8
  5535                           
  5536 ;; *************** function _clear_text *****************
  5537 ;; Defined at:
  5538 ;;		line 287 in file "afficheur.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  add             2    8[COMRAM] unsigned int 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;Total ram usage:        2 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    3
  5559 ;; This function calls:
  5560 ;;		_d1command
  5561 ;;		_d2command
  5562 ;; This function is called by:
  5563 ;;		_tache1
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text27
  5568  001DB6                     __ptext27:
  5569                           	opt stack 0
  5570  001DB6                     _clear_text:
  5571                           	opt stack 24
  5572                           
  5573                           ;afficheur.c: 289: unsigned int add;
  5574                           ;afficheur.c: 291: d2command(0,0,0x24);
  5575                           
  5576                           ;incstack = 0
  5577  001DB6  0E00               	movlw	0
  5578  001DB8  6E05               	movwf	d2command@d2,c
  5579  001DBA  0E24               	movlw	36
  5580  001DBC  6E06               	movwf	d2command@cmd,c
  5581  001DBE  0E00               	movlw	0
  5582  001DC0  EC99  F00D         	call	_d2command
  5583                           
  5584                           ;afficheur.c: 292: for (add=0;add!=0x8000;add++)
  5585  001DC4  0E00               	movlw	0
  5586  001DC6  6E0A               	movwf	clear_text@add+1,c
  5587  001DC8  0E00               	movlw	0
  5588  001DCA  6E09               	movwf	clear_text@add,c
  5589  001DCC                     i2l3404:
  5590  001DCC  0E80               	movlw	128
  5591  001DCE  180A               	xorwf	clear_text@add+1,w,c
  5592  001DD0  1009               	iorwf	clear_text@add,w,c
  5593  001DD2  B4D8               	btfsc	status,2,c
  5594  001DD4  0012               	return	
  5595                           
  5596                           ;afficheur.c: 293: {
  5597                           ;afficheur.c: 294: d1command(0x00,0xC0);
  5598  001DD6  0EC0               	movlw	192
  5599  001DD8  6E05               	movwf	d1command@cmd,c
  5600  001DDA  0E00               	movlw	0
  5601  001DDC  EC8A  F00E         	call	_d1command
  5602  001DE0  4A09               	infsnz	clear_text@add,f,c
  5603  001DE2  2A0A               	incf	clear_text@add+1,f,c
  5604  001DE4  D7F3               	goto	i2l3404
  5605  001DE6                     __end_of_clear_text:
  5606                           	opt stack 0
  5607                           tosu	equ	0xFFF
  5608                           tosh	equ	0xFFE
  5609                           tosl	equ	0xFFD
  5610                           stkptr	equ	0xFFC
  5611                           pclatu	equ	0xFFB
  5612                           pclath	equ	0xFFA
  5613                           tblptru	equ	0xFF8
  5614                           tblptrh	equ	0xFF7
  5615                           tblptrl	equ	0xFF6
  5616                           tablat	equ	0xFF5
  5617                           prodh	equ	0xFF4
  5618                           prodl	equ	0xFF3
  5619                           intcon	equ	0xFF2
  5620                           intcon2	equ	0xFF1
  5621                           postinc0	equ	0xFEE
  5622                           fsr0h	equ	0xFEA
  5623                           fsr0l	equ	0xFE9
  5624                           wreg	equ	0xFE8
  5625                           postinc1	equ	0xFE6
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           bsr	equ	0xFE0
  5629                           indf2	equ	0xFDF
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function _clear_graphics *****************
  5635 ;; Defined at:
  5636 ;;		line 298 in file "afficheur.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  add             2    8[COMRAM] unsigned int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;Total ram usage:        2 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    3
  5657 ;; This function calls:
  5658 ;;		_d1command
  5659 ;;		_d2command
  5660 ;; This function is called by:
  5661 ;;		_tache1
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text28
  5666  001DE6                     __ptext28:
  5667                           	opt stack 0
  5668  001DE6                     _clear_graphics:
  5669                           	opt stack 24
  5670                           
  5671                           ;afficheur.c: 300: unsigned int add;
  5672                           ;afficheur.c: 302: d2command(0,0x80,0x24);
  5673                           
  5674                           ;incstack = 0
  5675  001DE6  0E80               	movlw	128
  5676  001DE8  6E05               	movwf	d2command@d2,c
  5677  001DEA  0E24               	movlw	36
  5678  001DEC  6E06               	movwf	d2command@cmd,c
  5679  001DEE  0E00               	movlw	0
  5680  001DF0  EC99  F00D         	call	_d2command
  5681                           
  5682                           ;afficheur.c: 303: for (add=0x8000;add!=0xF800;add++)
  5683  001DF4  0E80               	movlw	128
  5684  001DF6  6E0A               	movwf	clear_graphics@add+1,c
  5685  001DF8  0E00               	movlw	0
  5686  001DFA  6E09               	movwf	clear_graphics@add,c
  5687  001DFC                     i2l3418:
  5688  001DFC  0EF8               	movlw	248
  5689  001DFE  180A               	xorwf	clear_graphics@add+1,w,c
  5690  001E00  1009               	iorwf	clear_graphics@add,w,c
  5691  001E02  B4D8               	btfsc	status,2,c
  5692  001E04  0012               	return	
  5693                           
  5694                           ;afficheur.c: 304: {
  5695                           ;afficheur.c: 305: d1command(0x00,0xC0);
  5696  001E06  0EC0               	movlw	192
  5697  001E08  6E05               	movwf	d1command@cmd,c
  5698  001E0A  0E00               	movlw	0
  5699  001E0C  EC8A  F00E         	call	_d1command
  5700  001E10  4A09               	infsnz	clear_graphics@add,f,c
  5701  001E12  2A0A               	incf	clear_graphics@add+1,f,c
  5702  001E14  D7F3               	goto	i2l3418
  5703  001E16                     __end_of_clear_graphics:
  5704                           	opt stack 0
  5705                           tosu	equ	0xFFF
  5706                           tosh	equ	0xFFE
  5707                           tosl	equ	0xFFD
  5708                           stkptr	equ	0xFFC
  5709                           pclatu	equ	0xFFB
  5710                           pclath	equ	0xFFA
  5711                           tblptru	equ	0xFF8
  5712                           tblptrh	equ	0xFF7
  5713                           tblptrl	equ	0xFF6
  5714                           tablat	equ	0xFF5
  5715                           prodh	equ	0xFF4
  5716                           prodl	equ	0xFF3
  5717                           intcon	equ	0xFF2
  5718                           intcon2	equ	0xFF1
  5719                           postinc0	equ	0xFEE
  5720                           fsr0h	equ	0xFEA
  5721                           fsr0l	equ	0xFE9
  5722                           wreg	equ	0xFE8
  5723                           postinc1	equ	0xFE6
  5724                           fsr1h	equ	0xFE2
  5725                           fsr1l	equ	0xFE1
  5726                           bsr	equ	0xFE0
  5727                           indf2	equ	0xFDF
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function _d2command *****************
  5733 ;; Defined at:
  5734 ;;		line 128 in file "afficheur.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  d1              1    wreg     unsigned char 
  5737 ;;  d2              1    4[COMRAM] unsigned char 
  5738 ;;  cmd             1    5[COMRAM] unsigned char 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  d1              1    6[COMRAM] unsigned char 
  5741 ;;  res             1    7[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;Total ram usage:        4 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    2
  5758 ;; This function calls:
  5759 ;;		_delai_us_char
  5760 ;;		_wait_status_ok
  5761 ;;		_write_c_aff
  5762 ;;		_write_d_aff
  5763 ;; This function is called by:
  5764 ;;		_initialisation_afficheur
  5765 ;;		_goto_lico
  5766 ;;		_clear_text
  5767 ;;		_clear_graphics
  5768 ;;		_plot1
  5769 ;;		_clear_cgram
  5770 ;;		_plot0
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text29
  5775  001B32                     __ptext29:
  5776                           	opt stack 0
  5777  001B32                     _d2command:
  5778                           	opt stack 24
  5779                           
  5780                           ;incstack = 0
  5781                           ;d2command@d1 stored from wreg
  5782  001B32  6E07               	movwf	d2command@d1,c
  5783                           
  5784                           ;afficheur.c: 130: unsigned char res;
  5785                           ;afficheur.c: 132: res=0;
  5786  001B34  0E00               	movlw	0
  5787  001B36  6E08               	movwf	d2command@res,c
  5788                           
  5789                           ;afficheur.c: 134: if (wait_status_ok()==1)
  5790  001B38  EC48  F00D         	call	_wait_status_ok	;wreg free
  5791  001B3C  06E8               	decf	wreg,f,c
  5792  001B3E  A4D8               	btfss	status,2,c
  5793  001B40  D01E               	goto	i2l3282
  5794                           
  5795                           ;afficheur.c: 135: {
  5796                           ;afficheur.c: 136: delai_us_char(12);
  5797  001B42  0E0C               	movlw	12
  5798  001B44  EC46  F00F         	call	_delai_us_char
  5799                           
  5800                           ;afficheur.c: 137: write_d_aff(d1);
  5801  001B48  5007               	movf	d2command@d1,w,c
  5802  001B4A  EC57  F00F         	call	_write_d_aff
  5803                           
  5804                           ;afficheur.c: 138: if (wait_status_ok()==1)
  5805  001B4E  EC48  F00D         	call	_wait_status_ok	;wreg free
  5806  001B52  06E8               	decf	wreg,f,c
  5807  001B54  A4D8               	btfss	status,2,c
  5808  001B56  D013               	goto	i2l3282
  5809                           
  5810                           ;afficheur.c: 139: {
  5811                           ;afficheur.c: 140: delai_us_char(12);
  5812  001B58  0E0C               	movlw	12
  5813  001B5A  EC46  F00F         	call	_delai_us_char
  5814                           
  5815                           ;afficheur.c: 141: write_d_aff(d2);
  5816  001B5E  5005               	movf	d2command@d2,w,c
  5817  001B60  EC57  F00F         	call	_write_d_aff
  5818                           
  5819                           ;afficheur.c: 142: if (wait_status_ok()==1)
  5820  001B64  EC48  F00D         	call	_wait_status_ok	;wreg free
  5821  001B68  06E8               	decf	wreg,f,c
  5822  001B6A  A4D8               	btfss	status,2,c
  5823  001B6C  D008               	goto	i2l3282
  5824                           
  5825                           ;afficheur.c: 143: {
  5826                           ;afficheur.c: 144: delai_us_char(12);
  5827  001B6E  0E0C               	movlw	12
  5828  001B70  EC46  F00F         	call	_delai_us_char
  5829                           
  5830                           ;afficheur.c: 145: write_c_aff(cmd);
  5831  001B74  5006               	movf	d2command@cmd,w,c
  5832  001B76  EC64  F00F         	call	_write_c_aff
  5833                           
  5834                           ;afficheur.c: 147: res=1;
  5835  001B7A  0E01               	movlw	1
  5836  001B7C  6E08               	movwf	d2command@res,c
  5837  001B7E                     i2l3282:
  5838                           
  5839                           ;afficheur.c: 148: }
  5840                           ;afficheur.c: 149: }
  5841                           ;afficheur.c: 150: }
  5842                           ;afficheur.c: 151: return res;
  5843  001B7E  5008               	movf	d2command@res,w,c
  5844  001B80  0012               	return	
  5845  001B82                     __end_of_d2command:
  5846                           	opt stack 0
  5847                           tosu	equ	0xFFF
  5848                           tosh	equ	0xFFE
  5849                           tosl	equ	0xFFD
  5850                           stkptr	equ	0xFFC
  5851                           pclatu	equ	0xFFB
  5852                           pclath	equ	0xFFA
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           intcon2	equ	0xFF1
  5861                           postinc0	equ	0xFEE
  5862                           fsr0h	equ	0xFEA
  5863                           fsr0l	equ	0xFE9
  5864                           wreg	equ	0xFE8
  5865                           postinc1	equ	0xFE6
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           bsr	equ	0xFE0
  5869                           indf2	equ	0xFDF
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           
  5874 ;; *************** function _d1command *****************
  5875 ;; Defined at:
  5876 ;;		line 106 in file "afficheur.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  d1              1    wreg     unsigned char 
  5879 ;;  cmd             1    4[COMRAM] unsigned char 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  d1              1    5[COMRAM] unsigned char 
  5882 ;;  res             1    6[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      unsigned char 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:        3 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    2
  5899 ;; This function calls:
  5900 ;;		_delai_us_char
  5901 ;;		_wait_status_ok
  5902 ;;		_write_c_aff
  5903 ;;		_write_d_aff
  5904 ;; This function is called by:
  5905 ;;		_initialisation_afficheur
  5906 ;;		_draw_char
  5907 ;;		_draw_string
  5908 ;;		_draw_hex8
  5909 ;;		_clear_text
  5910 ;;		_clear_graphics
  5911 ;;		_clear_cgram
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text30
  5916  001D14                     __ptext30:
  5917                           	opt stack 0
  5918  001D14                     _d1command:
  5919                           	opt stack 24
  5920                           
  5921                           ;incstack = 0
  5922                           ;d1command@d1 stored from wreg
  5923  001D14  6E06               	movwf	d1command@d1,c
  5924                           
  5925                           ;afficheur.c: 108: unsigned char res;
  5926                           ;afficheur.c: 110: res=0;
  5927  001D16  0E00               	movlw	0
  5928  001D18  6E07               	movwf	d1command@res,c
  5929                           
  5930                           ;afficheur.c: 112: if (wait_status_ok()==1)
  5931  001D1A  EC48  F00D         	call	_wait_status_ok	;wreg free
  5932  001D1E  06E8               	decf	wreg,f,c
  5933  001D20  A4D8               	btfss	status,2,c
  5934  001D22  D013               	goto	i2l3256
  5935                           
  5936                           ;afficheur.c: 113: {
  5937                           ;afficheur.c: 114: delai_us_char(12);
  5938  001D24  0E0C               	movlw	12
  5939  001D26  EC46  F00F         	call	_delai_us_char
  5940                           
  5941                           ;afficheur.c: 115: write_d_aff(d1);
  5942  001D2A  5006               	movf	d1command@d1,w,c
  5943  001D2C  EC57  F00F         	call	_write_d_aff
  5944                           
  5945                           ;afficheur.c: 116: if (wait_status_ok()==1)
  5946  001D30  EC48  F00D         	call	_wait_status_ok	;wreg free
  5947  001D34  06E8               	decf	wreg,f,c
  5948  001D36  A4D8               	btfss	status,2,c
  5949  001D38  D008               	goto	i2l3256
  5950                           
  5951                           ;afficheur.c: 117: {
  5952                           ;afficheur.c: 118: delai_us_char(12);
  5953  001D3A  0E0C               	movlw	12
  5954  001D3C  EC46  F00F         	call	_delai_us_char
  5955                           
  5956                           ;afficheur.c: 119: write_c_aff(cmd);
  5957  001D40  5005               	movf	d1command@cmd,w,c
  5958  001D42  EC64  F00F         	call	_write_c_aff
  5959                           
  5960                           ;afficheur.c: 121: res=1;
  5961  001D46  0E01               	movlw	1
  5962  001D48  6E07               	movwf	d1command@res,c
  5963  001D4A                     i2l3256:
  5964                           
  5965                           ;afficheur.c: 122: }
  5966                           ;afficheur.c: 124: }
  5967                           ;afficheur.c: 125: return res;
  5968  001D4A  5007               	movf	d1command@res,w,c
  5969  001D4C  0012               	return	
  5970  001D4E                     __end_of_d1command:
  5971                           	opt stack 0
  5972                           tosu	equ	0xFFF
  5973                           tosh	equ	0xFFE
  5974                           tosl	equ	0xFFD
  5975                           stkptr	equ	0xFFC
  5976                           pclatu	equ	0xFFB
  5977                           pclath	equ	0xFFA
  5978                           tblptru	equ	0xFF8
  5979                           tblptrh	equ	0xFF7
  5980                           tblptrl	equ	0xFF6
  5981                           tablat	equ	0xFF5
  5982                           prodh	equ	0xFF4
  5983                           prodl	equ	0xFF3
  5984                           intcon	equ	0xFF2
  5985                           intcon2	equ	0xFF1
  5986                           postinc0	equ	0xFEE
  5987                           fsr0h	equ	0xFEA
  5988                           fsr0l	equ	0xFE9
  5989                           wreg	equ	0xFE8
  5990                           postinc1	equ	0xFE6
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           bsr	equ	0xFE0
  5994                           indf2	equ	0xFDF
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _write_d_aff *****************
  6000 ;; Defined at:
  6001 ;;		line 4 in file "afficheur.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  data            1    wreg     unsigned char 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  data            1    0[COMRAM] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;Total ram usage:        1 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_d1command
  6025 ;;		_d2command
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text31
  6030  001EAE                     __ptext31:
  6031                           	opt stack 0
  6032  001EAE                     _write_d_aff:
  6033                           	opt stack 25
  6034                           
  6035                           ;incstack = 0
  6036                           ;write_d_aff@data stored from wreg
  6037  001EAE  6E01               	movwf	write_d_aff@data,c
  6038                           
  6039                           ;afficheur.c: 6: LATH=data;
  6040  001EB0  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6041                           
  6042                           ;afficheur.c: 7: TRISH=0x00;
  6043  001EB4  0E00               	movlw	0
  6044  001EB6  6E99               	movwf	3993,c	;volatile
  6045                           
  6046                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6047  001EB8  9091               	bcf	3985,0,c	;volatile
  6048                           
  6049                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6050  001EBA  9691               	bcf	3985,3,c	;volatile
  6051                           
  6052                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6053  001EBC  9491               	bcf	3985,2,c	;volatile
  6054                           
  6055                           ;afficheur.c: 11: __nop();
  6056  001EBE  F000               	nop	
  6057                           
  6058                           ;afficheur.c: 12: __nop();
  6059  001EC0  F000               	nop	
  6060                           
  6061                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6062  001EC2  8491               	bsf	3985,2,c	;volatile
  6063                           
  6064                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6065  001EC4  8691               	bsf	3985,3,c	;volatile
  6066  001EC6  0012               	return		;funcret
  6067  001EC8                     __end_of_write_d_aff:
  6068                           	opt stack 0
  6069                           tosu	equ	0xFFF
  6070                           tosh	equ	0xFFE
  6071                           tosl	equ	0xFFD
  6072                           stkptr	equ	0xFFC
  6073                           pclatu	equ	0xFFB
  6074                           pclath	equ	0xFFA
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           prodh	equ	0xFF4
  6080                           prodl	equ	0xFF3
  6081                           intcon	equ	0xFF2
  6082                           intcon2	equ	0xFF1
  6083                           postinc0	equ	0xFEE
  6084                           fsr0h	equ	0xFEA
  6085                           fsr0l	equ	0xFE9
  6086                           wreg	equ	0xFE8
  6087                           postinc1	equ	0xFE6
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           bsr	equ	0xFE0
  6091                           indf2	equ	0xFDF
  6092                           fsr2h	equ	0xFDA
  6093                           fsr2l	equ	0xFD9
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _write_c_aff *****************
  6097 ;; Defined at:
  6098 ;;		line 17 in file "afficheur.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  command         1    wreg     unsigned char 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  command         1    0[COMRAM] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;Total ram usage:        1 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_command
  6122 ;;		_d1command
  6123 ;;		_d2command
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text32
  6128  001EC8                     __ptext32:
  6129                           	opt stack 0
  6130  001EC8                     _write_c_aff:
  6131                           	opt stack 25
  6132                           
  6133                           ;incstack = 0
  6134                           ;write_c_aff@command stored from wreg
  6135  001EC8  6E01               	movwf	write_c_aff@command,c
  6136                           
  6137                           ;afficheur.c: 19: LATH=command;
  6138  001ECA  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6139                           
  6140                           ;afficheur.c: 20: TRISH=0x00;
  6141  001ECE  0E00               	movlw	0
  6142  001ED0  6E99               	movwf	3993,c	;volatile
  6143                           
  6144                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6145  001ED2  8091               	bsf	3985,0,c	;volatile
  6146                           
  6147                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6148  001ED4  9691               	bcf	3985,3,c	;volatile
  6149                           
  6150                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6151  001ED6  9491               	bcf	3985,2,c	;volatile
  6152                           
  6153                           ;afficheur.c: 24: __nop();
  6154  001ED8  F000               	nop	
  6155                           
  6156                           ;afficheur.c: 25: __nop();
  6157  001EDA  F000               	nop	
  6158                           
  6159                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6160  001EDC  8491               	bsf	3985,2,c	;volatile
  6161                           
  6162                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6163  001EDE  8691               	bsf	3985,3,c	;volatile
  6164  001EE0  0012               	return		;funcret
  6165  001EE2                     __end_of_write_c_aff:
  6166                           	opt stack 0
  6167                           tosu	equ	0xFFF
  6168                           tosh	equ	0xFFE
  6169                           tosl	equ	0xFFD
  6170                           stkptr	equ	0xFFC
  6171                           pclatu	equ	0xFFB
  6172                           pclath	equ	0xFFA
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           intcon2	equ	0xFF1
  6181                           postinc0	equ	0xFEE
  6182                           fsr0h	equ	0xFEA
  6183                           fsr0l	equ	0xFE9
  6184                           wreg	equ	0xFE8
  6185                           postinc1	equ	0xFE6
  6186                           fsr1h	equ	0xFE2
  6187                           fsr1l	equ	0xFE1
  6188                           bsr	equ	0xFE0
  6189                           indf2	equ	0xFDF
  6190                           fsr2h	equ	0xFDA
  6191                           fsr2l	equ	0xFD9
  6192                           status	equ	0xFD8
  6193                           
  6194 ;; *************** function _wait_status_ok *****************
  6195 ;; Defined at:
  6196 ;;		line 53 in file "afficheur.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  res             1    3[COMRAM] unsigned char 
  6201 ;;  status          1    2[COMRAM] unsigned char 
  6202 ;;  err             1    1[COMRAM] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      unsigned char 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;Total ram usage:        3 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    1
  6219 ;; This function calls:
  6220 ;;		_delai_us_char
  6221 ;; This function is called by:
  6222 ;;		_command
  6223 ;;		_d1command
  6224 ;;		_d2command
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text33
  6229  001A90                     __ptext33:
  6230                           	opt stack 0
  6231  001A90                     _wait_status_ok:
  6232                           	opt stack 24
  6233                           
  6234                           ;afficheur.c: 55: unsigned char err,res,status;
  6235                           ;afficheur.c: 57: err=0;
  6236                           
  6237                           ;incstack = 0
  6238  001A90  0E00               	movlw	0
  6239  001A92  6E02               	movwf	wait_status_ok@err,c
  6240                           
  6241                           ;afficheur.c: 58: res=2;
  6242  001A94  0E02               	movlw	2
  6243  001A96  D01E               	goto	L7
  6244  001A98                     i2l940:
  6245                           
  6246                           ;afficheur.c: 60: {
  6247                           ;afficheur.c: 61: TRISH=0xFF;
  6248  001A98  6899               	setf	3993,c	;volatile
  6249                           
  6250                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6251  001A9A  8091               	bsf	3985,0,c	;volatile
  6252                           
  6253                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6254  001A9C  9691               	bcf	3985,3,c	;volatile
  6255                           
  6256                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6257  001A9E  9291               	bcf	3985,1,c	;volatile
  6258                           
  6259                           ;afficheur.c: 65: __nop();
  6260  001AA0  F000               	nop	
  6261                           
  6262                           ;afficheur.c: 66: status=PORTH;
  6263  001AA2  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6264                           
  6265                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6266  001AA6  8291               	bsf	3985,1,c	;volatile
  6267                           
  6268                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6269  001AA8  8691               	bsf	3985,3,c	;volatile
  6270                           
  6271                           ;afficheur.c: 70: status=(status&0x03);
  6272  001AAA  5003               	movf	wait_status_ok@status,w,c
  6273  001AAC  0B03               	andlw	3
  6274  001AAE  6E03               	movwf	wait_status_ok@status,c
  6275                           
  6276                           ;afficheur.c: 71: if (status!=0x03)
  6277  001AB0  0E03               	movlw	3
  6278  001AB2  1803               	xorwf	wait_status_ok@status,w,c
  6279  001AB4  B4D8               	btfsc	status,2,c
  6280  001AB6  D00D               	goto	i2l1912
  6281                           
  6282                           ;afficheur.c: 72: {
  6283                           ;afficheur.c: 73: err++;
  6284  001AB8  2A02               	incf	wait_status_ok@err,f,c
  6285                           
  6286                           ;afficheur.c: 74: delai_us_char(12);
  6287  001ABA  0E0C               	movlw	12
  6288  001ABC  EC46  F00F         	call	_delai_us_char
  6289                           
  6290                           ;afficheur.c: 75: if (err>=250)
  6291  001AC0  0EF9               	movlw	249
  6292  001AC2  6402               	cpfsgt	wait_status_ok@err,c
  6293  001AC4  D008               	goto	i2l1914
  6294                           
  6295                           ;afficheur.c: 76: {
  6296                           ;afficheur.c: 77: (INTCONbits.GIE = 0);
  6297  001AC6  9EF2               	bcf	intcon,7,c	;volatile
  6298                           
  6299                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6300  001AC8  948B               	bcf	3979,2,c	;volatile
  6301  001ACA  828B               	bsf	3979,1,c	;volatile
  6302  001ACC  808F               	bsf	3983,0,c	;volatile
  6303                           
  6304                           ;afficheur.c: 79: res=0;
  6305  001ACE  0E00               	movlw	0
  6306  001AD0  D001               	goto	L7
  6307  001AD2                     i2l1912:
  6308                           
  6309                           ;afficheur.c: 82: else
  6310                           ;afficheur.c: 83: {
  6311                           ;afficheur.c: 84: res=1;
  6312  001AD2  0E01               	movlw	1
  6313  001AD4                     L7:
  6314  001AD4  6E04               	movwf	wait_status_ok@res,c
  6315  001AD6                     i2l1914:
  6316  001AD6  0E02               	movlw	2
  6317  001AD8  1804               	xorwf	wait_status_ok@res,w,c
  6318  001ADA  B4D8               	btfsc	status,2,c
  6319  001ADC  D7DD               	goto	i2l940
  6320                           
  6321                           ;afficheur.c: 85: }
  6322                           ;afficheur.c: 86: }
  6323                           ;afficheur.c: 87: return res;
  6324  001ADE  5004               	movf	wait_status_ok@res,w,c
  6325  001AE0  0012               	return	
  6326  001AE2                     __end_of_wait_status_ok:
  6327                           	opt stack 0
  6328                           tosu	equ	0xFFF
  6329                           tosh	equ	0xFFE
  6330                           tosl	equ	0xFFD
  6331                           stkptr	equ	0xFFC
  6332                           pclatu	equ	0xFFB
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           intcon2	equ	0xFF1
  6342                           postinc0	equ	0xFEE
  6343                           fsr0h	equ	0xFEA
  6344                           fsr0l	equ	0xFE9
  6345                           wreg	equ	0xFE8
  6346                           postinc1	equ	0xFE6
  6347                           fsr1h	equ	0xFE2
  6348                           fsr1l	equ	0xFE1
  6349                           bsr	equ	0xFE0
  6350                           indf2	equ	0xFDF
  6351                           fsr2h	equ	0xFDA
  6352                           fsr2l	equ	0xFD9
  6353                           status	equ	0xFD8
  6354                           
  6355 ;; *************** function _delai_us_char *****************
  6356 ;; Defined at:
  6357 ;;		line 154 in file "afficheur.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  ucdelai         1    wreg     unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;Total ram usage:        1 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_wait_status_ok
  6381 ;;		_command
  6382 ;;		_d1command
  6383 ;;		_d2command
  6384 ;;		_initialisation_afficheur
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text34
  6389  001E8C                     __ptext34:
  6390                           	opt stack 0
  6391  001E8C                     _delai_us_char:
  6392                           	opt stack 24
  6393                           
  6394                           ;incstack = 0
  6395                           ;delai_us_char@ucdelai stored from wreg
  6396  001E8C  6E01               	movwf	delai_us_char@ucdelai,c
  6397                           
  6398                           ;afficheur.c: 157: while (ucdelai>0)
  6399  001E8E  D00B               	goto	i2l1860
  6400  001E90                     i2l964:
  6401                           
  6402                           ;afficheur.c: 158: {
  6403                           ;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop
      +                          ();__nop();
  6404  001E90  F000               	nop	
  6405  001E92  F000               	nop	
  6406  001E94  F000               	nop	
  6407  001E96  F000               	nop	
  6408  001E98  F000               	nop	
  6409  001E9A  F000               	nop	
  6410  001E9C  F000               	nop	
  6411  001E9E  F000               	nop	
  6412  001EA0  F000               	nop	
  6413  001EA2  F000               	nop	
  6414                           
  6415                           ;afficheur.c: 160: ucdelai--;
  6416  001EA4  0601               	decf	delai_us_char@ucdelai,f,c
  6417  001EA6                     i2l1860:
  6418  001EA6  5001               	movf	delai_us_char@ucdelai,w,c
  6419  001EA8  B4D8               	btfsc	status,2,c
  6420  001EAA  0012               	return	
  6421  001EAC  D7F1               	goto	i2l964
  6422  001EAE                     __end_of_delai_us_char:
  6423                           	opt stack 0
  6424                           tosu	equ	0xFFF
  6425                           tosh	equ	0xFFE
  6426                           tosl	equ	0xFFD
  6427                           stkptr	equ	0xFFC
  6428                           pclatu	equ	0xFFB
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           intcon2	equ	0xFF1
  6438                           postinc0	equ	0xFEE
  6439                           fsr0h	equ	0xFEA
  6440                           fsr0l	equ	0xFE9
  6441                           wreg	equ	0xFE8
  6442                           postinc1	equ	0xFE6
  6443                           fsr1h	equ	0xFE2
  6444                           fsr1l	equ	0xFE1
  6445                           bsr	equ	0xFE0
  6446                           indf2	equ	0xFDF
  6447                           fsr2h	equ	0xFDA
  6448                           fsr2l	equ	0xFD9
  6449                           status	equ	0xFD8
  6450                           tosu	equ	0xFFF
  6451                           tosh	equ	0xFFE
  6452                           tosl	equ	0xFFD
  6453                           stkptr	equ	0xFFC
  6454                           pclatu	equ	0xFFB
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           postinc1	equ	0xFE6
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           bsr	equ	0xFE0
  6472                           indf2	equ	0xFDF
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477                           	psect	text35
  6478  000000                     __ptext35:
  6479                           	opt stack 0
  6480                           tosu	equ	0xFFF
  6481                           tosh	equ	0xFFE
  6482                           tosl	equ	0xFFD
  6483                           stkptr	equ	0xFFC
  6484                           pclatu	equ	0xFFB
  6485                           pclath	equ	0xFFA
  6486                           tblptru	equ	0xFF8
  6487                           tblptrh	equ	0xFF7
  6488                           tblptrl	equ	0xFF6
  6489                           tablat	equ	0xFF5
  6490                           prodh	equ	0xFF4
  6491                           prodl	equ	0xFF3
  6492                           intcon	equ	0xFF2
  6493                           intcon2	equ	0xFF1
  6494                           postinc0	equ	0xFEE
  6495                           fsr0h	equ	0xFEA
  6496                           fsr0l	equ	0xFE9
  6497                           wreg	equ	0xFE8
  6498                           postinc1	equ	0xFE6
  6499                           fsr1h	equ	0xFE2
  6500                           fsr1l	equ	0xFE1
  6501                           bsr	equ	0xFE0
  6502                           indf2	equ	0xFDF
  6503                           fsr2h	equ	0xFDA
  6504                           fsr2l	equ	0xFD9
  6505                           status	equ	0xFD8
  6506                           
  6507                           	psect	rparam
  6508  0000                     tosu	equ	0xFFF
  6509                           tosh	equ	0xFFE
  6510                           tosl	equ	0xFFD
  6511                           stkptr	equ	0xFFC
  6512                           pclatu	equ	0xFFB
  6513                           pclath	equ	0xFFA
  6514                           tblptru	equ	0xFF8
  6515                           tblptrh	equ	0xFF7
  6516                           tblptrl	equ	0xFF6
  6517                           tablat	equ	0xFF5
  6518                           prodh	equ	0xFF4
  6519                           prodl	equ	0xFF3
  6520                           intcon	equ	0xFF2
  6521                           intcon2	equ	0xFF1
  6522                           postinc0	equ	0xFEE
  6523                           fsr0h	equ	0xFEA
  6524                           fsr0l	equ	0xFE9
  6525                           wreg	equ	0xFE8
  6526                           postinc1	equ	0xFE6
  6527                           fsr1h	equ	0xFE2
  6528                           fsr1l	equ	0xFE1
  6529                           bsr	equ	0xFE0
  6530                           indf2	equ	0xFDF
  6531                           fsr2h	equ	0xFDA
  6532                           fsr2l	equ	0xFD9
  6533                           status	equ	0xFD8
  6534                           
  6535                           	psect	temp
  6536  00002D                     btemp:
  6537                           	opt stack 0
  6538  00002D                     	ds	1
  6539  0000                     int$flags	set	btemp
  6540                           tosu	equ	0xFFF
  6541                           tosh	equ	0xFFE
  6542                           tosl	equ	0xFFD
  6543                           stkptr	equ	0xFFC
  6544                           pclatu	equ	0xFFB
  6545                           pclath	equ	0xFFA
  6546                           tblptru	equ	0xFF8
  6547                           tblptrh	equ	0xFF7
  6548                           tblptrl	equ	0xFF6
  6549                           tablat	equ	0xFF5
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           intcon	equ	0xFF2
  6553                           intcon2	equ	0xFF1
  6554                           postinc0	equ	0xFEE
  6555                           fsr0h	equ	0xFEA
  6556                           fsr0l	equ	0xFE9
  6557                           wreg	equ	0xFE8
  6558                           postinc1	equ	0xFE6
  6559                           fsr1h	equ	0xFE2
  6560                           fsr1l	equ	0xFE1
  6561                           bsr	equ	0xFE0
  6562                           indf2	equ	0xFDF
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8


Data Sizes:
    Strings     138
    Constant    0
    Data        0
    BSS         4
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      44
    BANK0           128      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 21
		 -> STR_18(CODE[4]), STR_17(CODE[3]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[6]), STR_11(CODE[6]), 
		 -> STR_10(CODE[10]), STR_9(CODE[9]), STR_8(CODE[6]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[7]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[8]), 

    puc	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), val_tos(COMRAM[3]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_Init
    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache2
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_goto_lico
    _tache1->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _draw_hex8->_d1command
    _draw_char->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             14    14      0   19726
                                             17 COMRAM    14    14      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     683
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     616
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     343
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     845
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     151
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   18198
                                             12 COMRAM     1     1      0
                     _clear_graphics
                         _clear_text
                          _draw_char
                          _draw_hex8
                        _draw_string
                          _goto_lico
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
         i2_initialisation_des_ports
 ---------------------------------------------------------------------------------
 (4) i2_initialisation_des_ports                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _plot1                                                4     3      1    3312
                                              8 COMRAM     4     3      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     552
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    2814
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     2     2      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _goto_lico                                            4     3      1    3007
                                              8 COMRAM     4     3      1
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _draw_string                                          2     0      2    1912
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0     941
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0     806
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    2650
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    2650
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _d2command                                            4     2      2    1889
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _d1command                                            3     2      1     715
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (6) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (7) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _clear_graphics
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _clear_text
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _draw_char
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _draw_hex8
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _draw_string
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _goto_lico
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     _initialisation_afficheur
       _check_status_ok
       _command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
       ___awdiv
       ___awmod
       _command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
       _d2command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
     i2_initialisation_des_ports
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      38        0.0%
BIGRAMhhhhhl        BE      0       0      39        0.0%
BIGRAMhhhhl         BE      0       0      40        0.0%
BIGRAMhhhl          BE      0       0      41        0.0%
BIGRAMhhl           BE      0       0      42        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            80      0       0      43        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BIGRAMl             5F      0       0      44        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      2C       1       46.8%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      29        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Aug 25 11:12:46 2016

           ?_lecture_8bit_analogique 0001    __size_of_initialisation_des_ports 004C  
                     _BSR_TEMPORAIRE 000062            ?_initialisation_des_ports 0001  
                        __CFG_ABW$MM 000000                         ___awdiv@sign 0006  
                                 _tc 0029                          __CFG_BORV$0 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       __CFG_CP4$OFF 000000                         __CFG_CP5$OFF 000000  
                       __CFG_CP6$OFF 000000                         __CFG_CP7$OFF 000000  
                       __CFG_CPB$OFF 000000                                  _BSR 000FE0  
                       ?_draw_string 0008                         __CFG_CPD$OFF 000000  
                                _puc 0024                         ___awmod@sign 0006  
                                prod 000FF3                                  wreg 000FE8  
                      _stid_delai_us 1EFA                         __CFG_WAIT$ON 000000  
                               l2516 1F2E                                 l2518 1F34  
                               l3972 1EF6                                 STR_1 1059  
                               STR_2 1088                                 STR_3 1085  
                               STR_4 107F                                 STR_5 1068  
                               STR_6 103B                                 STR_7 1016  
                               STR_8 1075                                 STR_9 1050  
                               _T0IE 007F95                                 _T0IF 007F92  
                               _LATH 000F90                                 _LATJ 000F91  
                               _TMR0 000FD6      __end_of_fonction_d_interruption 0362  
                       __CFG_WDTPS$1 000000                                 _TOSH 000FFE  
                               _TOSL 000FFD                                 _WREG 000FE8  
                               _TOSU 000FFF                                 _TP_x 000067  
                               _TP_y 000068                                 _Init 1F2A  
                   _FSR0H_TEMPORAIRE 000063                                 _main 1EE2  
                               _fptr 0021                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 002D                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0362                        __CFG_IESO$OFF 000000  
         ?_initialisation_du_systeme 0001                        __CFG_FOSC$HS1 000000  
                      __CFG_MCLRE$ON 000000                         ___param_bank 000010  
                   ??_wait_status_ok 0002                     ?_lecture_normale 0003  
                      __CFG_RETEN$ON 000000                                ?_Init 0001  
                              ?_main 0001                      __end_of___awdiv 1972  
                              STR_10 1046                                STR_11 106F  
                              STR_12 1010                                STR_13 1061  
                              STR_14 1001                                STR_15 1023  
                              STR_16 102F                                STR_17 1082  
                              STR_18 107B                      __end_of___awmod 19E2  
                              _T0CON 000FD5                      ___awdiv@divisor 0003  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR2H 000FDA                                _FSR0L 000FE9  
                     __CFG_DEBUG$OFF 000000                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 1A90  
                              i2l132 1D6E                                i2l135 1D7C  
                              i2l403 136C                                i2l500 1638  
                              i2l513 1F14                                i2l384 115E  
                              i2l495 15F6                                i2l940 1A98  
                              i2l964 1E90                                i2l972 170E  
                    ___awdiv@counter 0005                                i2l982 1DA2  
                              i2l990 1C1C                                i2l999 19FE  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 1EC8  
                        _write_d_aff 1EAE                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                        __CFG_WRT4$OFF 000000  
                     __CFG_EBRT0$OFF 000000                        __CFG_WRT5$OFF 000000  
                     __CFG_EBRT1$OFF 000000                        __CFG_WRT6$OFF 000000  
                     __CFG_EBRT2$OFF 000000                        __CFG_WRT7$OFF 000000  
                     __CFG_EBRT3$OFF 000000                       __CFG_EBRT4$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBRT5$OFF 000000  
                     __CFG_EBRT6$OFF 000000                       __CFG_EBRT7$OFF 000000  
                    __end_of_command 1E8C                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                              _badge 000075                       __CFG_EBRTB$OFF 000000  
                              _plot1 1848                                _queue 000069  
                     __CFG_BOREN$OFF 000000                                tablat 000FF5  
              __end_of_delai_us_char 1EAE                      _check_status_ok 1E16  
                              status 000FD8   __end_ofi2_initialisation_des_ports 1C1A  
         i2_initialisation_des_ports 1BCE              __size_of_clear_graphics 0030  
      initialisation_du_systeme@temp 0020                      __initialization 1F3E  
                       __end_of_Init 1F3E           lecture_8bit_analogique@ret 0001  
                       __end_of_main 1EFA                               ??_Init 0020  
                             ??_main 0021                        __activetblptr 000003  
                     __CFG_PLLCFG$ON 000000                   __size_of_d1command 003A  
                 __size_of_d2command 0050                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001                        _n_octet_badge 00007F  
                             _MEMCON 000F26                               i2l1004 1A2A  
                             i2l1012 1B1A                      __CFG_BBSIZ$BB1K 000000  
                             i2l1230 17DA                               i2l1231 17EA  
                             i2l1240 1EFC                               i2l1233 17F4  
                             i2l3300 1902                               i2l2086 1D80  
                             i2l3312 1928                               i2l3314 1930  
                             i2l3306 1912                               i2l3404 1DCC  
                             i2l3332 1968                               i2l3324 1950  
                             i2l3316 1934                               i2l1645 1A86  
                     __CFG_WDTEN$OFF 000000                               i2l1912 1AD2  
                             i2l3256 1D4A                               i2l3440 1B1C  
                             i2l3328 195A                               i2l3360 19C0  
                             i2l3352 19A0                               i2l3344 1986  
                             i2l4136 01AA                               i2l1914 1AD6  
                             i2l3282 1B7E                               i2l3418 1DFC  
                             i2l3450 1D9A                               i2l3434 1AF6  
                             i2l3354 19A8                               i2l3506 1F20  
                             i2l3290 1F08                               i2l1860 1EA6  
                             i2l3452 1DA4                               i2l3460 1C42  
                             i2l3356 19AC                               i2l3364 19CA  
                             i2l3348 1992                               i2l3524 17C8  
                             i2l3516 17B2                               _PCLATH 000FFA  
                             i2l3446 1D90                               i2l3438 1B00  
                             i2l1926 1E3A                               i2l3456 1C1E  
                             i2l3368 19D8                               i2l2760 1D00  
                             i2l3528 17E2                               i2l3560 1844  
                             i2l3474 1A22                               i2l3466 19F6  
                             i2l3386 16F8                               i2l3490 189C  
                             i2l3482 187C                               i2l3802 119E  
                             i2l3570 1A54                               i2l3476 1A2C  
                             i2l3468 1A00                               i2l3396 1710  
                             i2l3492 18A4                               i2l3484 1884  
                             i2l3804 11A4                               i2l3572 1A5C  
                             i2l3900 15DA                               i2l2748 1CD6  
                             i2l3548 1826                               i2l4292 02F8  
                             i2l3486 188C                               i2l3822 1206  
                             i2l3582 1A7C                               i2l3574 1A60  
                             i2l2766 1C98                               i2l3488 1894  
                             i2l3496 18AC                               i2l3832 122A  
                             i2l3824 120C                               i2l2784 1C5A  
                             _PCLATU 000FFB                               i2l3850 1260  
                             i2l2778 1CC2                               i2l3860 1290  
                             i2l3836 1232                               i2l3932 1658  
                             i2l3916 1616                               i2l2796 1C84  
                             i2l3870 12C2                               i2l3846 1258  
                             i2l3782 1136                               i2l3792 1170  
                             i2l3874 12DA                               i2l3858 1284  
                             i2l3794 117C                               i2l3876 12E4  
                             i2l3868 12BC                               i2l3948 1E42  
                             i2l3958 1E62                               i2l3992 006E  
                             i2l3898 15D6                               _TABLAT 000FF5  
                         _Tick_Count 000071                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                     __CFG_XINST$OFF 000000                      __CFG_EASHFT$OFF 000000  
                          ??___awdiv 0005                       __CFG_STVREN$ON 000000  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 108C                               _tache2 15D6  
                             _tache3 1CD6                               _tache4 1C98  
                             _tache5 1C5A                               _tache6 1E42  
                   ___awdiv@quotient 0007                      ___awmod@divisor 0003  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               plot1@x 000C  
                             plot1@y 0009                     __end_of_tp_delai 1F2A  
                       __mediumconst 0000                 __size_of_draw_string 0040  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1E42  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 1F46                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                    __end_of_d1command 1D4E  
                  __end_of_d2command 1B82                        __end_of_plot1 18EE  
   __size_of_lecture_8bit_analogique 0036                   __size_of_draw_char 0032  
                 __size_of_draw_hex8 005C                              ??_plot1 000A  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 0021  
                     _clear_graphics 1DE6                   __size_of_goto_lico 0050  
        ??_initialisation_du_systeme 0020                   __CFG_CCP2MX$PORTBE 000000  
                         _clear_text 1DB6             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                         ?_write_d_aff 0001  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8             _initialisation_afficheur 16CE  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                              Init@sem 0020  
                        _Val_sem_cna 002C               __end_of_clear_graphics 1E16  
                  stid_delai_us@isdu 0001                 lecture_normale@n_bit 0007  
               lecture_normale@octet 0008          ?i2_initialisation_des_ports 0001  
           _initialisation_des_ports 1B82                      __CFG_PWRTEN$OFF 000000  
                          _DEMARRAGE 000065                              __Hparam 0000  
                            __Lparam 0000                            ?_tp_delai 0001  
                  __end_of_draw_char 1DB6                    __end_of_draw_hex8 1A3E  
                            ___awdiv 18EE                              ___awmod 1972  
                            ___lwdiv 1A3E                         __psmallconst 1000  
              __CFG_RTCOSC$INTOSCREF 000000                              __pcinit 1F3E  
                    __size_of_tache1 02E4                      __size_of_tache2 00F8  
                    __size_of_tache3 003E                      __size_of_tache4 003E  
                    __size_of_tache5 003E                      __size_of_tache6 0028  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 1EE2                              __ptext1 1370  
                            __ptext2 1B82                              __ptext3 1F2A  
                            __ptext5 1E42                              __ptext6 179A  
                            __ptext7 1EFA                              __ptext8 1C5A  
                            __ptext9 1C98                              _command 1E6A  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
          _initialisation_du_systeme 1370                     ___awmod@dividend 0001  
                  __end_of_goto_lico 1B32             __size_of_lecture_normale 00AE  
                  __CFG_MSSPMSK$MSK5 000000                              _val_tos 0026  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 1F46                              tache1@i 000D  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_text 0001                           ??_tp_delai 0003  
                       goto_lico@adr 000B                            _PORTBbits 000F81  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
             __size_of_delai_us_char 0022              _lecture_8bit_analogique 1D4E  
            __size_of_wait_status_ok 0052                            _TRISCbits 000F94  
                          _STKPTR_T1 000103                            _STKPTR_T2 000203  
                          _STKPTR_T3 000303                            _STKPTR_T4 000403  
                          _STKPTR_T5 000503                            _STKPTR_T6 000603  
                          _TRISDbits 000F95                            _TRISGbits 000F98  
                          __CFG_BW$8 000000                    clear_graphics@add 0009  
                         command@cmd 0006                           command@res 0005  
                         draw_hex8@c 0009                   check_status_ok@res 0001  
             lecture_normale@n_octet 0006       lecture_8bit_analogique@channel 0002  
                          _d1command 1D14                            _d2command 1B32  
                     __end_of_tache1 1370                       __end_of_tache2 16CE  
                     __end_of_tache3 1D14                       __end_of_tache4 1CD6  
                     __end_of_tache5 1C98                       __end_of_tache6 1E6A  
                      ??_draw_string 000A               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 1F12                  start_initialization 1F3E  
__size_ofi2_initialisation_des_ports 004C                 __size_of_write_c_aff 001A  
               __size_of_write_d_aff 001A                  __size_of_clear_text 0030  
                  ??_lecture_normale 0005                        _delai_us_char 1E8C  
                           ??_tache1 000D                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 0029     __size_of_fonction_d_interruption 035A  
         ??_initialisation_des_ports 0020                  __end_of_draw_string 1C5A  
 __size_of_initialisation_du_systeme 0266                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                           ?___awdiv 0001                             ?___awmod 0001  
                           ?___lwdiv 0001                    __size_of_tp_delai 0018  
                  _pointeur_de_tache 000070                            _draw_char 1D84  
                          _draw_hex8 19E2                             ?_command 0001  
                     _wait_status_ok 1A90                          __smallconst 1000  
                          _contexte1 000100                            _contexte2 000200  
                          _contexte3 000300                            _contexte4 000400  
                          _contexte5 000500                            _contexte6 000600  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                       __size_of_plot1 00A6  
                 write_c_aff@command 0001                            _goto_lico 1AE2  
    __end_of_lecture_8bit_analogique 1D84                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 15D6  
                           _LATGbits 000F8F                             _LATJbits 000F91  
           __size_of_check_status_ok 002C                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1AE2  
                        ??_d1command 0006                    __CFG_ECCPMX$PORTH 000000  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   __CFG_SOSCSEL$DIG 000000                          _draw_string 1C1A  
                           _TP_appui 000066                          _INTCON2bits 000FF1  
                    ??_delai_us_char 0001                   __end_of_clear_text 1DE6  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           __Lrparam 0000     __end_of_initialisation_afficheur 179A  
                   __size_of___awdiv 0084                     __size_of___awmod 0070  
                   __size_of___lwdiv 0052                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 179A                     __size_of_command 0022  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 1BCE                      ___lwdiv@counter 0007  
                           __ptext10 1CD6                             __ptext11 15D6  
                           __ptext20 16CE                             __ptext12 1F12  
                           __ptext21 1E6A                             __ptext13 1A3E  
                           __ptext30 1D14                             __ptext22 1E16  
                           __ptext14 108C                             __ptext31 1EAE  
                           __ptext23 1AE2                             __ptext15 1BCE  
                           __ptext32 1EC8                             __ptext24 1C1A  
                           __ptext16 1848                             __ptext33 1A90  
                           __ptext25 19E2                             __ptext17 1972  
                           __ptext34 1E8C                             __ptext26 1D84  
                           __ptext18 18EE                             __ptext35 0000  
                           __ptext27 1DB6                             __ptext19 1D4E  
                           __ptext28 1DE6                             __ptext29 1B32  
                      __size_of_Init 0014                        __size_of_main 0018  
                           _tp_delai 1F12                             int$flags 002D  
                  ??_check_status_ok 0001                  __CFG_INTOSCSEL$HIGH 000000  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 000A  
                     goto_lico@ligne 000A         ??i2_initialisation_des_ports 0001  
             __size_of_stid_delai_us 0018              __end_of_lecture_normale 1848  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 0012                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 1EE2  
                __end_of_write_d_aff 1EC8    __size_of_initialisation_afficheur 00CC  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                  __CFG_BORPWR$ZPBORMV 000000  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
